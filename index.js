const tmi = require('tmi.js'),
    { channel, channelt, username, password, client_id, api_access_token, channel_access_token, boy, girl, eiad } = require('./settings.json');

var request = require('request');

const options = {
    options: { debug: true },
    connection: {
        reconnect: true,
        secure: true
    },
    identity : {
        username,
        password
    },
    channels: [channel, channelt]
};

const headers = {
    Authorization: `Bearer ${api_access_token}`,
    'Client-Id': client_id
}

const headers_2 = {
    Authorization: `Bearer ${channel_access_token}`,
    'Client-Id': client_id,
    'Content-Type': 'application/json'
}

async function getUser(user) {
    const params = { login: user };
    const result = await fetch(`https://api.twitch.tv/helix/users?` + new URLSearchParams(params), {
      method: 'GET',
      headers: headers
    }).then((response => response.json()))
    
    return result
}

async function getRandomViewer(channel_name) {
    const params = {channel : channel_name}

    const result = await fetch("https://2g.be/twitch/randomviewer.php?" + new URLSearchParams(params), {
        method: 'GET',
    }).then((response => response.text()))

    return result
}

function extractArgs(str) {
    const regex = /\(([^)]*)\)|\b(\w+)\b/g;
    return Array.from(str.matchAll(regex), match => match[1] || match[2]);
}

const client = new tmi.Client(options);
client.connect().catch(console.error);

const list1 = [ 'ูุงุช ุญุจ ูุญูุต ููุน ููุจ ุดุงู','ุฌูุจ ูู ุนุฏุณ ูุน ุฎุจุฒ ุชููุณ ููุฑู ูุงูุญุณุงุจ ุน ุงุจูู','ุงูููุณูุฉ ูุงุฏูุจู ูุงุจู ุงูู','ุงุจู ุดูููุช ูุงุจู ุงูู','ุงูุช ุจุฐุงุช ูุงุจู ููู ุดูุก ุงุจูู ููุจููู ููู ูููู ุชุณูููู','ูุง ุงุฎุฐ ูู ุบุฑุจุงุก','ูุงุจู ููู ูุฌุช ููุนุจุฉ ุงููุงุฏ ุจููุฒ','ุตุงููู','ูุงูู ุฐุจูุญุฉ ูุจู ุดูู ูุงููุฑุดุฉ ูุชุฑูู ูุฏุงู ',' ูุณูู ุฑุฌูู ',' ุดูู ุงุฐุง ุนูู ุญุณุงุจู ูุงุช ุงู ุดูุก ',' ุดูู ุฏุงูู ุณุฃูุชูู ุญุจูุช ุงูููู ุงูู ูุณูู ุชูููู ',' ูุด ุงููุงูุฏู ูู ุงูุงูู ',' ุงูุฏููู  ',' ุนูุฏู ุชูุณุช ูุฌุจู ุชุจูุ ',' ุงุจู ููุทุญ ',' ูุงูุนู ุงูููุฑูู ูุงูููุณูู ูู ุนูููุง ุจุณ ุดูุฑูุง ู ุณุคุงู ',' ุชุฏุฑู ุงูุง ุนุงุฒูู ูุด ุชุจู ุชุงูู ุงูุช ',' ูุง ุดูุฑูุง ุชูู ุจุงุจุง ุฌุงุจ ูู ุงูู ',' ุงูุง ูุง ุงุจู ุงูู ุงูุง ุงุจูู ุงูุช (ุงูููุช ูุนุถ ุนูู ุดูุงููู) ',' ุดููุช ุตูุฑุชู ุงุญูู ูู ุงู ุงูู ',' ุงููู ุน ุฑูุด ููุจุงุจ ูุตุญู ุญูุต ',' ูุต ุญุจู ูู ุงูุจูู ุญุฑุงู ูุน ุจุจุณู ู ุฒุงูุฏู ูููุชูู ','  ุดุจุงุชู ู ูุฑู ',' ูุงูู ููุณ ุชูู ุงุจูู ูุนุทููู ูุญุงุถุฑุฉ ุนุดุงู ุชุญุฑุดุช ุจูุญุฏุฉ ุญููู ุจุณ ูุด ุงุณูู ููุทุน ุดูููุง ูุฒุฒุฒุฒุฉ ',' ุจุฑุฌุฑ ูุญู ูุน ุจุทุงุทุณ ุจุงูุฌุจู ',' ุณูุทู ูุงูู ุชุฃููุจ ุงูุถููุฑ ุดุบุงู ',' ูุงุช ุงู ุญุงุฌู ูู ุชุฌู ุงูุช ุฑุงุญ ุงููู ',' ูููููู ูุง ุงุฏุฑู ูุด ุชุดูู ุงูุชุ ',' ุงููู ุนูู ุตุญู ูุดุฑู ',' ุตุงุฑูุฎ ูุจูุฑ ุจุงูุฌูุจู ',' ุตุญู ููุงูู ูุดูู ',' ูุจุณุฉ ูุญู ูููู ',' ุงูุง ูุจุชู ุงุชุบุฐู ุนูู ุงูุทุงูู ุงูุดูุณูุฉ ',' ูุง ุงุฏุฑู ',' ุฑุงูู ููุณ ุงููู ูู ูุงุฑูุชู ','  ููุชู ูุน ุดุทุฉ ููููู ',' ุจูุชุฒุง ุงุทุฑุงู ุฌุจู ',' ูุนุตูุจ ',' ุนุฑููุฉ ุฌููุจูู ',' ุงุจู ุดูุดููุฉ ',' ูุงูุฑููู ุจุงุดููู ',' ูุชูุชุดููู ',' ุณููู ุทุงููู ',' ูุต ุชูุณ ููุฏู ',' ูุถุบูุท ',' ูุณูู ุฎูู ',' ุดูู ุฏุงูู ุณุฃูุช ุงูุง ููุช ุงุญุจ ูุญุฏู ุจุณ ุทูุนุช ุชุญุจู ูุณุญุจ ุนูููุง ','  ูุง ุงุจู ุจุณ ุงุฐุง ุนูุฏู ูููู ูุงูููู ูุง ',' ุณุชุฑูุจุฒ ',' ุฏููุงุช ุทูููู ',' ุดูู ูุงูู ุฎูู ุงูู ุงูุชุจ  ุดุฑุจุ ูุงูู ุงุญุณ ุงูู ุนุทุดุงุงุงุงู ',' ุงูุช ุจุงูุฐุงุช ูุงุชุณูู ุฎูู ',' ุฎุจุฒ ูุงุดู ุฒู ุญูุงุชู ูุงุดูู ',' ููุณู ุจ ุฑูุด ู ุฌุงู ',' ุจูุงููุท ',' ููู ูุชููุณ ',' ูุง ุดุจุนุงู ุจุณ ููุณู ูู ุงูุณูุฑูู ',' ุญุจุญุจ ุตููู ',' ุฎุจุฒ ู ุฒุจุงุฏู ',' ูููุฎูู ุจุงูุงุฑุงูุจ ',' ุฏูููุฉ ุนุฑุงููู ',' ุงูุณูุฑูู ูุงููููุง ูู ูุงู ',' ุณูุดู ',' ูุทุจู ',' ูุจุฏุฉ ูุชูุงุทูุน ',' ููุฏู ุฏุฌุงุฌ ',' ูุงููุชุง ','ูููููููุณ ',' ุนุณู ูุง ุนุณู ',' ูุจุงุจ ',' ุชุจููู ',' ุจุฑุฌุฑ ูุญู ูุดูู ',' ูุฌุจู ูู ุงูุจูู ',' ุณูู ูุตูุงุฏูู ',' ุฑูุจูุงู ๐ค ',' ุงูุช ุงุจุนุฏ ุนูู ูุจุณ',]

let randomName2 = list1[Math.floor(Math.random()*list1.length)]
        
console.log(randomName2)

const list20 = ['ูุฏููู ุจุญุฑู', 'ุณูุงุฑู ุจุญุฑู', 'ูุงุฑูู ุจุญุฑู','ุงุณู ุจุญุฑู','ุฌูุงุฏ ุจุญุฑู','ุชุทุจูู ุจุญุฑู','ูุฑูู ุจุญุฑู','ููู ุจุญุฑู','ูุณูุณู ุจุญุฑู','ูุนุจู ุจุญุฑู',]

let randomName0 = list20[Math.floor(Math.random()*list20.length)]
        
console.log(randomName0)

const list30 = ['ุฌ' ,' ุญ',' ุฎ' ,' ู' ,' ุน' ,' ุบ' ,' ู' ,' ู' ,'ุซ ' ,' ุต' ,' ุถ' ,' ุท' ,' ู' ,' ู' ,' ู' ,' ุช' ,' ุง' ,' ู' ,' ุจ',' ู' ,' ู','ุด' ,' ุฏ' ,' ุธ' ,' ุฒ' ,' ู' ,' ู' ,' ุฑ' ,' ุฐ']

let randomElement00 = list30[Math.floor(Math.random()*list30.length)]
        
console.log(randomElement00)

const list4 = ['ุฎุฐูู ุนูู ุงูุจุญุฑ ููุนุจูู ุจุณููุชุฑ','ุดูุช ุงูููุณุฑุงุชุ ุงูุง ูุชูุณุฑ ุงูุซุฑ ูููุง ุงุนุชุฐุฑ ูู ุงูุทูุนุฉ', 'ูุง ุงูุช ููุณูุฉ ูุง ููุทูุน ูุนู', 'ุงุฐุง ุจุชุนุฒููู ุน ุญุณุงุจู ุชู', 'ูุง ุจูุงู ูู ูุงุถู', 'ุงูููุช ุชุฃุฎุฑ ูุงูุง ูุจุงุจุง ูุง ูุฑุถูู ',' ุงูู ูุดููุง ุนูุฏู ููุชุฉ ุฌุฏูุฏุฉ ุจุณ ุนูุฏู ูููุฉุ ',' ุดูู ูุนู ุณูุงุฑุฉ ุตูุฏ ููุณูู ูุดููุง ',' ูุง ูุทูุฑ ',' ูุดููุง ููุดุช ููุดุจ ุงูุถูุก ',' ุดูู ูุฏู ูู ุฒูุงู ุงูููู ุจุณ ููุช ูุณุชุญู ุจุณ ุฏุงููุง ุฌุงุช ููู ุชูุชูุชูุชูุชู ',' ุณุคุงู ุนูู ูููููู ุนู ุงูู ุทูุนู ุชุนุงู ุฏุณ ุจูููู ุณุฑ ',' ููู ูุทูุน ูุงูุง ุฌุงูุณ ูู ููุจู ',' ุดูู ูุฑุงู ุจูุฑุฉ ุฏูุงู ูุบุซุงุก ูุฐูู ุตุฑู  ููุณู ',' ุงู ุงูุฒููุฉ ุฐุจุญุชูู','ุงููู ูุชุนุงูุด ูุน ุงูู ูุงุจูู ุบุตุจ ุนูู ูุชุนุจ','ูุง ุจุณ ุฌูุนุงู','ุดุฏุฎูู','ุชุนุจุงู ุงู ูุงููู ุชุนุจุงู ุชุนุจุงู ูููู ุงู ุงู','ุชุนุจุงู ูุจุตูุฑ ุฒูู ูู ุนุทูุชูู ุจูุณุฉ ูุญูุงูุฉ ',' ุงุจู ููุงู ุฒุญูู ููู ูุงุณ alwuteWink ',' ูุดููุง ููุง ุงู ููุงู ุทูุดุช ูุงูุง ุฌุงูุณ ุนูุฏ ุงููุงูู ููุฐุง ุจุณ ูุชูู ุนูู ',' ูุดุบูู ูุดุบูู ุฌุงูุณ ุงุฑุงูุจ ุงููุถุน ',' ุดูู ุฏุงูู ููุฒู ูุตูุฑ ูุทูุน ุนูู ุญุณุงุจ ุฎุฏูุฌุฉ ููุงููุ ',' ุดูู ุงููู ุชุญุชู ูููู ูุจู ูุทูุน ',' ุตูุช ',' ุจุฏุฑู ุจุฏุฑู ูู ุตูุงุฉ ุงูุนุตุฑ ุงูุง ุงูุชุธุฑู ุชููู ูุทูุน ุฌุงููู ุงูุญูู ุงูุณุงุนู 12 ุชุจู ูุทูุนุุุุ ',' ูุง ุนูุฏู ููุนุฏ ุบุฑุงูู  lilfokaAr7b ',' ูุง ุงุจู ุงุฑูุต ุดุบู ูู ุดูุก ูุฎูููู ุงุชุฑูุต ',' ุชุนุฑู ุชุฏู ุนูุฏุ ',' ุนุงุฑู ูู ูุฎุทุท ุฌุฏูุฏ ุนููู ุฌูุณุงุช',]

let randomElement1 = list4[Math.floor(Math.random()*list4.length)]
        
console.log(randomElement1)

const list5 = ['ุฌูู','ุงูุง ุฏุงูููุง ุงููุฑูุฒ ุงูุงูู ุจุงูุนุงูู ูู ูุซู ุจุงุจุง ุถุฆูู','ูุงูู ุฎูู ุงุจู ุงุชุจุทุญ ูุงุฒุท', 'ูุนุจุชูู ูุงููู','ููุงูุชู ูุง ุชุณูุญ ูู ุฃูุนุจ ูุนูู', 'ุงูุนุจู ูุน ุงุจูู ุงูู ูู ูุงูุญ ุงูุง ุจุงูุฎุณุงุฑุฉ ูุงููุจุฏ','ูุง ูุงูู ููุณ ุจุชูุฑุฌ ุนูููู ุจุณ ',' ุญุณู ูุณุชูุงู ูุชุนุงู ',' ุงูุช ุบุจู ุชุชุญุฏู ุจูุช ',' ุดูู ุงุฐุง ูููุง ุนุดู ููุฏููุงู ',' ูุง ุงูุง ูุงุดู ุงูุง ุญุดุฑุฉ ุงูุง ุถุฆูู ุจุณ ูุงุฑุงุญ ุชููุฒ ุนูู ',' ูุณูู ุฎูู ',' ูุนู ุงุชุตุงู ุฏูููู   herodevilAKAFBI   ',' ุงูู ุชุจู ุฎุจุฒ ',' ูุง ุงูุฏุฑ ูุงูู ูุฑุฑุฑุฑุฉ ุฌูุนุงู ',' ุฌุงูุณ ุงุญุชุณู ุงููููุฉ ุงูุณูุฏุงุก ',' ูุง ุงูุง ุงุฌุงุฒุฉ ุงูููู ',' ูุณูู ูุดุงูู ูุน ุงุจูู ',' ุงุจู ุงุชุฒูุฌ ูุงูู ูุงุถู ุญูู ',' ุงูุง ุฎููู ุงุญู ูุงุฌุจู ูุงู ุชุญุฏู ูุงู',]

let randomElement2 = list5[Math.floor(Math.random()*list5.length)]
        
console.log(randomElement2)

const list6 = ['ูุด ูููุชู ุงูุง ูู ุญุฒุจ ุงูุดุงู','ูุง ุงุดุฑุจ ุงูุง ูููุฉ ุนุฑุจูุฉ ููู ุณูุญุช ูุงุฒู ุญูุง','ูุง ุงุดุฑุจ ุงูุง ุงููููุฉ ุงููููุทุฑุฉ','ูุด ูููุฉ ูุงูู ุงุทูู ูู ุงูุญููุจ ุงููุฑุงููุฉ ุงูุณุนูุฏูุฉ','ุจุณุงู ูุงูุง ุงุฐุง ุนุงุฏู ูุงู ุชููู ุงู ุจุณ ููุนุฌุงูุฒ','ูุทูุฑ','ุณุจุงูุด ูุงุชูู', 'ูุง ุดุฑุจุช ',' ูููุฉ ูู ุฏุงูู ุญุฌู ูุณุท ุฏุงุฑู ุฑูุณุช ',' ูุฑู ',' ุดุงู ุงุฎุถุฑ ุชูู ูุงูู ',' ูุงุชุดุง ',' ุงูุณ ุดููู ูุฑุงุจุชุดููู ุฏุจู ุดูุช ุงูุณุจุฑูุณู ',' ูุงุฑููู ูููุงูู ',' ูููู ูุญุงุฑุฉ ุจุนุฏ ',' ุณูุชูุจ ',' ุญูุถูุงุช ',' ุจุจุณู ุฏุงูุช ',' ุชูุงุญ ุตุญ ูู ุดูุก ุซุงูู ',' ูุง ุฌูุนุงู ',' ูููุชู ุจุงุงุงุงุฑุฏ ',' ุฒูุฌุจูู ูุงูู ุญููู ููุฑุจู ',' ุญู ุนูู ุญู ',' ูุง ุงุจู ุงูู ุงูุชุจ ุงููุ ',' ููุจูุณ ุนูู ุงุญู ุงุญู ุจุงูุฎุทุงุก ูุง ูุง ุงุจู ุงุดุฑุจ ',' ุดูู ุงุณุฃู ูุฐุง @EIADu ',' ุฏู ',' ููุฏุฑูุฏ ูููู ',' ุจูุงู ูุงูู ูุณูุงุฏ ุฏููุงู ','ุงุจู ุบูุงุฑ ',' ุจุงุจููุฌ ',' ุดุงู ูุบุฑุจู ',' ุจูุฑุฉุ ',' ูุงุช ุงู ุดูุก ',' ูุจู ุจุงุฑุฏ ',' ุตุงูู ',' ูุง ุฒุนูุงู ',' ูุงุช ุณูู ุจุทูู ุฌุงูุณ ูุณูู ุญุฑูุงุช ',' ูุง ูุญู ุนูู ',' ุดุชุจูุุ ูุณูู ุฎูู ',' ุดูู ููุช ุจุชูุจู ูู ุงููู ุจุณ ููู ุงูุชุุ ูููุง ุงููุงุณ ',' ุดุงู ููุนูุน ูุน ูุตูุต ูุงุญูู ุญุด ',' ููุฑุชุงุฏู ',' ูุงุชูู ูุงูุญููุจ ููุฒ ุนุดุงู ุชุนุฑู ููุฌู ',]

let randomElement3 = list6[Math.floor(Math.random()*list6.length)]
        
console.log(randomElement3)

const list7 = [
  'ูุง ูู ุฃูุถู ูุชุงุจ ูุฑุฃุชู ุนูู ุงูุฅุทูุงู ูููุงุฐุง ุฃุซุฑ ููู ุจูุฐุง ุงูุดููุ',
  'ุดูุก ููุณู ูุฑุฌุน ุ',
  'ูู ุนูุงูุงุช ุฑููุงูู ุ',
  'ููู ุชุชููุน ููุธุฑ ุฅููู ุทูู ุงูููุช ุจุฏูู ููู ุ',
  'ูุด ุงุณู ุงูุญู ุงูู ุณุงูู ููู ุ',
  'ูู ูุงุญุฏ ูุชุฏุฎู ูู ุฃููุฑู ูุฃูุช ูุง ุทูุจุช ููู ูุด ุจุชูููู ุ',
  'ูุด ุฃูู ุทุฑููุฉ ุชุชุจุนูุง ุฅุฐุง ุฌูุช ุชุฑุงุถู ุดุฎุต ุขุฎุฑ',
  'ุดูุก ุงุดุชุฑูุชู ุนุจุฑ ุงูุฅูุชุฑูุชุ ูููู ูุงูุช ุชุฌุฑุจุชู ุ',
  'ุดูุก ุนูุฏู ุฃูู ูู ุงููุงุณ',
  'ูุฐุจุฉ ููุช ุชุตุฏููุง ูุฃูุช ุตุบูุฑ',
  'ูู ุฃุชูุญ ูู ุงูุฒูุงุฌ ูู ุบูุฑ ุฌูุณูุชูุ ุฃู ุฌูุณูุฉ ุณุชุฎุชุงุฑ ุ',
  'ุฃุณู ุชููููุง ูููู ุ',
  'ูู ูุฒูู ุ',
  'ุฃูุถู ุทุฑููุฉ ุชุฑุงุถู ูููุง ุดุฎุต ูุฑูุจ ููู ุ',
  'ุฃุนุฒ ุตุฏูู ุนูุฏู ููู ุชุนุฑูุช ุนููู ุ',
  'ุฃูุซุฑ ุดุฎุต ูุณูู ููู ููุงูุจ ุ',
  'ุญููุฉ ุชุคูู ุจูุง ุฌุฏุงุ ูููุงุฐุงุ ูุนูู ูู ุทุจูุชูุง ุ',
  'ุดุฎุต ูุนุฑู ุนูู ูู ุดูุก ุชูุฑูุจุงู ุ',
  'ุฃุดูุงุก ุฅุฐุง ุณููุชูุง ูุดุฎุต ุชุฏู ุนูู ุฃูู ุชุญุจู ูุซูุฑ ุ',
  'ูุน ุฃู ุถุฏ: ุฎูุฑ ูู ุฃู ุชููู ูุบููุงู ูู ุฃู ุชุณุชุบูู ุบูุฑู',
  'ุซูุงุซ ุฃุดูุงุก ุฌูุจู ุงูุญูู ุ',
  'ุฌุฑุจุช ุงูุดูุฑุฉ ุฃู ุชุชููุงูุง ุ',
  'ูู ููุช ุดุฎุตูุฉ ุฃููู ุฃู ุดุฎุตูุฉ ุจุชููู ุ',
  'ุฃูุซุฑ ููุงู ุชุญุจ ุชุฌูุณ ููู ูู ุงูุจูุช ุ',
  'ููุดู ุดุฎุต ูู ูุง ุดูุชู ุชุญุณ ูููู ูุงูุต ุ',
  'ุฃูุซุฑ ุดูุก ุถูุนุช ุนููู ูููุณู ุ',
  'ุนุฑู ุนู ููุณู ุจุณุทุฑ',
  'ูุด ุฃูุซุฑ ุณุคุงู ูุฏูุฑ ูู ุจุงูู ุ',
  'ุดูุก ูู ุงููุงุถู ููุญูู ุนูุฏู ุ',
  'ุฅุฐุง ููุช ุจููุงุด ูุน ุดุฎุต ูุทูุน ุงูุญู ูุนู ุชุนุชุฑู ูู ููุง ุชุตุฑ ุนูู ููุงูู ุ',
  'ุนูุฑู ุทุญุช ุจููุงู ุนุงู ุ',
  'ูุง ูุนูู ุงูุญุจ ุจูุธุฑู ุ',
  'ุฎุทุท ุงูุณูุฑ ุงูุฎุงุตุฉ ุจู ุบุงูุจูุง ูุง ุชููู ูุฏุฑูุณุฉ ุ',
  'ูู ุดููุง ูู ุทููู 100 ูู ูุจูู ูู ุทููู ุ',
  'ุงูุชุจ ุฃูู ูููุฉ ุฌุงุช ูู ุจุงูู ุงูุญูู ุ',
  'ุฃุทูู ูุฏุฉ ููุช ูููุง ูู ุณุงุนุฉ ุ',
  'ููุช ุงูุฏููุง ุญููุฉ ูุซูุ',
  'ุจูุงุฐุง ููุญุฏุซู ููุจู ูุฐู ุงูุฃูุงู ุ',
  'ูู ุงูููุน ุงููู ุชุญูุธ ุฃุณูุงุก ุงููุงุณ ุจุณุฑุนุฉ ููุง ุจุณ ุฃุดูุงููู ุ',
  'ุขุฎุฑ ูุฑุฉ ูุฒู ุนูุฏูู ูุทุฑ ุ',
  'ููู ุณูููู ุงูุนุงูู ูู ูุงู ูุซูู ุ',
  'ูู ูู 10 ุชุญุณ ุจุงูุทูุด ุ',
  'ูู ุฃุญุฏ ุจูุฐูุฑู ููู ูุฃูุช ูุงุณู ุจุชุณูู ูู ุ',
  'ุญููุฉ ุงูููู ููู ููู ุ',
  'ูู ุฃูุช ูู ูุฏููู ุฑุบุจุฉ ุญุจ ุงูุชููู ูุฅุฐุง ุชููู ุงูุดูุก ุฃุตุงุจู ุงูููู ููู ุ',
  'ูุง ูู ุฃุฎุทุฑ ุนุฏู ููุฅูุณุงู ุ',
  'ูู ุงูุฃุดูุงุก ุงูุจุณูุทุฉ ุงููู ุชุณุนุฏู ุ',
  'ูู ููุช ููุซู ูุด ุชุชููุน ุงูุฏูุฑ ุงููู ุจุชุชูููุ',
  'ูู ุชููู ุจูุง ูุนุชูุฏู ุงูุขุฎุฑูู ุนูู ุ',
  'ูุด ุงุณู ุฃูู ุดุฎุต ุชุนุฑูุช ุนููู ูู ุงูุชููุชุด ุ',
  'ุฃุชูู ุดูุก ุฃุฑุณููู ุนุดุงูู ุ',
  'ูุธููุฉ ุชุญุณูุง ูุงููุฉ ุนููู ุ',
  'ุชูุถู ุงูุฃููุงู ุงูุฏุงููุฉ ููุง ุงููุงุชุญุฉ ุ',
  'ุฃูู ุดูุก ูููู ูุนู ูู ูู ุทูุนุงุชู ุ',
  'ุงูุดุฎุต ุงูุฐู ุงุนุชุฑู ูู ุจุงูุญุจ ุงุณุชูุฑ ุจุญุจู ุฃู ุชุจุฎุฑ ูุงูุนุงุฏุฉุ',
  'ูุชู ูุงุฒู ุชููู ูุง ุ',
  'ุฃุบููุชู ุงูููุถูุฉ',
  '... ุฌุฑุจุช ุชุฑูุญ ุงุฎุชุจุงุฑ ุจุฏูู ูุง ุชุฐุงูุฑ ุ',
  'ูู ูู ุนุดุฑุฉ ุชููู ูููู ุ',
  'ููุฉ ุงูุตุฏุงูุฉ ุจุงููุฏุฉ ููุง ุจุงูููุงูู ุ',
  'ููููุฉ ุฃู ูุซู ุฃู ุจูุช ุดุนุฑ ูุฑูุจ ูู ููุจู ุ',
  'ุงูุชุจ ุดูุก ุชุคุฌุฑ ุนููู ...',
  'ุบุงูุจูุง ูุด ุชุณูู ุงูุขู ูู ูุง ูุงู ูู ุจุซ ุชุฑูู ุ',
  'ูู ุฑุฌุน ูู ุดุฎุต ุชุนุฑูู ุจุนุฏ ุนูุงูุชู ุจุงูุฎูุงูุฉุ ุฑุงุญ ุชุฑุฌุน ููุณ ุฃูู ุ',
  'ูู ุงูุชููู ูุตูุฑ ุญูููุฉ ูุด ุจุชุณููุ ูุด ุฃูููุชู ุจุชููู',
  '@ููุดู: ุงูุดุฎุต ุงููู ุนุงุฏู ุชูููู ุฃุณุฑุงุฑู',
  'ุฃุญูุฑ ุงููุงุณ ูู ูู ุ',
  'ุนุงุฏุฉ ุบุฑูุจุฉ ุชุณูููุง',
  '.. ุชุญุจ ุงูููุงููุงุช ุงูุทูููุฉ ุ',
  'ุฃูุซุฑ ุดุฎุต ูุงููู ุจุงูุฏููุง ุ',
  'ุฃุฌูู ุงุณู ุจูุช ุจุญุฑู ุงูุณูู ุ',
  'ูุด ุชููู ุฅุฐุง ุดูุช ูุฌูู ุจุงููุฑุงูุฉ ุ',
  'ุนูุฑู ูุถูุถุช ูุดุฎุต ููุฏูุช ุ',
  'ุชุดูู ุฃูู ูุงุฏุฑ ุนูู ุชุญูู ุงููุณุคูููุฉ ุ',
  'ุงุณู ุฃูุทู ุดุฎุต ูุฑ ุนููู ุฅููุชุฑููููุง',
  'ูู ุฎูุฑูู ุจูู ูุนุทููู ููููู ุฃู ุฑุงุชุจ ุดูุฑู ูุชูุณุท ุจุฏูู ุนูู ูุฏู ุงูุญูุงุฉ ุฅูุด ุชุฎุชุงุฑ ุ',
  'ูู ููุท ูุณููุญ ุดุฎุต ูุงุญุฏ ุชุชุงุจุนู ูู ุงูุณูุงุจ ููู ุจูููู ุ',
  '(ุฃูุช ูู ุดูุก ุจุญูุงุชู) ููู ุชููููุง ุ',
  'ุดุฎุต ููููู ุจุดูู ูููู ุ',
  'ุฅูููุฌู ูุนุจุฑ ุนู ูุถุนู ุงูุญูู ุ',
  'ุฃูุซุฑ ูุตุงูุจู ูุน ููู ุ',
  'ุนุงุฏู ุชุทูุน ูุฌูุงูู ูุง ููู ุดุญู ูุซูุฑ ุ',
  'ุชูุฏุฑ ุชุณูุทุฑ ุนูู (ุถุญูุชู - ูููู - ุฌูุนู)ุุ',
  'ูู ูู ุนุดุฑุฉ ุชุญุจ ุงูุฌูุณุฉ ุจุงูุจูุช ุ',
  'ูุน ุฃู ุถุฏ: ุฏุงุฆูุง ูููู ุงูุชูุงููุง ูุน ุงูุฅูุณุงู ุงูุฎุทุฃ',
  'ุฃูุซุฑ ุดูุก ุดุงุบู ุชูููุฑู ูุงูููููู ุ',
  'ูุน ุฃู ุถุฏ: ูู ูุง ุฃุฎุฐุช ุดูุก ูุนู ููุช ุฒูุงุฑุฉ ุฃุญุฏ ุฃูุช ููุตุฑ',
  'ุฃูุซุฑ ุญููุงู ุชุญุจู ุ',
  'ูู ุงูููุน ุงููู ุชุนุชูุฏ ุนูู ุบูุฑู ููุง ูู ุดูุก ุชุณููู ุจููุณู ุ',
  'ูุด ุฃุจุดุน ุดุนูุฑ ูุฑูุช ููู',
  'ูู ูุณุจุฉ ุงูุบูุฑุฉ ุนูุฏู ูู 10',
  'ูุชู ุขุฎุฑ ูุฑุฉ ููุช ููุชูู ุณูุช ุ',
  'ุฃูุช ุนูู ููุจุฑ ุงูุขู ูุงูุฌููุน ูุณุชูุนุ ูุงุฐุง ุณุชููู ุ',
  'ุฅุฐุง ุฒุนูุช ุฅูุด ูุฑุถูู ุ',
  'ูุน ูู ุตุฏูู ุญูููู ุฎุฑุฌุช ุฎูุงู ูุณูุฑุชู ููุขูุ',
  'ุญููู ุจุงููุณุชูุจู ุ',
  'ุดุงูู ูู ุดูุก ุ',
  '"ุงูููุทูู ุนุฏูู ุฅุญุณุงุณ" ูุน ุฃู ุถุฏ ูุงูุณุจุจุ ููุจู ุนูุฏ ุฃุฎููุงู ุ',
  'ูู ุชุญุชุงุฌ ููุช ุนุดุงู ุชุชุนูุฏ ุนูู ููุงู ุฌุฏูุฏ ุ',
  'ูู ููุญูุงุฉ ููู ุฅูุด ุจูููู ููู ุญูุงุชู ุ',
  'ูู ุฃุตุจุช ุจุญุงูุฉ ุงูุชุฆุงุจ ูู ูุฏูู ูุงูุน ูู ุงููุฌูุก ุฅูู ุทุจูุจ ููุณูุ',
  'ุฃููุฉ ุฃุฏููุชูุง ุงููุชุฑุฉ ุฐู ุ',
  'ูู ุชุนุทู ููุณู ูู 10 ูู ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ ุ',
  'ุงูุนุตุฑ ุฅูุด ููุช ุชุณูู ุ',
  'ูู ุชุนุทู ููุณู ูู ุนุดุฑุฉ ุจุงูุฌุฏูุฉ ุจุญูุงุชู ุ',
  'ุณุคุงู ุฏุงูู ุชุชูุฑุจ ูู ุงูุฅุฌุงุจุฉ ุนููู',
  'ุฃุทูู ูุฏุฉ ูุถูุชูุง ุจุฏูู ุฃูู ุ',
  'ุฃูุซุฑ ูุดุงููู ุจุณุจุจ ุ',
  'ูุจู ุณุงุนุฉุ ูุงุฐุง ููุช ุชูุนู ุ',
  'ูููุฉ ุชููููุง ูุจุนุถ ุงูุฃุดุฎุงุต ูู ุญูุงุชู',
  'ูู ุฃุชูุญุช ูู ุงููุฑุตุฉ ููุฌููุณ ูุน ุดุฎุต ุบุงูุจ ุนููุ ูู ุณุชุฎุชุงุฑุ',
  'ูุธุงู ูููู',
  'ูุง ูู ุงูุดุฎุตูุฉ ุงููุณุชูุฒุฉ ุจุงููุณุจุฉ ูู ุ',
  'ููู ุชุนุฑู ุฅุฐุง ูุฐุง ุงูุดุฎุต ููุฐุจ ููุง ูุง ุ',
  'ุดุฎุต ุชุญุจู',
  '@ููุดู : ุดุฎุต ุชุดููู ููุณูุฉ',
  'ููู ุฌุงูุณ ุนูุฏู ุ',
  'ุชูุงู ุจุฃู ููุงูุ ููุง ุจุณ ุบุฑูุชู ุ',
  'ูุง ูู ุฃูุซุฑ ุดูุก ูุฌุนูู ุชุดุนุฑ ุจุงูุณุนุงุฏุฉ ูุงูุฑุถุงุ',
  'ูุง ูู ุฃูุถู ูุตูุญุฉ ุชูููุชูุง ูู ุญูุงุชูุ ููู ูุฏููุง ููุ',
  'ูุง ูู ุฃูุซุฑ ุดูุก ุชุดุนุฑ ุจุงูุงูุชูุงู ูู ูู ุญูุงุชูุ',
  'ูุง ูู ุงูุญูู ุงูุฐู ุชุณุนู ูุชุญูููู ููุฐ ูุชุฑุฉ ุทูููุฉ ูููุงุฐุงุ',
  'ุฅุฐุง ูุงู ุจุฅููุงูู ุชูุงูู ุงูุนุดุงุก ูุน ุฃู ุดุฎุตูุฉ ุชุงุฑูุฎูุฉุ ูู ุณุชุฎุชุงุฑ ูููุงุฐุงุ',
  'ูุง ูู ููููู ุงูููุถู ูููู ุฃุซุฑ ูููุ',
  'ูุง ูู ุฃุบุฑุจ ุญูู ุญููุช ุจูุ',
  'ูุง ูู ุงููุญุธุฉ ุงูุชู ุดุนุฑุช ูููุง ุจุฃูุจุฑ ูุฎุฑ ูู ุญูุงุชูุ'
];

let randomElement4 = list7[Math.floor(Math.random()*list7.length)]
        
console.log(randomElement4)

const listms = ['ูุณุงุก ุงูุฑูุงู ุดู ูุงูู ููุจู ูุฌุนุงู','ูุณุงุก ุงูุฏูุณุจุงุณูุชู ุดุนุฑู ุญุฑูุฑ ููุง ูุณุดูุฑูุชู','ูุณุงุก ุงูุจุงุชูุฌุงูุ ูููู ุจูุณุฉ ููุง ุฎุฌูุงูุ ๐ธ','ูุณุงุก ุงูุฎูุฎ ูููู ุตูุฑุชู ุนุดุงู ุงุฏูุฎ','ูุณุงุก ุงูุชูุงุญ ูููู ุจุญุจู ุงุฑุชุงุญ. ๐๐','ูุณุงุก ุงูุจุตู ูููู ูุณู ููู ุญุตู',' ูุณุงุก ุงูุญูุงู ูููู ุงูุนููุงู ุ','ูุณุงุก ุงูููุงุจู ูููู ูุชูุงุจู ุ','ูุณุงุก ุงูุฃูุงูุฉ ูููู ุทูุจ ุตุฏุงูุฉ ุ','ูุณุงุก ุงูุบุฑุงู ูููู ุงูุฅูุณุชุฌุฑุงู ุ','ูุณุงุก ุงูุนุทูุฑ ูููู ุชุชูุถูู ูุนุงูุง ุนูู ุงูุณุญูุฑ ุ',' ูุณุงุก ุงููุฑุฏ ุดุนุฑู ุทุจูุนู ููุง ูุฑุฏ ุ','ูุณุงุก ุงูุฎูุฑ ูู ุฅูุชู ุงููู ุจุชุนูููู ูู ููุจู ุฏู ููุฑ ุ','ูุณุงุก ุงูุจูุฏูุฑุฉ ูููุงุณ ุงูุฃููุฑุฉ ','ูุณุงุก ุงููุนู ูู ูุฌุงู ูุญูู ูุนูุ','ูุณุงุก ุงูุญูููู ูููู ุชุฑุฏููุ','ูุณุงุก ุงูุชูููุฑ ูููู ูุญูู ูุชูุฑุ','ูุณุงุก ุงูุดูุงู ูููู ุชููุจ ูุฌูู ุชูุงูุ','ูุณุงุก ุงููุจุงุจ ูููู ุงูุณูุงุจ ุ','ูุณุงุก ุงููุดูุด ูููู ูุฏุฑุฏุด ุ','ูุณุงุก ุงูุบุทุณ ูููู ุงููุงุทุณ ุ','ูุณุงุก ุงูุณูุฑ ููู ุนููู ุงูุจุงุจ ูุณูุฑ','ูุณุงุก ุงูููุฑ ูุง ุงุญูุง ูุงุชููู',]

let randomElementms = listms[Math.floor(Math.random()*listms.length)]
        
console.log(randomElementms)

const listsb = ['ุตุจุงุญ ุงููุฑุงููุฉ ูููู ูุญุงููุฉ','ุตุจุงุญ ุงูุญูุงู ุ ูููู ุงูุนููุงู ุ','ุตุจุงุญ ุงูุฃูุงูุฉ ุ ูููู ุทูุจ ุตุฏุงูุฉ ุ','ุตุจุงุญ ุงูููุงุฏุฑ .. ูููู ูุชุนุฑู ูุงูุง ุฃุบุงุฏุฑ','ุตุจุงุญ ุงูุนูุงุจ ูููู ุงูุณูุงุจ ุุ๐ธ๐ธ','ุตุจุงุญ ุงูุญููู ูููู ูุชุนุฑู ุน ุงูุญุฑุงููู','ุตุจุงุญ ุงูุดูู ุดุขู ุดูู ูููู ุชุฏููู ุงูููุณ ุจูู ุ','ุตุจุงุญ ุงูุบุฑุงู ุ ูููู ุงูุฅูุณุชุฌุฑุงู ุ','ุตุจุงุญ ุงููุฑุฏ ุ ุดุนุฑู ุทุจูุนู ููุง ูุฑุฏ ุ','ุตุจุงุญ ุงูุฎูุฑ ุ ูู ุฅูุช ุงููู ุจุชุนููู ูู ููุจู ุฏู ููุฑ ุ','ุตุจุงุญ ุงููุฑูุงูู ูููููู ุดุฑู ุงููุญุงููู','ุตุจุงุญ ุงูููุง ููู ุงูุง ๐','ุตุจุงุญ ุงูุชูุช ูุง ุญูู ูุง ูููุช','ุตุจุงุญ ุงูุชูุงุญ ููู ูู ููุจู ูุฑุชุงุญ ','ุตุจุงุญ ุงูุจุฑุชูุงู ููู ุฏุงูู ุนูู ุงูุจุงู','ุตุจุงุญ ุงูุดูุงู ูููู ุชููุจ ูุฌูู ุชูุงู','ุตุจุงุญ ุงููุนู ูู ูุฌุงู ูุญูู ูุนู','ูุง ุตุจุงุญ ุงูุฎูุฎ ุฃุฏููู ุฑููู ูุญุณู ุฃุฏูุฎ','ูุณุงุก ุงููู ุนูู ููุจู ุฌุงู ุฃุทู','ุตุจุงุญ ุงูุจุทุงุทุง ูููุงุณ ุงูู ุชุชุนุงุทู','ุตุจุงุญ ุงูุฒุจุงุฏู ูุง ูุนุฐุจ ูุคุงุฏู ูููุชูุฏูู ููุง ุนุงุฏู','ุตุจุงุญ ุงูุฒุจุงุฏู ูุง ูุนุฐุจ ูุคุงุฏู ุจุชุญุจูู ููุง ุนุงุฏู',]

let randomElementsb = listsb[Math.floor(Math.random()*listsb.length)]
        
console.log(randomElementsb)

const listูุตุนุจ = ['ููููููููู ูุง ูุตุนุจุจุจุจ', '', '','','','','', '','','','','', '','','','','', '','','','','', '','','','','', '','','','',]

let randomElementูุตุนุจ = listูุตุนุจ[Math.floor(Math.random()*listูุตุนุจ.length)]
        
console.log(randomElementูุตุนุจ)

const listูุฒ = ['ููููููููู ูุง ุดูุฑูููููููููู', '', '','','','','', '','','','','', '','','','','', '','','','','', '','','','','', '','','','',]

let randomElementูุฒ = listูุฒ[Math.floor(Math.random()*listูุฒ.length)]
        
console.log(randomElementูุฒ)

const listุณูุงู = ['ุงููุง ููุฑุญุจุง ูุณููุง ููู ุญุงูู','ุงููุง ุงูุงูุณุงู','ูุง ุดุงุก ุงููู ุจุฏุฑูุ','ูุง ูุดูุฎ ุจุฏุฑู ูุงู ููุช ูุฎูุงุต','ูุนูุด ุจุณ ุงูููุณูู ุจุทุงุทุณ ุดููุง','ุชุนุงู ูุณูู ูู ุฒูู ุน ููู ูููู','ูุญุดุชูู ุฌุฏุง ุฌุฏุง','ุจุณ ุงุณูุน ุชุนุงู ุจุนุฏ ุจุซ ุจุงุจุง ุชุฑูู ูุฑูุญ ูุฏุดุฑ ุณูุง','ุงุณูุน ุงูุง ุฌูุนุงู ุนูุฏู ุญููุจ ููููุ','ูุงุฎู ููุนุช ุนููู ุจููุฑู ุงุชูู ุงููู','ูุงุญุธู ุนูุจู ุชุดุงู ุชุฑุญุจ ููู ุดุฎุตูุง !!!','ุงุจ ุงุจ ุงุจ ุงุด ุงููุดุฎู ูุงูุญุถูุฑ ุงูุฑููุจ ุฐุง','ุชู ูุงููุฑ ุจุซูุง ูููู ุนูุง ูู ุฒูุงู ุ','ุงุญุณ ุญุจูุชู ุนุงุฏู ุงุจูุนูุ',]

let randomElementุณูุงู = listุณูุงู[Math.floor(Math.random()*listุณูุงู.length)]
        
console.log(randomElementุณูุงู)

const listeiad = [' ุงููุฏู', 'ุงุจู ุทูุทู', 'ุงุจู ุทุงุฑู','ุชูุณุจุฑ','ุงูุงุงุงุงุฏ',' ุชู ุงูุณ ุจู ',]

let randomElementeiad = listeiad[Math.floor(Math.random()*listeiad.length)]
        
console.log(randomElementeiad)

const listุชุฑุญูุจ = ['ุงุฑุญุจ ูุง', 'ุงุฎุจุงุฑู ูุง', 'ุงูููููุช ุชู ูุง ููุฑ ุงูุจุซ ูุง','ูููุฑุฑุฑุฑุฑุฑุฑ ูุง',' ููููููู ูุง','ูุง ุงููุง ู ุณููุงู ูุง',]

let randomElementุชุฑุญูุจ = listุชุฑุญูุจ[Math.floor(Math.random()*listุชุฑุญูุจ.length)]
        
console.log(randomElementุชุฑุญูุจ)

const list9 = ['ุชุฑู ุญุด ููู',' ุชุฑู ุนุงุฒูู' ,' ูุงุจููู ูุจุนุถ ',' ูููู ุงูู ุญููู ',' ููุฑูู ', 'ูุญุจู ุจุณ ูุณุชุญู ูุนุชุฑู' , 'ุชุฑุงู ุซููู ุฏู' ,' ุชุฑุงู ูุฑููุดู ุฑุงุนู ููุช' ,' ุชุฑู ุญููุงุชู' , 'ุงูุชู ุงูุถู ุงุตุฏูุงุก' ,' ูุงุชููุนูุง ุชููููุง ุจุนุถ' ,' ุชุฑู ูุฐุง ุญูู ',' ุชุฑุงู ุฑุงุนู ุฎุฑุงุจ ูุฎุฑ ุนูู ูุตูุญู ุจูุช',]

let randomElement9 = list9[Math.floor(Math.random()*list9.length)]
        
console.log(randomElement9)

const list8 = ['ุชุนุงู ูุฑูุญ ุฏูุณูู ุณูุง','ูุง ุญูู ุนุงุฒูู ุนูู ุงุณูุฑููุฉ ุนูู ุญุณุงุจ ุงูู',' ูุงุญูู ูููู ุณูุงุจุ','ุชุนุงู ูุดุฑุจ ุนุตูุฑ ุชูุงุญ ุณูุง','ููุง ูุฑูุญ ุงูุจุญุฑ ูุงูุดูู ุนููุฉ','ุฒุฑูุช ุชุฐูุฑุชูู ุญู ูุงูุง ูุจุงุจุง ููุง ูุฑูุญ ุณูุง',' ูุงูุฏู ุชุตูุช ูููููุง ',' ูุงุฎู ูุงูุดุฎุต ูุญูู ',' ุชุฑู ุฅุดุชููุง ',' ูุงุจูุจู ุชุนุดูุชุ ',' ูุนู ูุตูุต ูุนุงู ุดุงูุ ',' ุชุฑูุญ ุงูุฑ ุงูุจููู ูุฑ ุ ',' ูู ูุนุฑูุฉ ุฑุฌู ู ุฑุฌู ูู ุงูููุชุตุฑ',' ุนุงุฒูู ุนูู ุณุชูู ุนูู ุญุณุงุจ ',' ุงูู ุชููู ูุงุญููุชู ููู ูุงู ููููุ ',' ูุงุฎู ุงูุช ููุงู ',' ุงูุญูู ุฌุฏ ุฌุฏ ุนูุฏู ุณุคุงู ุงูุช ููู ุญููุ ',' ูุงููุง ุชุฑู ูุงูู ุงูู โฆโฆ. ',' ููู ูุงุชุชุงุจุน ุญุณุงุจ ูุงูุง ูู ุชููุชุฑุ ',' ูู ูุญู ูุญุฏูุงุ ',' ูุฏู ุงุชููุณ ูุงูุชุ ',' ูุด ุฑุงูู ุจ  ','   ุงุฑุณู ุฑููู ููุณุจุฑ ุนุดุงู ุนูุฏู ููุถูุน ูุนุงู ','ุนูุฏู ุญููุจ ููุทุฑุ',' ุงุญุณ ูุงุญุจูุชู',' ุงุญุณ ุญุจูุชู ุดููุง ',' ุชุชููุน ุงูุง ุจูุช ููุง ููุฏุ ',' ูุงุงู ุงุฎุชุฑุชู ุนุดุงู ุชุนุงุฑููู ู ุนุงุฑููู ุญุงูุง ',' ููู ุงูุช ุชุญุจ ุงูุทูุงุทู ููุง ุงูุฌุฒุฑุ ',' ุงุจุบุง ุงูู ุจุงุณุชุง ุณูููู ',' ูู ุฎูุฑูู ุชููู ุญูุงุฌุจ ูุงูุง ุฎุฏูุฌู ููุง ุฌุจูู ุจุงุจุง ุชุฑูู ุงุด ุฑุงุญ ุชุฎุชุงุฑุ ',' ุชุญุจูู ููุง ุชุญุจููุ ',' ุนูุฏู ูุงุณูุงุชุ ุฎูุตู ูุงุณูุงุชู ุงูุง ุญุฒููู ',' ูุงู ุงูุง ุนูุจู ุชุดุงุงุงู~ ',' ูุงูุง ุฏุงูู ุชุญุฐุฑูู ููู ',' ุงูุช ุฎูุงุดุ ',' ุงุญุณ ูุถุนู ูุดููู ููู ุตุฑุงุญู',' ูุชู ุงุฎุฑ ูุฑุง ุจููุชุ ',' ุงุจุบุง ุงุจูู ุนูุฏู ุดู ุงุจูู ุนูููุ ',' ุงูุง ุญุฒููู ุงุญุชุงุฌ ููุงุณุงู',' ุจูู ุจูู ุทุฎูุชู ุณูู ููุณู ููุช','ุงุญุณ ุงูุชู ุงูุงุซููู ุชูุงูุดู ูุฏุงูู ุงุจุบุง ุงุถุญู','ุงุณูุนู ุงูุชู ุชุนุฑููู ุจุนุถุ','ุงุด ุฑุงููู ูุตูุฑ ุงูุงุตุฏุบุงุก ุงูุซูุงุซูุ','ูููู ุงูู ูุฑูู ุดููุง','ูููู ุงูู ุงูุถู ูุง ุฑุฃุชู ุนููุงู ','ุชุฑุง ูุงู ูู ุงูู ุจูุงูู','ุชุฑุง ุฐุง ูููู ุงูู ุนุณู ุนุณู','ุชุฑุง ูุฐุง ูุงูู ุนููู ูุจุบุง ูุดุฑุดุญู','ุชุฑุง ูููู ุงูู ุฏุฌุงุฌู',]

let randomElement8 = list8[Math.floor(Math.random()*list8.length)]
        
console.log(randomElement8)

const list3 = [' ุงูู', '  ุฎุฐ ู ุงุณูุช', '   ุฌุงูุณ ุงุญุท ููููุงุฌ ู ุงูู','   ุงูู ุฑูุญุชู ุญููู ','  ุงูุง ูุชุฎุจู',' ููููู ุงูุช ูุฐูุฐ',' ูุงุงุงุงุงุงู',' ุชุนุงู ุงุฑูุต',' ุงูุง ูุงุณููุช ุดูุก',' ุงุฎูุฑุง ',' ุชุจู ุงุนููุ',' ูุงูุง ุดูููู ',' ูุงุฒููู',' ุงูุง ูุณุชุนุฌู',' ุงุจุฏ ูุง ูุฒุนู ',' ุงูุง ูุณุชุนุฌู',' ููููู',' ุงูุง ูุณููู ','  ุงุญุณ ูุฎูู ุฃู ุดู',' ุงูุง ูุณููู ',' ุชุฑู ุงุดููู ',' ุงูุง ุฌูุนุงู ูุญุฏ ูููููู','   ุฃุณุชุงุฐููู','  ุงุณูู ','   ุงุฑูุต',' ูุงูููู',]

let randomName = list3[Math.floor(Math.random()*list3.length)]
        
console.log(randomName)

const listูุฏุญ = ['ุฃูุง ูุฎูุฑู ุจุฅุจุฏุงุนู','ุดูุฑุงู ููุฌูุฏู ุถูู ุจุซูุง ูุฃูุช ูุจุฉ ูู ุงููู ููุง','ุฃูุช ุญูุงู ุฌููุฑุฉ ูู ุงูุฅุจุฏุงุน ุฃุชููู ุฃู ุชุธู ูุจุฏุนุงู ุฅูู ุงูุฃุจุฏ','ุฃูุช ุดุฎุต ุฑุงุฆุน ุฃูุซุฑ ููุง ุชุฏุฑู','ูู ูุญู ูุญุธูุธูู ุจูุฌูุฏ ุดุฎุต ูุฏูู ุฃููุงุฑ ูุจุชูุฑุฉ ูุซูู ุจูููุง','ุนูุฏูุง ูุจุญุซ ุนู ูููุงุช ุงูุดูุฑ ูุงูุชูุฏูุฑ ุชุนุฌุฒ ุงููููุงุช ุนู ูุตู ูุง ูุดุนุฑ ุจู ูุชุฌู ุงูุฃููุงู ูุจู ุฃู ููุชุจ ูู ุฑุณุงูุฉ ุดูุฑ ูุซูุงุก','ูุง ุฃุฑูุน ุงูุนูู ูุน ุดุฎุต ูุจุฏุน ูุซูู ูุง ูุณุชุณูู ุญุชู ูุญูู ุฃูุฏุงูู','ููุฏ ุญุงููุช ุตูุงุบุฉ ุนุจุงุฑุงุช ูุฏุญ ุนุฏูุฏุฉ ูุซูุงุฆู ูุดูุฑู ุนูู ูุง ูุฏูุช ููุง ููููู ุชุฌุงูุฒุช ูู ุชูู ุงูุนุจุงุฑุงุช','ุฃุฌูู ุนุจุงุฑุงุช ุงูุดูุฑ ูุงูุนุฑูุงู ูุง ุจุฏ ุฃู ุชุณุจู ุญุฑููู ูุชููู ุงูุณุทูุฑ ุงููุนุจุฑุฉ ุนู ุตุฏู ุงููุนุงูู ุงููุงุจุนุฉ ูู ููุจู ูู','ููู ูููู ูุฏูู ุฏุงุฆูุงู ุฃูุถู ุงูุฃููุงุฑ ุงูุฅุจุฏุงุนูุฉุ ูุงูู ูู ุดุฆ ุฑุงุฆุน ุฃู ูููู ุฅุจุฏุงุนู ููุณ ูู ุญุฏูุฏ','ุฃุญุจ ุทุฑููุฉ ุชูููุฑู ููุบุงูุฉุ ูุง ุจุฏ ุฃู ูุทุจู ุฃููุงุฑู ุงูุฅุจุฏุงุนูุฉ ุนูู ุฃุฑุถ ุงููุงูุนุ ููุฏ ุฃูุนู ุงููู ุนููู ุจุฃูุตู ูุฏุฑ ูู ุงูุฅุจุฏุงุน','ุฃูุง ุญูุงู ุฃุญุจ ุงูุญุฏูุซ ูุนู ููู ููุชุญ ูู ุขูุงูุงู ุฌุฏูุฏุฉ ููุชูููุฑ','ูุณุนุฏูุง ุฏุงุฆูุงู ุฃู ูุฑู ูุฌุงุญู ุฃูุช ุญูุงู ุชุณุชุญู ุฐูู','ูู ูุญู ูุฎูุฑูู ุจุงููุฌุงุญ ุงูุฐู ุชุญููู','ููุฏ ุณุงุนุฏุชูุง ููุงุฑุงุชู ุงูุฑุงุฆุนุฉ ูู ุญู ูุดููุงุชูุง ูุงููุตูู ุฅูู ุฃูุฏุงููุง ุจุณุฑุนุฉ ุฃูุจุฑ','ุฃุชููุน ูู ุงููุตูู ุฅูู ููุฉ ุงููุฌุงุญ ูุฏุงุฆูุงู ุฃูุฏูุด ูู ุนููู ุงูุฌุงุฏ ูุชูุงููู ูู ุฃุฏุงุก ุงูุนูู','ุงูุฅุจุฏุงุน ูู ุฃุฏุงุก ุนููู ูู ูุฑู ูุซููุงู ูู ูู ูุจู ูู ุจุซูุง','ุงููุจุฏุน ุงููุญูุฏ ุงูุฐู ุฃููู ุณุนูุฏุงู ุจุงูุงุทูุงุน ุนูู ุนููู ูู ุฃูุช','ูุงุฒูุช ูุงุฏุฑุงู ุนูู ุชูุฏูู ุนูู ูููุฒ','ุฃูุช ูุตุฏุฑ ุฅููุงู ููุฃุฎุฑูู','ูู ูู ุฌููู ุงูุชุญุฏุซ ูุน ุดุฎุต ูุจุฏุน ูุซูู ูุฃูุช ุฏุงุฆูุงู ุชูุธุฑ ููุญูุงุฉ ูู ููุธูุฑ ูุฎุชูู ููููุฒ','ูุง ุดู ุฃู ุงูุนูู ูุนู ุดุฆ ุฑุงุฆุน','ูุง ูู ูู ุดุฎุต ูุงุฏุฑ ุนูู ุชุญููู ูุชุงุฆุฌ ูุจูุฑุฉ ุฑุบู ูุฌูุฏ ุงููุซูุฑ ูู ุงูุฃุฒูุงุช ุดูุฑุงู ูู','ุฅู ุงูุฃุญุฑู ุงูุชู ุจุงุชุช ูููุงุช ูุงููููุงุช ุงูุชู ุจุงุชุช ุฌูู ููุฏุช ูู ุนุจุงุฑุงุช ุงูุฌูุงู ูู ุณุจูู ุฌูุงู ูุง ุชูุฏูู ููุง','ุฅูู ุตุงุญุจ ุฃุนุธู ูููุฉ ูุญุงูู ุฃุนุธู ุฑุณุงูุฉ ูู ุนุจุงุฑุงุช ุงููุฏุญ ููุตุงุฆุฏ ุงูุดูุฑ ูุง ุชูู ุญูู','ุฃูุช ุฃูุซุฑ ุดุฎุต ูุจุฏุน ูุงุจูุชู ุนูู ุงูุฅุทูุงู','Wow, thatโs how you create Very inspiring',]

let randomElementูุฏุญ = listูุฏุญ[Math.floor(Math.random()*listูุฏุญ.length)]
        
console.log(randomElementูุฏุญ)

const listุณุชู = ['@6_iqp ููุง ููุง ุณุชู ','@6_iqp ููุง ููุง ุทูุจ','@6_iqp ุงููุง ุนุทุจ','','','','', '','','','','', '','','','','', '','','','','', '','','','','', '','','','',]

     let randomElementุณุชู = listุณุชู[Math.floor(Math.random()*listุณุชู.length)]
        
      console.log(randomElementุณุชู)

      const listcat = [' @deathcaty ูุง ุตุฏุช ูู ุชููู ููุง','ุตูุฏุชู ูุน ุงูุชููู ุนุทูู ุดูู ููุง ุจุถุฑุจู @deathcaty','','','','','','',]

     let randomElementcat = listcat[Math.floor(Math.random()*listcat.length)]
        
      console.log(randomElementcat)

      const listูุตูู = ['ูุฏุนูู ูุตููููู @f_q8_x','ุชุฑุงู ุบุซูุชูุง ูุตูู','','', '','','','','', '','','','','', '','','','','', '','','','','','','', '','','','','', '','','','','', '','','','','', '','','','','', '','','','','','','', '','','','','', '','','','','', '','','','','',]

      let randomElementูุตูู = listูุตูู[Math.floor(Math.random()*listูุตูู.length)]
         
       console.log(randomElementูุตูู)

      const listso = ['!sr https://music.youtube.com/watch?v=Xi1SmdBvJ5U&feature=share', '!sr https://www.youtube.com/watch?v=EgT_us6AsDg&pp=ygUMc2VsZW5hIGdvbWV6', '!sr https://youtu.be/I4rtcJnRd6s','!sr https://www.youtube.com/watch?v=J6Ygf4pGcjo','!sr https://www.youtube.com/watch?v=v1miNcZiw74&list=RDGrUky4ZTVmE&index=26','!sr https://music.youtube.com/watch?v=zlF-KFWf6c4&feature=share',]

      let randomElementso = listso[Math.floor(Math.random()*listso.length)]
              
      console.log(randomElementso)

      const list2 = ['herodevil8nf4 ', 'herodevilAKAFBI ', 'herodevilGutiar ','herodevil77dance  ','herodevilMst83d ','herodevilT8HO ',]

      let randomElement = list2[Math.floor(Math.random()*list2.length)]
              
      console.log(randomElement)

 /* const listbits = [`ู ุงุฎูุฑูุง ุงุจู ุตูุงุฏุญ ุจูุดุชุฑู ูู ุจูุฏู  `,`ููุฏ ุฃุถูุช ุงููุซูุฑ ูุญูุงุชูุ !`,`ุฃุดูุฑู ุนูู ูุฑูู ูุณุฎุงุกู!`,`ููุฏ ุฃุฏุฎูุช ุงูุณุนุงุฏุฉ ุนูู ููุจูุ !`,`ุชูุฏูุฑู ูู ูุดูุฑู ุงูุนููู!`,`ุฃุดูุฑ ุงููู ุนูู ูุฌูุฏู ูู ุญูุงุชู!`,`ุดูุฑูุง ููู ุงููุฌููุฏ ุงูุฐู ุจุฐูุชู!`, `ููุฏ ุฌุนูุช ูููู ุฃูุถูุ !`,`ูููุช ูุงูุง ุงุทูุจ ูู ุจุงุจุง ูุดุฑู ูู ุณููู 5 ููููู ูุงุนูุฏู๐ข.. ุงููู ูุณุนุฏู ูุง  ุนูู ุงูุฏุนู ุจุชุณุงุนุฏูู ุนูู ุงููุงุน ุจุงุจุง ๐`,` ูุงูุง ุฎุฏูุฌุฉ ุงุฒุนุฌุชูุง ููู ุชุจู ูููุณุฉ ุฑูุจูุชูุฉ ๐งน๐ุ ุจูุฐุง ุงูุฏุนู ุณุงุนุฏุชูุง ุงููุง ูุณูุชูุง ููุฌูุจ ููุง ุงููููุณุฉ ุดูุฑุง ูู ูุงููู ูุณุนุฏู ๐ฅฐ`,` ุงุฎูููุฑุง ุจูุฐุง ุงูุฏุนู ุงูุฏุฑ ุงููุน ุจุงุจุง ูุดุฑู ูู ุจู ุณู ูุซู ุญูู ุงุจู ุงุจุฏุฃ ุงุจุซ ูุซูู ๐ญุ ุดูุฑุง ุงููู ููุซุฑ ุฎูุฑู ๐ฅน`,` ุดูุฑูุง ูู ุนูู ุฅุณุนุงุฏู ูุฌุนู ูููู ุฃูุถู`,`ูุง ุฃุนุฑู ููู ุฃุนุจุฑ ุนู ุดูุฑู ูู`,` ุฃูุง ููุชู ูุญุณู ููุจู ูุณุฎุงุกู`,` ุดูุฑูุง ูู ุนูู ูุณุงุนุฏุชู ูุฏุนูู`,`ุฃูุง ููุชู ููู ุดูุก ูุฏูุชู ูู ุฏูู ููุงุจู`,` ุฃุดุนุฑ ุจุงูุงูุชูุงู ูุงูุดูุฑ ููู ูุง ุชูุนูู ูู`,`ุดูุฑูุง ูู ุนูู ุฅุฏุฎุงู ุงูุณุนุงุฏุฉ ูุงููุฑุญ ุฅูู ุญูุงุชู`,`ูุง ูููููู ุฃู ุฃุนุจุฑ ุนู ุดูุฑู ุงููุจูุฑ ูู ุจูููุงุช`,`ุดูุฑูุง ูู ุนูู ูู ุงููุฌููุฏ ุงูุฐู ุจุฐูุชู ูู ุฃุฌูู`,` ููุฏ ุฃุฏุฎูุช ุงูููุฑ ูุงูุณุนุงุฏุฉ ุฅูู ุญูุงุชู`,` ุดูุฑูุง ูู ุนูู ุชูุฏูู ุงูุฏุนู ูุงููุณุงูุฏุฉ ุงููุงุฒูุฉ`,`ุดูุฑูุง ูู ุนูู ุฅุฏุฎุงู ุงูุฃูู ูุงูุชูุงุคู ุฅูู ุญูุงุชู`,`ุดูุฑูุง ูู ุนูู ุฅุณุนุงุฏู ูุฌุนููู ุฃุดุนุฑ ุจุงูุฃูุงู ูุงูุฑุงุญุฉ`,`ูุง ูููููู ุฃู ุฃุนุฑู ููู ุฃุนูุด ุฏูู ูุง ูุฏูุชู ูู`,`ุดูุฑูุง ูู ุนูู ุงูููุช ูุงูุฌูุฏ ุงูุฐู ูุฏูุชู ูู`,` ุฃุดุนุฑ ุจุงูุงูุชูุงู ูุงูุดูุฑ ููู ูุง ูุฏูุชู ูู ูู ูุจู`,`ุดูุฑูุง ูู ุนูู ุฅุธูุงุฑ ุงูุตุฏู ูุงูุฅุฎูุงุต ูู ุนูุงูุชู ูุนู`,`ูุง ูููููู ุงูุงุณุชุบูุงุก ุนู ูุง ูุฏูุชู ูู ูู ุฃููุงุช ุงูุญุงุฌุฉ`,]

 let randomElementbits = listbits[Math.floor(Math.random()*listbits.length)]
              
 console.log(randomElementbits) */

 /* setInterval(function () {
    getRandomViewer("herodevil777").then(randomuser => {
        console.log(client.say(channel, ` ${list8[Math.floor(Math.random()*list8.length)]} @${randomuser} `))
    })
},600000);

setInterval(function () {
    getRandomViewer("herodevil777").then(randomuser => {
    getRandomViewer("herodevil777").then(randomuser0 => {
       console.log(client.say(channel, ` @${randomuser0} ${list9[Math.floor(Math.random()*list9.length)]} @${randomuser} `))
    })})
},863000); */

 /* client.on('connected', () => {
    client.say(channel, `ุงูุณูุงู ุนูููู ุนูุจ ุฌุงุก   `);
 }); */

client.on('message', (channel, user, message, self) => {
    if(self) return;

    const firstWord = message.split(' ')[0]; // Get the first word of the message
      
   //console.log(channel,`The first word of the message is: ${firstWord}`);
   
   const cat = message.split(' ');
   const cat1 = message.split(' ')[1];
   const cat2 = message.split(' ')[2];
   const cat3 = message.split(' ')[3];
   const cat4 = message.split(' ')[4];
   const cat5 = message.split(' ')[5];
   const cat6 = message.split(' ')[6];
   const cat7 = message.split(' ')[7];
   const cat10 = message.split(' ')[10];
   //client.say(channel,` ${cat}`);

   const isModerator = user['user-type'] === 'mod';
   const isBroadcaster = user.username === 'herodevil777';
   const iscontrol = isBroadcaster || user.username === 'EIADu';

    var args = message.slice(1).split(' ');
    const command = args.shift().toLowerCase();
    const userChoice = message.toLowerCase();
    const username = user["display-name"]
    const badges = user.badges
    const isMod = user.mod || (badges && user.badges["broadcaster"])
    if (command == 'prediction' && isMod) {
        args = args.join(" ")
        args = extractArgs(args);
        console.log(args)
        if (!args) {
            client.say(channel, `@${username} you didn't precise any arguments, please try again!`)
            return 0;
        }

        if (args.length < 4) {
            client.say(channel, `@${username} you need at least 4 arguments to start a prediction!`);
            return 0;
        }

        if (args.length > 12) {
            client.say(channel, `@${username} too many arguments (max of 12)`)
            return 0;
        }

        if (!Number.isInteger(+args[args.length - 1]) || args[args.length -1] == "0") {
            client.say(channel, `@${username} make sure you well precise a non-zero duration (in seconds)!`)
            return 0;
        }

        // args = [x.split("( )") for (x of )]
        // console.log(args.join(" ").split(/\s*(?![^()]*\))/))
        // args = args.join(' ')
        //                 .split( /\s*(?![^()]*\))/)
        //                .map(x => x.replace(/[()]/g, ''));
        url = 'https://api.twitch.tv/helix/predictions'
        title = args[0]
        outcomes = args.slice(1, -1).map(arg => ({title : arg}))
        prediction_window = +args[args.length - 1]
        getUser("herodevil777").then((data) => {
            channel_id = data["data"][0].id
            body_params = {
                'broadcaster_id': channel_id,
                title: title,
                outcomes: outcomes,
                'prediction_window': prediction_window
            }
        fetch(url, {
            method: 'POST',
            headers: headers_2,
            body: JSON.stringify(body_params)
          })
            .then(response => response.json())
            .then(data => {
                console.log(data)
                if (data["data"]) {
                    client.say(channel, `@${user.username}, prediction "${title}" started successfully!`)
                } else {
                    client.say(channel, `@${user.username}, There is already a prediction running or there was an error while requesting! Please try again!`)
                }
            }).catch(error => client.say(channel, `@${user.username}, There is already a prediction running or there was an error while requesting! Please try again!`));
        })
    }

    if(firstWord == 'say') {
        if(username == 'EIADu') {
            const response = message.slice(4); // ุงุณุชุฎุฑุงุฌ ุงูุฌุฒุก ุจุนุฏ 'say '
            client.say('#herodevil777', response);
    } else {
        client.say(channel,`@${user.username} ูุง ุงุณูุน ุงูุง ูู ุงูุจู ุจูุณ`)
    }
}
/* if (isModerator || isBroadcaster) {
if(firstWord == '!ุฒูุฏ') {
  const response = message.slice(4); // ุงุณุชุฎุฑุงุฌ ุงูุฌุฒุก ุจุนุฏ 'say '
            client.say(channel, `!editcom ุจูู ูู ุงูุจูู  ${response} ุณุงุนุฉ`);
} 
} */

// ุชุญุฏูุฏ ุงูุฑูู ุงูุฐู ูุฃุชู ุจุนุฏ "ุนุฏ"
let commandParts = message.split(' ');
let countTo = parseInt(commandParts[1]); // ูุฃุฎุฐ ุงูุฑูู ุจุนุฏ ูููุฉ "ุนุฏ" ููุญููู ุฅูู ุฑูู ุตุญูุญ

if (firstWord == 'ุนุฏ' && !isNaN(countTo)) {
  if (username == 'EIADu') {
    for (let i = 1; i <= countTo; i++) {
      client.say(channel, `${i}`);
    }
  }
}


if(firstWord == 'luck') {
    if(username == 'EIADu') {
    const choces = ['1', '2', '3'];
    
    function getRandomChoice() {
      const randomIndex = Math.floor(Math.random() * choces.length);
      return choces[randomIndex];
    }
    
    function determineWinner(userChoice, computerChoice, eid) {
        if (
            (userChoice === '1' && computerChoice === '1' && eid === '1') ||
            (userChoice === '2' && computerChoice === '2' && eid === '2') ||
            (userChoice === '3' && computerChoice === '3' && eid === '3')
          ) {
            return 'You win!';
          } else {
            return 'Try again';
          }
        }
    
    
    client.on('message', (channel, userstate, message, self) => {
      if (self) return;
    
      const sender = userstate.username;
      const userChoice = message.toLowerCase();
    
      if (choces.includes(userChoice)) {
        const computerChoice = getRandomChoice();
        const eid = getRandomChoice();
        const result = determineWinner(userChoice, computerChoice, eid);
        client.say(channel, `@${sender} ${userChoice} ,${computerChoice} ,${eid} ${result}`);
      } 
    
    })} else { const list2 = ['herodevil8nf4 ', 'herodevilAKAFBI ', 'herodevilGutiar ','herodevil77dance  ','herodevilMst83d ','herodevilT8HO ',]

    let randomElement = list2[Math.floor(Math.random()*list2.length)]
            
    console.log(randomElement)
            client.say(channel, ` ${list2[Math.floor(Math.random()*list2.length)]} ${list2[Math.floor(Math.random()*list2.length)]} ${list2[Math.floor(Math.random()*list2.length)]} @${user.username} `);
        }
};

/* function getRandomChoice2() {
    const randomIndex2 = Math.floor(Math.random() * list2.length);
    return list2[randomIndex2];
  }

function emot(a, b, c) {
    if (
        (a === 'herodevil8nf4' && b === 'herodevil8nf4' && c === 'herodevil8nf4') ||
        (a === 'herodevilAKAFBI' && b === 'herodevilAKAFBI' && c === 'herodevilAKAFBI')  ||
        (a === 'herodevilGutiar' && b === 'herodevilGutiar' && c === 'herodevilGutiar')   ||
        (a === 'herodevil77dance' && b === 'herodevil77dance' && c === 'herodevil77dance')  ||
        (a === 'herodevilMst83d' && b === 'herodevilMst83d' && c === 'herodevilMst83d')  ||
        (a === 'herodevilT8HO' && b === 'herodevilT8HO' && c === 'herodevilT8HO')  
      ) {
        return 'We have a winner We will register your name in the list of winners';
      } else {
        return 'Try again';
      }
    }

    if(firstWord == 'ุญุธูุ') {
        const a = getRandomChoice2();
        const b = getRandomChoice2();
        const c = getRandomChoice2();
        const result2 = emot(a, b, c);
        client.say(channel, `@${user.username} ${a} ${b} ${c} ${result2}`);
    } */

/* if (cat4 == 'title') {
    if(username == 'Nightbot') {
    client.say(channel, ' ุชู ุชุบูุฑ ุงูุนููุงู')
}}

if (cat4 == 'game') {
    if(username == 'Nightbot') {
    client.say(channel, ' ุชู ุชุบูุฑ ุงูููู ')
}} */

const list3a = [`${cat1}`,`@${user.username}`]
   
        let randomElement3a = list3a[Math.floor(Math.random()*list3a.length)]
           
         console.log(randomElement3a)

if (firstWord == 'ุนุงุฑููู') {
  if (username == 'EIADu') {
    client.say(channel, `ุงููุงุฆุฒ ูู @EIADu`)
  } else if (cat1 == '@eiadu') {
    client.say(channel, `ุงููุงุฆุฒ ูู @eiadu`)
  } else client.say(channel, `ุงููุงุฆุฒ ูู ${list3a[Math.floor(Math.random()*list3a.length)]}  `)
}

/* client.on('message', (channel, userstate, message, self) => {
    if (self) return; // Ignore messages from the bot itself
  
    if (message === '!randomviewer') {
      const viewers = client.getUsers(channel);
      const randomViewer = Math.floor(Math.random() * viewers.length);
      client.say(channel, `The random viewer is ${viewers[randomViewer].username}!`);
    }
  }); */
    
/* if(cat == 'ุนูููู') {
    client.say(channel, `ูุฑุฏูู ุงูุงุบูู`)
} */

/* if(firstWord == 'ุญุธูุ') {
  client.say(channel,`  @${user.username} herodevilAKAFBI herodevilAKAFBI herodevilAKAFBI  We have a winner We will register your name in the list of winners `)
} */
    if(firstWord == 'ุฑุญุจ') {
        if(username == 'EIADu') {
        client.say(channel,`ุงุฑุญุจ ูุง ${cat2} ุชู ูุง ููุฑ ุงูุจุซ herodevilT8HO  `)
    } else {
        client.say(channel,`ูุง ุงูููุง ู ุณูููุง ูููุฑูู ุฌููุนูุง`)
    }
    }

    if (firstWord == 'ุตุจุงุญ' && user.username !== '3nb77') {
      client.say(channel, `๐น ${listsb[Math.floor(Math.random() * listsb.length)]} @${user.username} `);
  }

    if(firstWord == 'ูุณุงุก' && user.username !== '3nb77') {
        client.say(channel, `๐น ${listms[Math.floor(Math.random()*listms.length)]} @${user.username}  `)
    }

    /* if(username == `mugiwara911`) { 
        const listูู = [``, '','','', '','','','','','','','',]
   
        let randomElementูู = listูู[Math.floor(Math.random()*listูู.length)]
           
         console.log(randomElementูู)
        client.say(channel, `${listูู[Math.floor(Math.random()*listูู.length)]}  `);
    } */

    if(message == 'hello') {
        client.say(channel, `@${user.username}, hello!`);
    }

    if(message == '!ูุนุจุฉ') {
      client.say(channel, `@${user.username}  ูู ุงูุนุงุจ ูุงุฌุฏ {(ุญุธูุ),(ุญุฌุฑุฉ ูุฑูุฉ ููุต),(!ูููุฉ,!word,!anime),(!startgame),(!randomnumbers) ู ุงููุซูุฑ ู ุงููุซูุฑ ูู ุงููุนุงุจ ู ุงุฐุง ุชุจู ุชุธูุฑ ุงุณูุงุก ุงููุงุฆุฒูู ุงุณุชุนูู !list} `);
  }

    if(username == 'cherryy__777') {
        client.say(channel, ` ${listูุฒ[Math.floor(Math.random()*listูุฒ.length)]}  `);
    }

    if(username == 'imosabx7') {
        client.say(channel, ` ${listูุตุนุจ[Math.floor(Math.random()*listูุตุนุจ.length)]}  `);
    }

    if(username == '6_iqp') {
        client.say(channel, `${listุณุชู[Math.floor(Math.random()*listุณุชู.length)]} `);
    }

    if(username == 'f_q8_x') {
      client.say(channel, `${listูุตูู[Math.floor(Math.random()*listูุตูู.length)]} `);
  }

  if(username == 'deathcaty') {
    client.say(channel, `${listcat[Math.floor(Math.random()*listcat.length)]}`);
}

    /* if (username.toLowerCase() === 'nightbot') return;
        
        const listmod = [`@${user.username} ${list8[Math.floor(Math.random()*list8.length)]} `, '','','', '','','','','', '','','','','', '','','','','', '','','','','', '','', '','','','','', '','','','','', '','','','','', '','','','','', '','','','','', '','','','','', '','','','','', '','','','','', '','', '','','','','', '','','','','', '','','','','', '','','','','', '',]
   
        let randomElementmod = listmod[Math.floor(Math.random()*listmod.length)]
           
         console.log(randomElementmod)
   
           client.say(channel, ` ${listmod[Math.floor(Math.random()*listmod.length)]}  `); */
    

    if (cat2 == 'SUB') {
        if (username == 'EIADu') {
            client.say(channel,`ุดูุฑุง ุนูู ุงูููุช ู @${cat4} ูุง (@${cat10} ูุซุฑ ุงููู ุฎูุฑู`)}
            if (username == 'WizeBot') {
                client.say(channel,`ุดูุฑุง ุนูู ุงูููุช ู @${cat4} ูุง (@${cat10} ูุซุฑ ุงููู ุฎูุฑู`)}
            }

            if (cat1 == 'RE-SUB') {
                if (username == 'EIADu') {
                    client.say(channel,`ุดูุฑุง ุนูู ุงูุงุดุชุฑุงู ูุง @${cat3}`)}
                    if (username == 'WizeBot') {
                        client.say(channel,`ุดูุฑุง ุนูู ุงูุงุดุชุฑุงู ูุง @${cat3}`)}
                    }

                    if (cat6 == 'subscriptions') {
                        if (username == 'EIADu') {
                            client.say(channel,`ุดูุฑุง ุนูู ุงูููุช ู  ${cat5} ุงุดุฎุงุต  ูุง @${cat1}`)}
                            if (username == 'WizeBot') {
                                client.say(channel,`ุดูุฑุง ุนูู ุงูููุช ู ${cat5} ุงุดุฎุงุต ูุง @${cat1}`)}
                            }

            if (firstWord == '๐ค') {
                if (username == 'EIADu') {
                    client.say(channel,`ุดูุฑุง ุนูู ุงููููู ูุง @${cat4}`)}
                    if (username == 'WizeBot') {
                        client.say(channel,`ุดูุฑุง ุนูู ุงููููู ูุง @${cat4}`)}
                    }
                    
                    
                    if(username == 'herodevil777') {
                        const listุชุฑูู = [` ูุด ุชุจู ุงูุช ุฑูุฒ ุนูู ุจุซู @herodevil777`, '','','', '','','','','','','','','','', '','','','','', '','','','','', '','','','','', '', '','','', '','','','','','','','','','', '','','', '','','','','','','','','','',]
   
        let randomElementุชุฑูู = listุชุฑูู[Math.floor(Math.random()*listุชุฑูู.length)]
           
         console.log(randomElementุชุฑูู)
        client.say(channel, `${listุชุฑูู[Math.floor(Math.random()*listุชุฑูู.length)]}  `);
    }

    if(message == 'ุงุฑูุต ุนูุจ') {
        if(username == 'EIADu') {
            client.say(channel, `herodevilGutiar  herodevilGutiar  herodevilGutiar  herodevilGutiar  herodevilGutiar  herodevilGutiar  herodevilGutiar `);
            client.say(channel, `herodevilGutiar  herodevilGutiar  herodevilGutiar  herodevilGutiar  herodevilGutiar  herodevilGutiar  herodevilGutiar `);
            
            setTimeout(function () {
    
                console.log(client.say(channel, `herodevil77dance  herodevil77dance  herodevil77dance  herodevil77dance  herodevil77dance  herodevil77dance  herodevil77dance `))
                console.log(client.say(channel, `herodevil77dance  herodevil77dance  herodevil77dance  herodevil77dance  herodevil77dance  herodevil77dance  herodevil77dance `))
            
        },6000);
        } else {
            client.say(channel,`@${user.username} ูุจ ุฑูุงุตู ุนูุฏู ุงูุง`)
        }
        
         }
         
         if(firstWord == 'ุจุฑุจ') {
            const listุจุฑ = [`@${user.username} ุฎุฐ ุฑุงุญุชู ูุง ููุจู `,`@${user.username} ุชูุช`,`@${user.username} ูู ุงูุงู ุงููู`,]
    
    let randomElementุจุฑ = listุจุฑ[Math.floor(Math.random()*listุจุฑ.length)]
            
    console.log(randomElementุจุฑ)
            client.say(channel, ` ${listุจุฑ[Math.floor(Math.random()*listุจุฑ.length)]}`);
        }
            
    if(firstWord == 'ุจุงู') {
        client.say(channel, `@${user.username} ูููู ุจุงู ุงุญุณู ูู ูุฑุฌุน `);
        if(username == 'EIADu') {
            client.say(channel, `${listุชุฑุญูุจ[Math.floor(Math.random()*listุชุฑุญูุจ.length)]} ${listeiad[Math.floor(Math.random()*listeiad.length)]}`);
        }
    }

    if(message == 'ุงุญุจู ุนูุจ') {
        client.say(channel, `@${user.username}, ุงูุง ุงุญุจูู ุจุนุฏ herode3Heart `);
    }

    if(firstWord == 'ุนูููู') {
        client.say(channel, `!timeout  @${user.username} 1`);
    }

    if(firstWord == 'ุนูู') {
        if(username == 'EIADu') {
        client.say(channel, `!timeout ${cat1}  1`);
    } else if(username == 'EIADz_88') {
        client.say(channel, `!timeout ${cat1}  1`);
    }}

    if(firstWord == 'ุงุญุณ') {
        client.say(channel, `@${user.username}, ูุงููููู ุงูุช ู ุงุญุณุงุณู herodevil1  `);
    }

    if(firstWord == 'ุนูุจู') {
        client.say(channel, `@${user.username} ุนููู ุนูุจ ุงููุฏูุฑุฉ ๐น๐`);
    }

    if(firstWord == 'ุนูุจุ') {
        client.say(channel, `@${user.username} ๐น๐ููุง , ุงูุง ุนูุจ ููุฏ ุชุฑูู ูุฎุฏูุฌุฉ ุฏุงูู ุฃููู ุจุงูุจุซ ูุตุฏูู ุงูุดุงุช ุงูุตุฏูู`);
    }

    if(firstWord == 'ุนููุจ') {
        client.say(channel, `ูุง ุชุดุบูููู ูุงุนุฏ ุงูู ๐ค๐ป`);
    }

    if(message == 'ููู ุนูุจ') {
        client.say(channel, `@${user.username},ูู ุงูุญูุงู`);
    }

    if(message == 'ุนูุจ ุชุญุจููุ') {
        client.say(channel, `ุงุญุจ ูุงูุง ูุจุงุจุง ุจุณ ๐น`);
    }

    if(firstWord == 'ูููู') {
        client.say(channel, `@${user.username}, ุจุฎูุฑ `);
    }

    if(firstWord == 'ุงุฎุจุงุฑูู ') {
      client.say(channel, `@${user.username}, ุจุฎูุฑ ูุงูุงู ุงูุฎูุฑ ุจุดุฑูุง ุนูู `);
  }

    if(message == ' ูุด ุชูุฑู ุนูุจุ') {
        client.say(channel, `ุงูุดูุณ - ุจุงุจุง ุงุฐุง ุชูู - ุงุณูุงููุฑ - ุงูู ูุง ูุณูู ูููู `);
    }

    if(message == 'ุงุจู ุฌุจูุฉ') {
        client.say(channel, `@${user.username} ุงูู ูุตุฏู ุจุงุจุงุ ๐น`);
    }

    if(firstWord == 'ุดุฑุงูู') {
        client.say(channel, `@${user.username} ูู ููุชู ุตุฑุงุญุฉ ๐น `);
    }

    if(message == 'ุนุทูุง ุญููุฉ') {
        client.say(channel, `@${user.username} ๐น๐ ูุงูู` );
    }

    if(firstWord == 'ููุฏ') {
        client.say(channel, `@${user.username} ูู  ุงูููุฏ ูุงููู ู ุงูููู ุงุจู ุฌุจูุฉ `);
    }

    if(firstWord == 'ุงูุฏุญูู') {
        client.say(channel, `@${user.username} ${listูุฏุญ[Math.floor(Math.random()*listูุฏุญ.length)]} `);
    }

    if(firstWord == 'ุชุฑุจุต') {
        client.say(channel, `@${user.username} ุชุฎูููู ูุญุงูู  `);
    }

    if(message == 'ูุด ุชุงูู ุนูุจ') {
        client.say(channel, `@${user.username} ูุจุงุจ ุจ ุงูุดููุงุทู  `);
    }

    if(firstWord == '!roll') {
        client.say(channel, `@${user.username} the number is ${Math.floor(Math.random() * 6) + 1} ${Math.floor(Math.random() * 6) + 1} ${Math.floor(Math.random() * 6) + 1}`);
    }

    /* if(message == 'ุญุธูุ') {
        const list2 = ['herodevil8nf4 ', 'herodevilAKAFBI ', 'herodevilGutiar ','herodevil77dance  ','herodevilMst83d ','herodevilT8HO ',]

let randomElement = list2[Math.floor(Math.random()*list2.length)]
        
console.log(randomElement)
        client.say(channel, ` ${list2[Math.floor(Math.random()*list2.length)]} ${list2[Math.floor(Math.random()*list2.length)]} ${list2[Math.floor(Math.random()*list2.length)]} @${user.username} `);
    } */

    if(firstWord == 'ุงููุ') {
        client.say(channel, `@${user.username} ${list1[Math.floor(Math.random()*list1.length)]} `);
    }

    if(firstWord == 'ูุทูุนุ') {
        client.say(channel, `@${user.username} ${list4[Math.floor(Math.random()*list4.length)]} `);
    }

    if(firstWord == 'ุชุชุญุฏูุ') {
        client.say(channel, `@${user.username} ${list5[Math.floor(Math.random()*list5.length)]} `);
    }

    if(firstWord == 'ุดุฑุจุ') {
        client.say(channel, `@${user.username} ${list6[Math.floor(Math.random()*list6.length)]} `);
    }

    if(firstWord == 'ุณุคุงูุ') {
        client.say(channel, `@${user.username} ${list7[Math.floor(Math.random()*list7.length)]} `);
    }

    if(message == 'ุนูุจ ููู') {
        if(username == 'EIADu') {
        
            client.say(channel,`@${user.username} ุงุจุดุฑ`);
            client.say(channel, `${listุณ[Math.floor(Math.random()*listุณ.length)]} `);
        } else if(username == 'Rraed_') {
            client.say(channel,`@${user.username} ุงุจุดุฑ`);
            client.say(channel, `${listุณ[Math.floor(Math.random()*listุณ.length)]} `);
        } else if(username == 'herodevil777') {
            client.say(channel,`@${user.username} ุงุจุดุฑ`);
            client.say(channel, `${listุณ[Math.floor(Math.random()*listุณ.length)]} `);
        } else {
            client.say(channel,`@${user.username} ุฏุฒ ุฏุฒ ุชุจู ุชุตุฑูู `)
    }} 

    /* if (firstWord == 'โ๏ธ') {
        if (username == 'EIADu') {
    setInterval(function () {
        console.log(client.say(channel, ` ุฐุง ุงูุฌุฏูู ุงูุงูุงู ุงูุฌุงูู ( ุงูุณุจุช : ุณูุงูู ู ูุนุจ || ุงูุงุญุฏ : ุงูููุงุช ุงูููุณู || ุงูุงุซููู : ุณูุงูู ู ูุนุจ ููููุงูุฏ || ุงูุซูุงุซุงุก : ุงูุจู || ุงูุงุฑุจุนุงุก : ุณูุงูู ู ูุนุจ || ุงูุฎููุณ : ุงูุจู || ุงูุฌูุนู : ุงูุจู ) ูุดูุฑุง ููู   `))
    
    },600000);
}
if(username == 'WizeBot') {
    setInterval(function () {
        console.log(client.say(channel, ` ุฐุง ุงูุฌุฏูู ุงูุงูุงู ุงูุฌุงูู ( ุงูุณุจุช : ุณูุงูู ู ูุนุจ || ุงูุงุญุฏ : ุงูููุงุช ุงูููุณู || ุงูุงุซููู : ุณูุงูู ู ูุนุจ ููููุงูุฏ || ุงูุซูุงุซุงุก : ุงูุจู || ุงูุงุฑุจุนุงุก : ุณูุงูู ู ูุนุจ || ุงูุฎููุณ : ุงูุจู || ุงูุฌูุนู : ุงูุจู ) ูุดูุฑุง ููู   `))
    
    },600000);
}} */

/* if (firstWord == 'โ') {
    if(username == 'EIADu') {
        client.say(channel,`  ููุง ุงุณุชุงุฐููู ูู ุงูุงู ุงููู`)
        setTimeout(function () {
            client.say(channel, `${listุณ[Math.floor(Math.random()*listุณ.length)]} `);
        },2000);
    }
    if(username == 'WizeBot') {
        client.say(channel,`  ููุง ุงุณุชุงุฐููู ูู ุงูุงู ุงููู`)
        setTimeout(function () {
            client.say(channel, `${listุณ[Math.floor(Math.random()*listุณ.length)]} `);
        },2000);
    }} */
    /* if (firstWord == 'โ๏ธ') {
        if (username == 'EIADu') {
            setTimeout((ab) => {
                console.log(client.say(channel,"ูุฐุง ุดูุก ุจููู ูุจูููู ููุงุฎุฑุฉ ูุงุญุจ ุงูุงุนูุงู ุงูู ุงููู ุณุฑูุฑ ุชุฏุฎูู ุนูู ูุณูู ( https://ehsan.sa/housing/details/190 ) ูุงูุฏุงู ุนูู ุงูุฎูุฑ ููุงุนูู ููุงููุต ูุงู ูู ุตุฏูู ู ุงููู ูููุง ุตุฏูุฉ ูู ููุบูุฑู ู ุฌุฒุงูู ุงููู ุฎูุฑ ููุฏูุง "));
              }, 6000);
              
            }
        if(username == 'WizeBot') {
            const timeoutID = setTimeout(() => {
                console.log(client.say(channel,"ูุฐุง ุดูุก ุจููู ูุจูููู ููุงุฎุฑุฉ ูุงุญุจ ุงูุงุนูุงู ุงูู ุงููู ุณุฑูุฑ ุชุฏุฎูู ุนูู ูุณูู ( https://ehsan.sa/housing/details/190 ) ูุงูุฏุงู ุนูู ุงูุฎูุฑ ููุงุนูู ููุงููุต ูุงู ูู ุตุฏูู ู ุงููู ูููุง ุตุฏูุฉ ูู ููุบูุฑู ู ุฌุฒุงูู ุงููู ุฎูุฑ ููุฏูุง "));
              }, 6000);
        }
    }
    if (firstWord == 'โ') {
        if(username == 'EIADu') {
            client.say(channel,`lilfokaBlueheart  ููุง ุงุณุชุงุฐููู ูู ุงูุงู ุงููู`)
            setTimeout(function () {
                clearTimeout(ab);
                },2000);
    }
        if(username == 'WizeBot') {
            client.say(channel,`lilfokaBlueheart  ููุง ุงุณุชุงุฐููู ูู ุงูุงู ุงููู`)
            setTimeout(function () {
            clearTimeout(timeoutID);
                },2000);
        }} */

    /* getRandomViewer("herodevil777").then(async randomuser => { */

    /* if(message == "ุนุดุงุกุ") {
      client.say(channel, `@${randomuser} ูุจู ูุชุนุดู ูุนู @${user.username}`);
    }

    if(message == "ููุ") {
        client.say(channel, `@${randomuser} ุณุทุฑู ูู  @${user.username}`);
      }

      if(message == "ุงูุทุงุฑุ") {
        client.say(channel, `@${randomuser} ูุจู ููุทุฑ ูุนู @${user.username}`);
      }

    if(message == "ุฒูุงุฌุ") {
        client.say(channel, `ูู ุฑูุถุงู @${user.username}`);
      }

     if(message == "ุณูุงูุ") {
        client.say(channel, `@${randomuser} ูุณูู ุนููู @${user.username}`);
      } */

    if(firstWord == 'ูุบุฒุ') {
        client.say(channel, ` ุงูุฌุฏ ${list20[Math.floor(Math.random()*list20.length)]} (${list30[Math.floor(Math.random()*list30.length)]}) `);
    }
        
        if(firstWord == 'ุงูุณูุงู')  {
            if(username == 'EIADu') {
                client.say(channel, `${listุชุฑุญูุจ[Math.floor(Math.random()*listุชุฑุญูุจ.length)]} ${listeiad[Math.floor(Math.random()*listeiad.length)]}`);
            } else { client.say(channel, ` ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ู ุจุฑูุงุชู ${listุณูุงู[Math.floor(Math.random()*listุณูุงู.length)]} @${user.username}`);
            
        }}

        
        if(firstWord == 'ุณูุงู') {
            if(username == 'EIADu') {
                client.say(channel, `${listุชุฑุญูุจ[Math.floor(Math.random()*listุชุฑุญูุจ.length)]} ${listeiad[Math.floor(Math.random()*listeiad.length)]}`);
            } else { client.say(channel, `ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ู ุจุฑูุงุชู ${listุณูุงู[Math.floor(Math.random()*listุณูุงู.length)]} @${user.username}  `);
            
        }}

        /* if (message.includes('ุนูุจ'!== 'nightbot')) {
            client.say(channel, `@${user.username} ${list3[Math.floor(Math.random()*list3.length)]} `);
        }
        if (message.includes('@3nb77'!== 'nightbot')) {
          client.say(channel, `@${user.username} ${list3[Math.floor(Math.random()*list3.length)]}`);
        } 
        if (message.includes('@3NB77'!== 'nightbot')) {
          client.say(channel, `@${user.username} ${list3[Math.floor(Math.random()*list3.length)]}`);
         }  */
          

          if (message.includes('ุนูุจ') && user.username.toLowerCase() !== 'nightbot' && user.username.toLowerCase() !== 'wizeBot') {
          client.say(channel, `@${user.username} ${list3[Math.floor(Math.random()*list3.length)]}`);
      }
      if(firstWord == '@3nb77' && user.username.toLowerCase() !== 'nightbot' && user.username.toLowerCase() !== 'wizeBot') {
          client.say(channel, `@${user.username} ${list3[Math.floor(Math.random()*list3.length)]}`);
      }
      if (firstWord === '@3NB77' && user.username.toLowerCase() !== 'nightbot' && user.username.toLowerCase() !== 'wizeBot') {
        client.say(channel, `@${user.username} ${list3[Math.floor(Math.random() * list3.length)]}`);
    }    

        /* if(firstWord == 'ุนูุจ') {
            client.say(channel, ` ูุนู ุงุฎูู ุงูุง ุฎุงุฑุฌ ุงูุชุบุทูู ููููู ูุฑู ุซุงููู NotLikeThis @${user.username} `);
        }
        if(firstWord == '@3nb77') {
            client.say(channel, `ูุนู ุงุฎูู ุงูุง ุฎุงุฑุฌ ุงูุชุบุทูู ููููู ูุฑู ุซุงููู NotLikeThis @${user.username}  `);
        }
        if(firstWord == '@3NB77') {
          client.say(channel, `ูุนู ุงุฎูู ุงูุง ุฎุงุฑุฌ ุงูุชุบุทูู ููููู ูุฑู ุซุงููู NotLikeThis @${user.username}  `);
      } */

        if(message == 'ูููุงูุฏุ') {
            client.say(channel, `@3NB77 - ุนูุจ - ูุบุฒุ - ุณุคุงูุ - ุดุฑุจุ - ุชุชุญุฏูุ - ูุทูุนุ - ุงููุ - ุญุธูุ - ูุด ุชุงูู ุนูุจ - ุงูุฏุญูู - ููุฏ - ุนุทูุง ุญููุฉ - ุดุฑุงูู - ุงุจู ุฌุจูุฉ - ูุด ุชูุฑู ุนูุจุ - ุนูุจ ุชุญุจููุ - ููู ุนูุจ - ุนููุจ - ุนูุจุ - ุนูุจู - ุงุญุณ - ุนูููู - ุนุงุฑููู - ุงุญุจู ุนูุจ -  ู ุงููุซูุฑ ู ุงููุซูุฑ ูู ุงูููุงูุฏุงุช `);
        }

        /* if(firstWord == 'ุงุบููู') {
            client.say(channel, ` ${listso[Math.floor(Math.random()*listso.length)]}`);
        } */

        if(firstWord == '!ุฏุฎู' ) {
          if(username == 'EIADu') {
          winnersList.push(cat1);
          io.emit('updateWinnersList', winnersList); // ุชุญุฏูุซ ุงููููุน
          client.say(channel,'ok boss')
        } else {client.say(channel,` @${user.username} ุงุดุชุบู ู ุงุฌุชูุฏ ู ููุฒ ู ุงุฏุฎูู ุงูุง ุดุบู ุงููุงุณุทุงุช ูุจ ุนูุฏูุง`)}
      } 

      if(firstWord == 'ูููุน') {
        client.say(channel, ` ูููุน ุชุฌุฑูุจู ูุนูุจ ููุฏ ุงูุชุทููุฑ ุงููู ูุธุฑุฉ ุนููู ู ุดุงุฑููุง ุชุฌุฑุจุชู ู ููุงุญุธุงุชู https://3nb.wuiltweb.com `);
    }


        
});

setInterval(function () {
  client.say(channel, `ููู ุชุญุฏู ุนูุฏูุง ูู ุจุฏุงูุฉ ุดูุฑ ุฌุฏูุฏ ุนูู ุงูุณุจุงุซูู ููู ุณุญุจ ุนูู 1000 ุฑูุงู ุณุนูุฏู. ุทุฑููุฉ ุงููุดุงุฑูุฉ ุจุณูุทุฉ: ุจุณ ุฌูุน 50 ุฃูู ููุทุฉ ู ุดุงุฑูุ ู ูุงููู ุงูููุฒ! ุงุฐุง ูุฏู ุชุนุฑู ูู ูุฑ ูููุ ุงูุชุจ !ููู`);
}, 6 * 60 * 60 * 1000); // 6 ุณุงุนุงุช = 6 * 60 ุฏูููุฉ * 60 ุซุงููุฉ * 1000 ูููู ุซุงููุฉ


/* client.on('whisper', (from, userstate, message, self) => {
   
    client.whisper(follower, 'ุดูุฑุง ูููุชุงุจุนุฉ! ุฃุชููู ุฃู ุชุณุชูุชุน ุจุงูุจุซ!');
}
); */

/* const TwitchAPI = require('twitch-api');
const api = new TwitchAPI({
    clientId: '6k29rg19rge0e7xpzj8z1lsh4r8cpf',
    clientSecret: '5ocoo5oui36m0x5uvjdfue8ja019qe',
});

api.getChannel('herodevil777').then(channel => {
    console.log(`The channel ${channel.display_name} has ${channel.followers} followers.`);
}).catch(err => {
    console.error(err);
});

api.getMessages('herodevil777').then(messages => {
    messages.forEach(message => {
      console.log(`${message.from} said: ${message.text}`);
    });
  }).catch(err => {
    console.error(err);
  }); */


client.on('cheer', (channel, userstate) => {
    const bits = userstate.bits;
    const username = userstate['display-name'];
    
    if(bits) {
        const listbits = [`ู ุงุฎูุฑูุง ุงุจู ุตูุงุฏุญ ุจูุดุชุฑู ูู ุจูุฏู  `,`ููุฏ ุฃุถูุช ุงููุซูุฑ ูุญูุงุชูุ !`,`ุฃุดูุฑู ุนูู ูุฑูู ูุณุฎุงุกู!`,`ููุฏ ุฃุฏุฎูุช ุงูุณุนุงุฏุฉ ุนูู ููุจูุ !`,`ุชูุฏูุฑู ูู ูุดูุฑู ุงูุนููู!`,`ุฃุดูุฑ ุงููู ุนูู ูุฌูุฏู ูู ุญูุงุชู!`,`ุดูุฑูุง ููู ุงููุฌููุฏ ุงูุฐู ุจุฐูุชู!`, `ููุฏ ุฌุนูุช ูููู ุฃูุถูุ !`,`ูููุช ูุงูุง ุงุทูุจ ูู ุจุงุจุง ูุดุฑู ูู ุณููู 5 ููููู ูุงุนูุฏู๐ข.. ุงููู ูุณุนุฏู ูุง @${username} ุนูู ุงูุฏุนู ุจุชุณุงุนุฏูู ุนูู ุงููุงุน ุจุงุจุง ๐`,` ูุงูุง ุฎุฏูุฌุฉ ุงุฒุนุฌุชูุง ููู ุชุจู ูููุณุฉ ุฑูุจูุชูุฉ ๐งน๐ุ ุจูุฐุง ุงูุฏุนู ุณุงุนุฏุชูุง ุงููุง ูุณูุชูุง ููุฌูุจ ููุง ุงููููุณุฉ ุดูุฑุง ูู ูุงููู ูุณุนุฏู ๐ฅฐ`,` ุงุฎูููุฑุง ุจูุฐุง ุงูุฏุนู ุงูุฏุฑ ุงููุน ุจุงุจุง ูุดุฑู ูู ุจู ุณู ูุซู ุญูู ุงุจู ุงุจุฏุฃ ุงุจุซ ูุซูู ๐ญุ ุดูุฑุง ุงููู ููุซุฑ ุฎูุฑู ๐ฅน`,` ุดูุฑูุง ูู ุนูู ุฅุณุนุงุฏู ูุฌุนู ูููู ุฃูุถู`,`ูุง ุฃุนุฑู ููู ุฃุนุจุฑ ุนู ุดูุฑู ูู`,` ุฃูุง ููุชู ูุญุณู ููุจู ูุณุฎุงุกู`,` ุดูุฑูุง ูู ุนูู ูุณุงุนุฏุชู ูุฏุนูู`,`ุฃูุง ููุชู ููู ุดูุก ูุฏูุชู ูู ุฏูู ููุงุจู`,` ุฃุดุนุฑ ุจุงูุงูุชูุงู ูุงูุดูุฑ ููู ูุง ุชูุนูู ูู`,`ุดูุฑูุง ูู ุนูู ุฅุฏุฎุงู ุงูุณุนุงุฏุฉ ูุงููุฑุญ ุฅูู ุญูุงุชู`,`ูุง ูููููู ุฃู ุฃุนุจุฑ ุนู ุดูุฑู ุงููุจูุฑ ูู ุจูููุงุช`,`ุดูุฑูุง ูู ุนูู ูู ุงููุฌููุฏ ุงูุฐู ุจุฐูุชู ูู ุฃุฌูู`,` ููุฏ ุฃุฏุฎูุช ุงูููุฑ ูุงูุณุนุงุฏุฉ ุฅูู ุญูุงุชู`,` ุดูุฑูุง ูู ุนูู ุชูุฏูู ุงูุฏุนู ูุงููุณุงูุฏุฉ ุงููุงุฒูุฉ`,`ุดูุฑูุง ูู ุนูู ุฅุฏุฎุงู ุงูุฃูู ูุงูุชูุงุคู ุฅูู ุญูุงุชู`,`ุดูุฑูุง ูู ุนูู ุฅุณุนุงุฏู ูุฌุนููู ุฃุดุนุฑ ุจุงูุฃูุงู ูุงูุฑุงุญุฉ`,`ูุง ูููููู ุฃู ุฃุนุฑู ููู ุฃุนูุด ุฏูู ูุง ูุฏูุชู ูู`,`ุดูุฑูุง ูู ุนูู ุงูููุช ูุงูุฌูุฏ ุงูุฐู ูุฏูุชู ูู`,` ุฃุดุนุฑ ุจุงูุงูุชูุงู ูุงูุดูุฑ ููู ูุง ูุฏูุชู ูู ูู ูุจู`,`ุดูุฑูุง ูู ุนูู ุฅุธูุงุฑ ุงูุตุฏู ูุงูุฅุฎูุงุต ูู ุนูุงูุชู ูุนู`,`ูุง ูููููู ุงูุงุณุชุบูุงุก ุนู ูุง ูุฏูุชู ูู ูู ุฃููุงุช ุงูุญุงุฌุฉ`,]

 let randomElementbits = listbits[Math.floor(Math.random()*listbits.length)]
              
 console.log(randomElementbits)
    client.say(channel,`${listbits[Math.floor(Math.random()*listbits.length)]} ูุดูุฑุง ุนูู ${bits} ุจุชุณ, ูุง @${username}`)}
    if(bits == '101') {
        client.say(channel,`ุญููุงูุงูุงููุงููุงูุงุงุชุช herodevil77dance  `)
    }

});

// ุงุณุชุฏุนุงุก ุญุฏุซ stream-up
client.on('stream-up', (channel, username) => {
    // ุงูููุฏ ุงูุฐู ุณูุชูุนู ุนูุฏ ุจุฏุก ุงูุจุซ
    console.log(`${username} has started streaming on ${channel}`);
    // ููุง ููููู ูุถุน ุฃู ูููุงูุฏ ุชุฑูุฏ ุชูููุฐู ุนูุฏ ุจุฏุก ุงูุจุซ
    client.say(channel, 'ูุฑุญุจุงู ุจุงูุฌููุนุ ุชู ุจุฏุก ุงูุจุซ!');
  });
  
  // ุงุณุชุฏุนุงุก ุญุฏุซ stream-down
  client.on('stream-down', (channel, username) => {
    // ุงูููุฏ ุงูุฐู ุณูุชูุนู ุนูุฏ ุงูุชูุงุก ุงูุจุซ
    console.log(`${username} has stopped streaming on ${channel}`);
    // ููุง ููููู ูุถุน ุฃู ูููุงูุฏ ุชุฑูุฏ ุชูููุฐู ุนูุฏ ุงูุชูุงุก ุงูุจุซ
    client.say(channel, 'ุดูุฑุงู ููุดุงูุฏุชูู ุฌููุนุงูุ ุชู ุงูุชูุงุก ุงูุจุซ!');
  });
  
  // ุงุณุชุฏุนุงุก ุญุฏุซ stream-change
  client.on('stream-change', (channel, username, status, game) => {
    // ุงูููุฏ ุงูุฐู ุณูุชูุนู ุนูุฏ ุชุบููุฑ ุญุงูุฉ ุงูุจุซ
    console.log(`${username} has changed their stream status to "${status}" playing ${game} on ${channel}`);
    // ููุง ููููู ูุถุน ุฃู ูููุงูุฏ ุชุฑูุฏ ุชูููุฐู ุนูุฏ ุชุบููุฑ ุญุงูุฉ ุงูุจุซ
    client.say(channel, `${username} changed their stream status to "${status}" playing ${game}`);
  });


 /*  let startTime;

  client.on('message', (channel, tags, message, self) => {
    if (message === '!start') {
      startTime = Date.now();
      client.say(channel, 'Timer started!');
    }
  });

  let intervalId;

client.on('message', (channel, tags, message, self) => {
  if (message === '!start') {
    startTime = Date.now();
    intervalId = setInterval(() => {
      const elapsedTime = Math.floor((Date.now() - startTime) / 1000);
      client.say(channel, `Elapsed time: ${elapsedTime} seconds`);
    }, 1000);
    client.say(channel, 'Timer started!');
  }

  if (message === '!stop') {
    clearInterval(intervalId);
    client.say(channel, 'Timer stopped!');
  }
}); */


const choices = ['rock', 'paper', 'scissors'];

function getRandomChoice() {
  const randomIndex = Math.floor(Math.random() * choices.length);
  return choices[randomIndex];
}

function determineWinner(userChoice, computerChoice) {
    if (userChoice === computerChoice) {
        return 'It\'s a tie!';
      } else if (
        (userChoice === 'rock' && computerChoice === 'scissors') ||
        (userChoice === 'paper' && computerChoice === 'rock') ||
        (userChoice === 'scissors' && computerChoice === 'paper')
      ) {
        return 'You win!';
      } else {
        return '3nb wins!';
      }
    }


client.on('message', (channel, userstate, message, self) => {
  if (self) return;

  const sender = userstate.username;
  const userChoice = message.toLowerCase();

  if (choices.includes(userChoice)) {
    const computerChoice = getRandomChoice();
    const result = determineWinner(userChoice, computerChoice);
    client.say(channel, `@${sender}, you chose ${userChoice}, 3nb chose ${computerChoice}. Result: ${result}`);
  } 

});

const generateRandomNumber = () => Math.floor(Math.random() * 10) + 1;

client.on('message', (channel, userstate, message, self) => {
    if (self) return;
  
    if (message.toLowerCase() === '!startgame') {
      const targetNumber = generateRandomNumber();
      client.say(channel, 'ูุนุจุฉ ุงูุฑูู ุงูุนุดูุงุฆู ูุฏ ุจุฏุฃุช!');
  
      const user = userstate['display-name'];
  
      const gameLoop = async () => {
        client.say(channel, `@${user} ุงุฎูู ุงูุฑูู ุจูู 1 ู 10 ุจุงุณุชุฎุฏุงู !guess`);
        
        const correctAnswer = targetNumber.toString();
        const userGuessInput = await new Promise(resolve => {
          client.on('message', (channel, userstate, message, self) => {
            if (self) return;
            if (userstate['display-name'] === user && message.startsWith('!guess')) {
              const userGuess = message.split(' ')[1];
              resolve(userGuess);
            }
          });
        });
  
        if (userGuessInput === correctAnswer) {
          client.say(channel, `ุชูุงูููุง! @${user} ููุฏ ูุฒุช! ุงูุฑูู ุงูุตุญูุญ ูู ${correctAnswer}`);
          winnersList.push(userstate.username);
          io.emit('updateWinnersList', winnersList); // ุชุญุฏูุซ ุงููููุน
        } else {
          client.say(channel, `ููุฃุณู! @${user} ุงูุฑูู ุงูุตุญูุญ ูู ${correctAnswer}`);
        }
      };
  
      gameLoop();
    }
  });

  client.on('message', onMessageHandler);

  function getRandomNumber(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  }
  
  function onMessageHandler(target, context, msg, self) {
    if (self) return;
  
    if (msg.toLowerCase() === '!randomnumbers') {
      const num1 = getRandomNumber(1, 3);
      const num2 = getRandomNumber(1, 3);
      const num3 = getRandomNumber(1, 3);
  
      let response;
      let outcome;
  
      if (num1 === num2 && num2 === num3) {
        outcome = 'ููุฏ ูุฒุช!';
      } else {
        outcome = 'ููุฏ ุฎุณุฑุช!';
      }
  
      response = `ุงูุฃุฑูุงู ุงูุนุดูุงุฆูุฉ: ${num1}, ${num2}, ${num3}. ${outcome}`;
  
      client.say(target, response);
    }
  }
  
  client.on('message', onMessageHandler2);
  
  /* client.on('connected', (addr, port) => {
    console.log(`ุชู ุงูุงุชุตุงู ุจุงูุจูุช ุนูู ${addr}:${port}`);
  });
 */
  const winnersList = [];

  function getRandomLetter() {
    /* const alphabet = 'abcdefghijklmnopqrstuvwxyz'; */
    const randomIndex = Math.floor(Math.random() * list2.length);
    return list2[randomIndex];
  }
  
  function onMessageHandler2(target, context, msg, self) {
    if (self) return;
  
    if (msg.toLowerCase() === 'ุญุธูุ') {
      const letter1 = getRandomLetter();
      const letter2 = getRandomLetter();
      const letter3 = getRandomLetter();
  
      let response;
      let outcome;
      
      if (letter1 === letter2 && letter2 === letter3) {
        outcome = 'We have a winner We will register your name in the list of winners';
        winnersList.push(context.username);
        io.emit('updateWinnersList', winnersList); // ุชุญุฏูุซ ุงููููุน
      } else {
        outcome = 'Try again';
      }
  
      response = `@${context.username} ${letter1} ${letter2} ${letter3} ${outcome}`;
  
      client.say(target, response);
  } else if (msg.toLowerCase() === '!list') {
    const winners = winnersList.join(', ');
    client.say(target, `ุงููุงุฆุฒูู ุญุชู ุงูุขู: ${winners}`);
  } else if (msg.toLowerCase().startsWith('!ุงุทุฑุฏ')) {
    if(context.username == 'eiadu') {
    const args = msg.split(' ');
    const removeUsername = args[1];

    const index = winnersList.indexOf(removeUsername);
    if (index !== -1) {
      winnersList.splice(index, 1);
      client.say(target, `ุชูุช ุฅุฒุงูุฉ ${removeUsername} ูู ุงููุงุฆูุฉ.`);
      io.emit('updateWinnersList', winnersList); // ุชุญุฏูุซ ุงููููุน
    } else {
      client.say(target, `${removeUsername} ุบูุฑ ููุฌูุฏ ูู ุงููุงุฆูุฉ.`);
    }} else {
      client.say(channel, `@${context.username} ูุจ ุนูู ูููู ุชุทุฑุฏ ุงููุงุณ `);
    } 
  }
} 
  
const targetMessage = 'herodevilAKAFBI';
const targetCount = 5;
let messageCount = 0;
let participants2 = new Set();

client.on('message', (channel, user, message, self) => {
  if (self) return;

  if (message.trim() === targetMessage) {
    participants2.add(user.username);
    messageCount++;

    if (messageCount >= targetCount) {
      // Perform your desired action here
      const participantList = Array.from(participants2).join(', ');
      client.say(channel,`ูุนู ูุฎูุงู ุงุจู ุงูุงู ูุง ุชุชุตููู ${participantList} `);
      // You can replace the console.log with your own action
    }
  }
});

const usersWhoSaidHi = [];

client.on('message', (channel, userstate, message, self) => {
  if (message.toLowerCase().includes('ุณูุงู') && !self) {
    const username = userstate.username;
    if (!usersWhoSaidHi.includes(username)) {
      usersWhoSaidHi.push(username);
      console.log(`${username} ูุงู "hi" ูู ุงูุดุงุช.`);
    }
  }
  
  if (message.toLowerCase() === '!ุนุฑุถ') {
    const userList = usersWhoSaidHi.join(', ');
    client.say(channel, `ุงูุงุดุฎุงุต ุงูู ุณููู ุงูู ุงูุงู ${userList}`);
  }
});

client.on('message', (channel, userstate, message, self) => {
    if (self) return;
  
    if (userstate['message-type'] === 'whisper') {
      if (message.includes('herodevil3')) { // ุงูุชุญูู ููุง ุฅุฐุง ูุงูุช ุงูุฑุณุงูุฉ ุชุญุชูู ุนูู "ูู"
        client.whisper(`@${userstate.username}, ููู ูููููู ูุณุงุนุฏุชูุ`);
      }
      
      client.say('#herodevil777', `ุชู ุฅุฑุณุงููุง ูู ูุจู ${userstate.username}: ${message}`);
    }
  });

  const moment = require('moment-timezone');

  // ุชุญุฏูุฏ ุงูุชูููุช ุงููุทููุจ
  const RiyadhTimezone = 'Asia/Riyadh';
  
  let startTime;
  let isTiming = false;
  let firstMessageSent = ''; // ุชุชุจุน ุฃูู ุฑุณุงูุฉ ุชู ุฅุฑุณุงููุง
  
  client.on('message', (channel, userstate, message, self) => {
    // ุชุญูู ููุง ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุดุฑููุง ุฃู ุตุงุญุจ ุงูุจุซ
    const isModerator = userstate['user-type'] === 'mod';
    const isBroadcaster = userstate.username === 'herodevil777';
  
    // ุชุฌุงูุจ ูุน ุงูุฃูุงูุฑ ููุง ูููุดุฑููู ูุตุงุญุจ ุงูุจุซ
    if (isModerator || isBroadcaster) {
      if (message.toLowerCase() === '!ุฑุงุญ') {
        if (!isTiming) {
          const currentTime = moment().tz(RiyadhTimezone).format('YYYY-MM-DD HH:mm:ss');
          firstMessageSent = `ุชุฑูู ุชุฑู ุงูุจุซ ูู ุงูุณุงุนุฉ : ${currentTime}`;
          startTime = moment().tz(RiyadhTimezone);
          isTiming = true;
          client.say(channel, firstMessageSent);
        } else {
          client.say(channel, firstMessageSent);
        }
      }
  
      if (message.toLowerCase() === '!ุฑุฌุน') {
        if (isTiming) {
          const currentTime = moment().tz(RiyadhTimezone).format('YYYY-MM-DD HH:mm:ss');
          const endTime = moment().tz(RiyadhTimezone);
          const uptime = moment.duration(endTime.diff(startTime));
          const hours = uptime.hours();
          const minutes = uptime.minutes();
          const seconds = uptime.seconds();
  
          const uptimeString = `${hours}h ${minutes}m ${seconds}s`;
  
          client.say(channel, `herodevil777 HAS BEEN AFK  ${uptimeString}`);
  
          startTime = null;
          isTiming = false;
          firstMessageSent = '';
        }
      }
    } else {
      // ุงูุฑุฏ ุงูุซุงูู ูุชุงุญ ููุฌููุน ุจููุณ ุงูููุช ุงูุฃูู
      if (message.toLowerCase() === '!ุฑุงุญ'  && firstMessageSent !== '') {
        client.say(channel, firstMessageSent);
      }
    }
  });
  


  /* const names = [
    "Herodevil777", "3nb77", "Xiriyadh", "Wizebot", "6_iqp", "Akafbi1", "EIADu", "Fssool__kenpachi", 
    "Shayeb7lo", "Rsh4485", "Nightbot", "R_kan1", "Ox_5p", "Omar_san", "3mo_90", "Xiarmin", 
    "Mogiwara_ahmed", "Moha99aa", "Narikoboy_777", "Salem_al3nzy", "Nawafi_3", "Qxs24", "01ella", 
    "7bvllet", "7ga_l", "Abdullah_n90", "Abdullahk_2", "Abo_saleh119", "Abu_hajoos", 
    "Ahahahahhhhahahahahah", "Ahmed10_ln", "Anotherttvviewer", "Bfnt", "Bin_talal", "Bngo80", 
    "Commanderroot", "Cora900", "Discord4small_streamers", "Dragigamee", "Drapsnatt", "Elbulldozer_", 
    "Elysian", "F_society_k", "Fahadksa200", "Foka", "Goonx71", "Gz_vlog", "Hsheshha", "Iinolx", 
    "Irampage88", "Joshua_322", "Jumaaqtr", "Justmazen_", "Jwan_si", "Kakaroto01t", "Kattah", 
    "Kenshiro_png", "Leveltt", "Life3jeep", "Liyaso", "Llyonko", "Mohammed1422116", "Mugiwaraboy56", 
    "Noxioushead", "Omardaas90", "Richard9oipjx", "Rogueg1rl", "Salx5", "Shankooti", "Shouq", 
    "Sita_90", "Streamers_social_space", "Uchiha_faris", "Vr2kan", "Zeinitsu", "Zooz41", "Zoro_nu_one", "MEEMY90", "mugiwara911", "Kisuke_237","Rv0la", "Rraed_"
  ];

  client.on('message', (channel, user, message, self) => {
    if(self) return;

  

  const randomName1 = names[Math.floor(Math.random() * names.length)];
  
  
  

  if(message == "ููุ") {
    client.say(channel, `@${randomName1} ุณุทุฑู ูู  @${user.username}`);
  }

  if(message == "ุฒูุงุฌุ") {
    client.say(channel, `@${randomName1} ุงุนุฑุณ ุนููู @${user.username}`);
  }

  if(message == "ุทูุงูุ") {
    client.say(channel, `@${randomName1} ุงูุช ุทุงูู @${user.username}`);
  }

  if(message == "ุจูุณุ") {
    client.say(channel, `@${randomName1} ุจูุณู @${user.username}`);
  }

  }) */

  /* 
  const moment = require('moment');
  
  // ุชุนุฑูู ูุนูููุงุช ุงูุจูุช ูุฅุนุฏุงุฏุงุช ุงูุงุชุตุงู ุจุฎุฏูุฉ ุชููุชุด
  const opts = {
    identity: {
      username: '3nb77',
      password: 'oauth:mig75mplrvicwifozvrbivl51h2amc' // ูููู ุงูุญุตูู ุนููู ูู https://twitchapps.com/tmi/
    },
    channels: [
      'herodevil777'
    ]
  };
  
  const targetTime = moment('2023-08-29 16:44:00');

// ุชูุณูู ุงูุฒูู
function formatDuration(duration) {
  return ` ${duration.hours()} ุณุงุนุงุช, ${duration.minutes()} ุฏูุงุฆู, ${duration.seconds()} ุซูุงูู`;
}

// ุฅุฑุณุงู ุงูููุช ูู 15 ุฏูููุฉ
const timeInterval = 15 * 60 * 1000; // ุจุงููููู ุซุงููุฉ (15 ุฏูููุฉ)
setInterval(() => {
  const currentTime = moment();
  const timeDifference = moment.duration(currentTime.diff(targetTime));
  const formattedTime = formatDuration(timeDifference);

  client.say(opts.channels[0], ` ูุฑ ูู ุงูููุช: ${formattedTime} โฐ`);
}, timeInterval);

client.on('message', (channel, userstate, message, self, viewers) => {
  if (self) return;

  if (message.toLowerCase() === 'ุจุฏุงุ') {
    const currentTime = moment();
    const timeDifference = moment.duration(currentTime.diff(targetTime));
    const formattedTime = formatDuration(timeDifference);

    client.say(opts.channels[0], ` ูุฑ ูู ุงูููุช: ${formattedTime} โฐ`);
  }}); */


   client.on('raided', (channel, username, viewers) => {
    const message = `ุดูุฑุงู ${username} ุนูู ุงูRaid ุจ ${viewers} ูุดุงูุฏ! ุฃููุงู ุจูู ุฌููุนูุง ูู ุงูุจุซ! ๐`;
    client.say(channel, message);
  });
  

  /* client.on('message', (target, context, msg, self) => {
    if (self) return; // ุชุฌุงูู ุฑุณุงุฆู ุงูุจูุช ุงูุฎุงุตุฉ

    // ุงูุชุญูู ูู ุงูุฃูุฑ ุงููุทููุจ
    if (msg.trim() === 'ููุ') {
        // ุฌูุจ ุงูุจูุงูุงุช ูู URL ุงููุญุฏุฏ ุจุฏูู ูุนุฑู ุงููุดุฑู
        fetch(`https://commands.garretcharp.com/twitch/chatter/${target.slice(1)}`)
            .then(response => response.text())
            .then(data => { 
                // ุฅุฑุณุงู ุงูุฑุฏ ูู ุงูุดุงุช
                client.say(target, `@${context.username} ุณุทุฑู ูู @${data}`);
            })
            .catch(err => {
                console.error(err);
                client.say(target, 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฌูุจ ุงูุจูุงูุงุช.');
            });
    }
    if (msg.trim() === 'ุจูุณุ') {
      // ุฌูุจ ุงูุจูุงูุงุช ูู URL ุงููุญุฏุฏ ุจุฏูู ูุนุฑู ุงููุดุฑู
      fetch(`https://commands.garretcharp.com/twitch/chatter/${target.slice(1)}`)
          .then(response => response.text())
          .then(data => { 
              // ุฅุฑุณุงู ุงูุฑุฏ ูู ุงูุดุงุช
              client.say(target, `@${context.username} ุจูุณู ${data}`);
          })
          .catch(err => {
              console.error(err);
              client.say(target, 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฌูุจ ุงูุจูุงูุงุช.');
          });
  }

  if (msg.trim() === 'ุฒูุงุฌุ') {
    // ุฌูุจ ุงูุจูุงูุงุช ูู URL ุงููุญุฏุฏ ุจุฏูู ูุนุฑู ุงููุดุฑู
    fetch(`https://commands.garretcharp.com/twitch/chatter/${target.slice(1)}`)
        .then(response => response.text())
        .then(data => { 
            // ุฅุฑุณุงู ุงูุฑุฏ ูู ุงูุดุงุช
            client.say(target, `@${context.username} ุงุนุฑุณ ุนููู @${data}`);
        })
        .catch(err => {
            console.error(err);
            client.say(target, 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฌูุจ ุงูุจูุงูุงุช.');
        });
}
if (msg.trim() === 'ุทูุงูุ') {
  // ุฌูุจ ุงูุจูุงูุงุช ูู URL ุงููุญุฏุฏ ุจุฏูู ูุนุฑู ุงููุดุฑู
  fetch(`https://commands.garretcharp.com/twitch/chatter/${target.slice(1)}`)
      .then(response => response.text())
      .then(data => { 
          // ุฅุฑุณุงู ุงูุฑุฏ ูู ุงูุดุงุช
          client.say(target, `@${context.username} ุงูุช ุทุงูู @${data}`);
      })
      .catch(err => {
          console.error(err);
          client.say(target, 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฌูุจ ุงูุจูุงูุงุช.');
      });
}
if (msg.trim() === 'ุญุถูุ') {
  // ุฌูุจ ุงูุจูุงูุงุช ูู URL ุงููุญุฏุฏ ุจุฏูู ูุนุฑู ุงููุดุฑู
  fetch(`https://commands.garretcharp.com/twitch/chatter/${target.slice(1)}`)
      .then(response => response.text())
      .then(data => { 
          // ุฅุฑุณุงู ุงูุฑุฏ ูู ุงูุดุงุช
          client.say(target, `@${context.username}  ุญุถูู @${data}`);
      })
      .catch(err => {
          console.error(err);
          client.say(target, 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฌูุจ ุงูุจูุงูุงุช.');
      });
}
}); */


  const usersList = [];
  // ุฑุตุฏ ุงูุฏุฑุฏุดุฉ ูุงูุชุนุฑู ุนูู ุฐูุฑ ุงููููุฉ "go"
  
  const EIADu = "EIADu"; // ุงุณู ุงููุณุชุฎุฏู ุงูุฐู ููููู ุงุณุชุฎุฏุงู ุฃูุฑ !ุญุฏุซ

client.on('message', (channel, userstate, message, self) => {
  // ุชุฌุงูู ุงูุฑุณุงุฆู ุงูุตุงุฏุฑุฉ ุนู ุงูุจูุช ููุณู
  if (self) return;

  if (message.includes('!ุญุฏุซ') && userstate.username.toLowerCase() === EIADu.toLowerCase()) {
    usersList.length = 0; // ููุฑุบ ุงููุงุฆูุฉ ุจุดูู ูุงูู
    client.say(channel, `@${EIADu} ุชู ุชุญุฏูุซ ุงููุงุฆูุฉ ุจูุฌุงุญ.`);
    return; // ุชุฌูุจ ุงุณุชูุฑุงุฑ ุงูุชูุงุนู ูุน ูุฐู ุงูุฑุณุงูุฉ
  }

  // ุฅุถุงูุฉ ุงุณู ุงููุณุชุฎุฏู ุฅูู ุงููุงุฆูุฉ ุฅุฐุง ูู ููู ููุฌูุฏูุง
  if (!usersList.includes(userstate.username)) {
    usersList.push(userstate.username);
    io.emit('updateUsersList', usersList);
  }

  if (message.includes('ูุดู') && userstate.username.toLowerCase() === EIADu.toLowerCase()) {
    client.say(channel, `${usersList}`);
  }

  const randomIndex = Math.floor(Math.random() * usersList.length);
    const randomUserName = usersList[randomIndex];

  // ุฅุฐุง ุชู ุฐูุฑ ูููุฉ "go" ูู ุงูุฑุณุงูุฉ
  if (message.includes('ููุ')) {
    // ุงุฎุชุฑ ุงุณููุง ุนุดูุงุฆููุง ูู ุงููุงุฆูุฉ ูุฃุฑุณูู ูู ุงูุฏุฑุฏุดุฉ
    client.say(channel, `@${randomUserName} ุนุทุงู ูู @${userstate.username}`);
  }
  if(message == "ุฒูุงุฌุ") {
    client.say(channel, `@${randomUserName} ุงุนุฑุณ ุนููู  @${userstate.username}`);
  }

  if(message == "ุทูุงูุ") {
    client.say(channel, `@${randomUserName} ุงูุช ุทุงูู @${userstate.username}`);
  }

  if(message == "ุจูุณุ") {
    client.say(channel, `@${randomUserName} ุจูุณู @${userstate.username}`);
  }

  if(message == "ุญุธูุ") {
    client.say(channel, `@${randomUserName} ุญุถูู @${userstate.username}`);
  }

  if(message == "ุจูุณูุ") {
    client.say(channel, `@${randomUserName} ุงุนุทุงู ุจูุณู @${userstate.username}`);
  }

  if(message == "ูุชูุ") {
    client.say(channel, `@${randomUserName} ูุจู ููุชูู ุงูุชุจู ุนูู ููุณู @${userstate.username}`);
  }

  if(message == "ุทุนูุ") {
    client.say(channel, `@${randomUserName} ุทุนูู @${userstate.username}`);
  }

});

setInterval(() => {
  usersList.length = 0; // ููุฑุบ ุงููุงุฆูุฉ ุจุดูู ูุงูู
}, 6 * 60 * 60 * 1000); // 6 ุณุงุนุงุช ุจุงููููู ุซุงููุฉ


  setInterval(() => {
    if (usersList.length > 0) {
      const nonNightbotUsers = usersList.filter(username => username.toLowerCase() !== 'nightbot');
      if (nonNightbotUsers.length > 0) {
        const randomIndex = Math.floor(Math.random() * nonNightbotUsers.length);
        const randomUserName = nonNightbotUsers[randomIndex];
        client.say(channel,`@${randomUserName} ${list8[Math.floor(Math.random()*list8.length)]}`);
      }
    }
  }, 10 * 60 * 1000); // 10 ุฏูุงุฆู ุจุงููููู ุซุงููุฉ
  



  
/* const StreamlabsSocketClient = require('streamlabs-socket-client');

const twitchConfig = {
  identity: {
    username: '3nb77',
    password: 'oauth:mig75mplrvicwifozvrbivl51h2amc' // Generate this from https://twitchapps.com/tmi/
  },
  channels: ['EIADu']
};

const streamlabsConfig = {
  token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbiI6IkUxRTc4OEJGNTE1M0I3Q0M5QjQ3IiwicmVhZF9vbmx5Ijp0cnVlLCJwcmV2ZW50X21hc3RlciI6dHJ1ZSwidHdpdGNoX2lkIjoiMjgwNTYzNzA0In0.2uAjiPhE9gaCSqGIIh2fTEkrTaeOV6q639rz6VrgBFU' // Generate this from Streamlabs API
};

const streamlabs = new StreamlabsSocketClient(streamlabsConfig);
streamlabs.connect();

// ูุนุงูุฌ ููุงุดุชุฑุงูุงุช
client.on('subscription', (channel, username, methods, message, userstate) => {
  // ูู ุจุชูููุฐ ุงูุงุณุชุฌุงุจุฉ ุงูููุงุณุจุฉ ููุง
});

// ูุนุงูุฌ ููุชุจุฑุนุงุช
streamlabs.on('donation', eventData => {
  // ูู ุจุชูููุฐ ุงูุงุณุชุฌุงุจุฉ ุงูููุงุณุจุฉ ููุง
});

// ูุนุงูุฌ ููุจุชุงุช
client.on('cheer', (channel, userstate, message) => {
  // ูู ุจุชูููุฐ ุงูุงุณุชุฌุงุจุฉ ุงูููุงุณุจุฉ ููุง
});

streamlabs.on('donation', eventData => {
  const donationAmount = eventData.amount; // ุงูุชุฑุถ ุฃู ูุฐู ูู ูููุฉ ุงูุชุจุฑุน

  if (donationAmount >= 50) {
    // ุฒูุงุฏุฉ ุงูุชุงููุฑ ุจููุฏุงุฑ 5 ุฏูุงุฆู
  }
}); */



let currentWord = '';
let guessedLetters = [];
let wrongAttempts = 0;
const maxAttempts = 5;
let gameStarter = '';
let correctGuesser = '';
let gameTimer; // ุงููุคูุช ูุญุณุงุจ ุงูุฒูู

const wordsList = [
  'APPLE', 'ORANGE', 'BANANA', 'STRAWBERRY', 'WATERMELON',
  'PINEAPPLE', 'GRAPE', 'LEMON', 'PEACH', 'KIWI',
  'BLUEBERRY', 'BLACKBERRY', 'RASPBERRY', 'COCONUT', 'MANGO',
  'CHERRY', 'APRICOT', 'NECTARINE', 'PAPAYA', 'FIG',
  'PLUM', 'CANTALOUPE', 'HONEYDEW', 'LYCHEE', 'CARAMBOLA',
  'DRAGONFRUIT', 'PASSIONFRUIT', 'GUAVA', 'TANGERINE', 'LIME',
  'GRAPEFRUIT', 'JACKFRUIT', 'KIWANO', 'MANDARIN', 'PERSIMMON',
  'STARFRUIT', 'UGLIFRUIT', 'YUZU', 'ZUCCHINI', 'AVOCADO',
  'BROCCOLI', 'CARROT', 'CUCUMBER', 'EGGPLANT', 'GARLIC',
  'KALE', 'LETTUCE', 'MUSHROOM', 'ONION', 'PEPPER',
  'POTATO', 'PUMPKIN', 'SPINACH', 'SQUASH', 'TOMATO',
  'ARTICHOKE', 'ASPARAGUS', 'BEETROOT', 'CELERY', 'RADISH',
  'RHUBARB', 'TURNIP', 'WATERCRESS', 'BASIL', 'CILANTRO',
  'DILL', 'MINT', 'OREGANO', 'PARSLEY', 'ROSEMARY',
  'SAGE', 'THYME', 'CHAMOMILE', 'EUCALYPTUS', 'LAVENDER',
  'PEPPERMINT', 'SPEARMINT', 'VALERIAN', 'GINGER', 'TURMERIC',
  'CINNAMON', 'CLOVES', 'NUTMEG', 'ALLSPICE', 'CARDAMOM',
  'CORIANDER', 'FENNEL', 'SAFFRON', 'VANILLA', 'ANISE',
  'CHOCOLATE', 'CARAMEL', 'MARSHMALLOW', 'NUTELLA', 'PEANUT'
  // ูููููู ุฅุถุงูุฉ ุงููุฒูุฏ ูู ุงููููุงุช ููุง
];

function getRandomWord() {
  return wordsList[Math.floor(Math.random() * wordsList.length)];
}

function displayWord() {
  let display = '';
  const separator = 'แข '; // ุงูุฑูุฒ ุงูุฐู ุณูุชู ุงุณุชุฎุฏุงูู ุจูู ุงููููุงุช

  for (let letter of currentWord) {
    if (guessedLetters.includes(letter) || letter === ' ') {
      if (letter === ' ') {
        display += separator; // ุงุณุชุฎุฏุงู ุงูุฑูุฒ ุจุฏูุงู ูู ุงููุณุงูุชูู
      } else {
        display += letter + ' '; // ูุณุงูุฉ ูุงุญุฏุฉ ุจุนุฏ ูู ุญุฑู
      }
    } else {
      display += '_ ';
    }
  }
  return display.trim();
}

let gameTimerWords = {}; // ูุงุฆู ูุชุฎุฒูู ูุคูุชุงุช ูู ูุณุฎุฉ

function startTimerWords(channel) {
  clearTimeout(gameTimerWords); // ุฅูุบุงุก ุงููุคูุช ุงูุญุงูู ุฅุฐุง ูุงู ููุฏ ุงูุชุดุบูู
  gameTimerWords = setTimeout(() => {
    if (currentWord !== '') {
      const formattedWord = currentWord.replace(/\s/g, ''); // ุฅุฒุงูุฉ ุงููุณุงูุงุช
      client.say(channel, `Time's up! The word was: ${formattedWord}`);
      currentWord = '';
    }
  }, 90000); // 60 ุซุงููุฉ = ุฏูููุฉ ูุงุญุฏุฉ
}

client.on('message', (channel, tags, message, self) => {
  if (self) return;

  const sender = tags.username;

  if (message.toLowerCase() === '!word' && gameStarter === '') {
    gameStarter = sender;
    currentWord = getRandomWord().toUpperCase();
    guessedLetters = [];
    wrongAttempts = 0;
    correctGuesser = '';
    console.log(` ${currentWord} `);
    client.say(channel, `${gameStarter}, Let's start! The word is: ${displayWord()}`);
    startTimerWords(channel);
  } else {
    guessWord(channel, sender, message);
  }

  if (currentWord === '') {
    gameStarter = '';
    correctGuesser = '';
  }
});

function guessWord(channel, sender, message) {
  if (currentWord !== '' && sender === gameStarter) {
    const formattedMessage = message.replace(/\s/g, ''); // ุฅุฒุงูุฉ ุงููุณุงูุงุช
    if (formattedMessage.length === 1 && formattedMessage.match(/[a-zA-Z]/)) {
      // ุชุฎููู ุญุฑู
      const guessedLetter = formattedMessage.toUpperCase();
      handleGuessWord(channel, sender, guessedLetter);
    } else if (formattedMessage.length === currentWord.replace(/\s/g, '').length && formattedMessage.toUpperCase() === currentWord.replace(/\s/g, '')) {
      // ุชุฎููู ุงููููุฉ ูุงููุฉ
      handleGuessWord(channel, sender, currentWord.replace(/\s/g, ''));
    } else {
      client.say(channel, `${sender}, please enter a valid guess. Current word: ${displayWord()}`);
    }
  }
}

function handleGuessWord(channel, sender, guess) {
  if (!guessedLetters.includes(guess)) {
    guessedLetters.push(...guess);
    if (currentWord.replace(/\s/g, '').includes(guess)) {
      if (displayWord().indexOf('_') === -1) {
        winnersList.push(sender); // ุฅุถุงูุฉ ุงููุงุฆุฒ ุฅูู ูุงุฆูุฉ ุงููุงุฆุฒูู
        io.emit('updateWinnersList', winnersList); // ุชุญุฏูุซ ุงููููุน
        client.say(channel, `Congratulations, ${sender}! You guessed the word: ${currentWord}`);
        currentWord = '';
      } else {
        client.say(channel, `Good guess, ${sender}! Current word: ${displayWord()}`);
        correctGuesser = sender;
      }
    } else {
      wrongAttempts++;
      if (wrongAttempts < maxAttempts) {
        client.say(channel, `Wrong guess, ${maxAttempts - wrongAttempts} attempts left. Current word: ${displayWord()}`);
      } else {
        client.say(channel, `Sorry, ${gameStarter}! You lost. The word was: ${currentWord}`);
        currentWord = '';
      }
    }
  } else {
    client.say(channel, `${sender}, you've already guessed '${guess}'. Current word: ${displayWord()}`);
  }
}






let currentWord2 = '';
let guessedLetters2 = [];
let wrongAttempts2 = 0;
const maxAttempts2 = 5;
let gameStarter2 = '';
let correctGuesser2 = '';
let gameTimer2; // ุงููุคูุช ูุญุณุงุจ ุงูุฒูู

const wordsList2 = [
  'NARUTO', 'BLEACH', 'ONE PIECE', 'DRAGON BALL',
  'DEATH NOTE', 'MY HERO ACADEMIA', 'TOKYOGHOUL', 'FULLMETAL ALCHEMY', 'SWORDARTONLINE',
  'NEON GENESIS EVANGELION', 'FAIRYTAIL', 'POKEMON', 'ONE PUNCH MAN', 'HUNTER X HUNTER',
  'COWBOY BEBOP', 'BLACK CLOVER', 'DEMON SLAYER', 'BLENDERS', 'JOJOS BIZARRE ADVENTURE',
  'REZERO', 'GURRENLAGANN', 'STEINS GATE', 'ATTACK ON TITAN', 'YOUR NAME',
  'SPIRITED AWAY', 'PRINCESS MONONOKE', 'KIMI NO NAWA', 'JUJUTSU KAISEN', 'DARLING IN THE FRANXX',
  'FATE ZERO NIGHT', 'VIOLET EVERGARDEN', 'KONOSUBA', 'KILL LA KILL', 'FAIRY TAIL',
  'BLACK BUTLER', 'ASSASSINATION CLASSROOM', 'ANGEL BEATS', 'DEMON SLAYER', 'GINTAMA',
  'CODE GEASS', 'SOUL SUCKER PUNCH', 'DARLING IN THE FRANXX', 'STEINSGATE', 'DR STONE',
  'THE TATAMI GALAXY', 'TRIGUN', 'GREAT TEACHER ONIZUKA', 'COWBOY BEBOP', 'PROMISED NEVERLAND',
  'SERAPH OF END', 'NEON GENESIS EVANGELION', 'NORAGAMI', 'BUNGO STRAY DOGS',
  'TOKYO GHOUL', 'PARASYTE', 'MADE IN ABYSS', 'DEVILMAN CRYBABY', 'GURREN LAGANN',
  'FIRE FORCE', 'MOB PSYCHO', 'HIGH SCORE GIRL', 'ERASED', 'DOROHEDORO',
  'LAND OF THE LUSTROUS', 'BLACK LAGOON', 'DANGANRONPA', 'AJIN', 'MAGI',
  'OVERLORD', 'FLCL', 'DURARARA', 'HAIKYU', 'BLACK CLOVER',
  'CLANNAD', 'BACCANO', 'KILLING STALKING', 'GANGSTA', 'BERSERK',
  'TOKYO RAVENS', 'ELFEN LIED', 'KAKEGURUI', 'CLAYMORE', 'FRUITS BASKET',
  'YURI ON ICE', 'HIGH SCHOOL DXD', 'PUELLA MAGI MADOKA MAGICA', 'SAILOR MOON', 'PSYCHO PASS',
  'STUDIO GHIBLI', 'DEATH PARADE', 'SPACE BROTHERS', 'SPACE DANDY', 'NANATSU NO TAIZAI',
  'WATAMOTE', 'HELLSING', 'KUROKO NO BASKET', 'SAIKI K', 'MARCH COMES IN LIKE A LION',
  'HIGH SCHOOL OF THE DEAD', 'ANGEL BEATS', 'TENGEN TOPPA GURREN LAGANN', 'FATE STAY NIGHT', 'DRIFTERS','DETECTIVE CONAN'
  // ูููููู ุฅุถุงูุฉ ุงููุฒูุฏ ูู ุงูุฃุณูุงุก ููุง
];

function getRandomWord2() {
  return wordsList2[Math.floor(Math.random() * wordsList2.length)];
}

function displayWord2() {
  let display = '';
  const separator = 'แข '; // ุงูุฑูุฒ ุงูุฐู ุณูุชู ุงุณุชุฎุฏุงูู ุจูู ุงููููุงุช

  for (let letter of currentWord2) {
    if (guessedLetters2.includes(letter) || letter === ' ') {
      if (letter === ' ') {
        display += separator; // ุงุณุชุฎุฏุงู ุงูุฑูุฒ ุจุฏูุงู ูู ุงููุณุงูุชูู
      } else {
        display += letter + ' '; // ูุณุงูุฉ ูุงุญุฏุฉ ุจุนุฏ ูู ุญุฑู
      }
    } else {
      display += '_ ';
    }
  }
  return display.trim();
}

let gameTimerAnime = {}; // ูุงุฆู ูุชุฎุฒูู ูุคูุชุงุช ูู ูุณุฎุฉ

function startTimerAnime(channel) {
  clearTimeout(gameTimerAnime); // ุฅูุบุงุก ุงููุคูุช ุงูุญุงูู ุฅุฐุง ูุงู ููุฏ ุงูุชุดุบูู
  gameTimerAnime = setTimeout(() => {
    if (currentWord2 !== '') {
      const animeName = currentWord2.replace(/\s/g, ''); // ุฅุฒุงูุฉ ุงููุณุงูุงุช
      client.say(channel, `Time's up for Anime! The anime was: ${animeName}`);
      currentWord2 = '';
    }
  }, 90000); // 60 ุซุงููุฉ = ุฏูููุฉ ูุงุญุฏุฉ
}

client.on('message', (channel, tags, message, self) => {
  if (self) return;

  const sender2 = tags.username;

  if (message.toLowerCase() === '!anime' && gameStarter2 === '') {
    gameStarter2 = sender2;
    currentWord2 = getRandomWord2().toUpperCase();
    guessedLetters2 = [];
    wrongAttempts2 = 0;
    correctGuesser2 = '';
    console.log(` ${currentWord2} `);
    client.say(channel, `${gameStarter2}, Let's start! The anime is: ${displayWord2()}`);
    startTimerAnime(channel);
  } else {
    guessAnime(channel, sender2, message);
  }

  if (currentWord2 === '') {
    gameStarter2 = '';
    correctGuesser2 = '';
  }
});

function guessAnime(channel, sender, message) {
  if (currentWord2 !== '' && sender === gameStarter2) {
    const formattedMessage = message.replace(/\s/g, ''); // ุฅุฒุงูุฉ ุงููุณุงูุงุช
    if (formattedMessage.length === 1 && formattedMessage.match(/[a-zA-Z]/)) {
      // ุชุฎููู ุญุฑู
      const guessedLetter2 = formattedMessage.toUpperCase();
      handleGuess(channel, sender, guessedLetter2);
    } else if (formattedMessage.length === currentWord2.replace(/\s/g, '').length && formattedMessage.toUpperCase() === currentWord2.replace(/\s/g, '')) {
      // ุชุฎููู ุงููููุฉ ูุงููุฉ
      handleGuess(channel, sender, currentWord2.replace(/\s/g, ''));
    } else {
      client.say(channel, `${sender}, please enter a valid guess. Current anime: ${displayWord2()}`);
    }
  }
}

function handleGuess(channel, sender, guess) {
  if (!guessedLetters2.includes(guess)) {
    guessedLetters2.push(...guess);
    if (currentWord2.replace(/\s/g, '').includes(guess)) {
      if (displayWord2().indexOf('_') === -1) {
        winnersList.push(sender); // ุฅุถุงูุฉ ุงููุงุฆุฒ ุฅูู ูุงุฆูุฉ ุงููุงุฆุฒูู
        io.emit('updateWinnersList', winnersList); // ุชุญุฏูุซ ุงููููุน
        client.say(channel, `Congratulations, ${sender}! You guessed the anime: ${currentWord2}`);
        currentWord2 = '';
      } else {
        client.say(channel, `Good guess, ${sender}! Current anime: ${displayWord2()}`);
        correctGuesser2 = sender;
      }
    } else {
      wrongAttempts2++;
      if (wrongAttempts2 < maxAttempts2) {
        client.say(channel, `Wrong guess, ${maxAttempts2 - wrongAttempts2} attempts left. Current anime: ${displayWord2()}`);
      } else {
        client.say(channel, `Sorry, ${gameStarter2}! You lost. The anime was: ${currentWord2}`);
        currentWord2 = '';
      }
    }
  } else {
    client.say(channel, `${sender}, you've already guessed '${guess}'. Current anime: ${displayWord2()}`);
  }
}


  

let currentWordArabic = '';
let guessedLettersArabic = [];
let wrongAttemptsArabic = 0;
const maxAttemptsArabic = 5;
let gameStarterArabic = '';
let correctGuesserArabic = '';
let gameTimerArabic; // ุงููุคูุช ูุญุณุงุจ ุงูุฒูู

const wordsListArabic = ['ููุฒ', 'ูุงูุฌู', 'ูุฑุงููุฉ','ููุฉ ุงูููุฑูุฉ', 'ููุฒู',
 'ุบุงุจุฉ', 'ุฌุฏูู', 'ุชููุงุฒ', 'ุฌุฏุงุฑ', 'ุฌู', 'ุญุงุณูุจ', 'ูุงุชู', 'ุดุจูุฉ',
'ูุงูุฐุฉ', 'ุณุงุนุฉ', 'ูุฐูุฑุฉ', 'ููู', 'ูุชุงุจ', 'ูุทุงุฑ', 'ุทุงุฆุฑุฉ', 'ุณูููุฉ',
'ุญููุจุฉ', 'ููุชุงุญ', 'ุณูู', 'ูุฑุด', 'ูุจูุฉ', 'ูุฌูุฉ', 'ููุฑ', 'ุจุญูุฑุฉ', 'ููุฑ',
'ุดูุงู', 'ุฏูู', 'ูุฑุดุงุฉ', 'ูุนุฌูู', 'ุดุงูุจู', 'ุตุงุจูู', 'ุญุงูู', 'ุณุชุงุฑุฉ',
'ูุทุนุฉ', 'ุทุจู', 'ููุฌุงู', 'ุตุญู', 'ูุตุฉ', 'ุญูู', 'ุดุฌุฑุฉ', 'ูุฑุฏุฉ', 'ุชูุงุญุฉ',
'ุจุฑุชูุงูุฉ', 'ูุฑุงููุฉ', 'ุฌุงูุนุฉ', 'ูุงูุณ', 'ูุจุณุฉ', 'ููุฏู', 'ุฌูุฒููุฏ',
'ุชููุฒููู', 'ุงูุงุฑุฉ', 'ุดูุณ', 'ุจุญุฑ', 'ุฌุจู', 'ูุงุฏู', 'ุญุฏููุฉ', 'ุฒูุฑุฉ', 'ุฌุฐุน',
'ุณุญุงุจุฉ', 'ูุทุฑ', 'ุซูุฌ', 'ุฑูุญ', 'ุนุงุตูุฉ', 'ุฑุนุฏ', 'ุจุฑู', 'ูุฏููุฉ', 'ูุฑูุฉ',
'ุฏุงุฑ', 'ุทุงููุฉ', 'ูุฑุณู', 'ุจุงุจ', 'ุณูุงุฑุฉ', 'ุฏุฑุงุฌุฉ', 'ุณูุงุฑุฉ', 'ุทุจูุนุฉ',
'ูุทุงุฑ', 'ุญุงููุฉ', 'ูุทุงุฑ', 'ูุญุทุฉ', 'ูุณุชุดูู', 'ูุฏุฑุณุฉ', 'ุฌุงูุนุฉ', 'ููุชุจุฉ',
'ูุณุฌุฏ', 'ูููุณุฉ', 'ูุนุจุฏ', 'ุณูู', 'ูุญู', 'ูุทุนู', 'ูุงููู', 'ููุฏู', 'ูุณุฑุญ',
'ูุชุญู', 'ุญููุงูุงุช', 'ููุชุฒู', 'ุญููุฉ', 'ุฒูุงู', 'ุชุฎุฑุฌ', 'ููุฑุฌุงู', 'ุฃูุนุงุจ',
'ูุชุงุจ', 'ูุฌูุฉ', 'ุตุญููุฉ', 'ุฑูุงูุฉ', 'ูุตุฉ', 'ุดุนุฑ', 'ุชุงุฑูุฎ', 'ุฌุบุฑุงููุง',
'ุนูู', 'ุฑูุงุถุฉ', 'ูุฑุฉ', 'ุญุฐุงุก', 'ูููุต', 'ุณุฑูุงู', 'ุฌููุฒ', 'ูุจุนุฉ', 'ูุธุงุฑุงุช',
'ูุงุชู', 'ุดุงุดุฉ', 'ูุงููุฑุง', 'ุณูุงุนุงุช', 'ูุงูุณ', 'ููู', 'ูุญูุธุฉ',
'ุญููุจุฉ', 'ูุธูุฉ', 'ุจุทุงูุฉ', 'ุทุนุงู', 'ุดุฑุงุจ', 'ูุงููุฉ', 'ุฎุถุงุฑ', 'ูุญู', 'ุญููู',
'ุดููููุงุชุฉ'];

function getRandomWordArabic() {
  return wordsListArabic[Math.floor(Math.random() * wordsListArabic.length)];
}

function displayWordArabic() {
  let display = '';
  const separator = 'แข '; // ุงูุฑูุฒ ุงูุฐู ุณูุชู ุงุณุชุฎุฏุงูู ุจูู ุงููููุงุช

  for (let letter of currentWordArabic) {
    if (guessedLettersArabic.includes(letter) || letter === ' ') {
      if (letter === ' ') {
        display += separator; // ุงุณุชุฎุฏุงู ุงูุฑูุฒ ุจุฏูุงู ูู ุงููุณุงูุชูู
      } else {
        display += letter + ' '; // ูุณุงูุฉ ูุงุญุฏุฉ ุจุนุฏ ูู ุญุฑู
      }
    } else {
      display += '_ ';
    }
  }
  return display.trim();
}

let gameTimerWordsArabic = {}; // ูุงุฆู ูุชุฎุฒูู ูุคูุชุงุช ูู ูุณุฎุฉ

function startTimerWordsArabic(channel) {
  clearTimeout(gameTimerWordsArabic); // ุฅูุบุงุก ุงููุคูุช ุงูุญุงูู ุฅุฐุง ูุงู ููุฏ ุงูุชุดุบูู
  gameTimerWordsArabic = setTimeout(() => {
    if (currentWordArabic !== '') {
      const formattedWord = currentWordArabic.replace(/\s/g, ''); // ุฅุฒุงูุฉ ุงููุณุงูุงุช
      client.say(channel, `ุงูุชูู ุงูููุช! ุงููููุฉ ูุงูุช: ${formattedWord}`);
      currentWordArabic = '';
    }
  }, 90000); // 60 ุซุงููุฉ = ุฏูููุฉ ูุงุญุฏุฉ
}

client.on('message', (channel, tags, message, self) => {
  if (self) return;

  const sender = tags.username;

  if (message.toLowerCase() === '!ูููุฉ' && gameStarterArabic === '') {
    gameStarterArabic = sender;
    currentWordArabic = getRandomWordArabic();
    guessedLettersArabic = [];
    wrongAttemptsArabic = 0;
    correctGuesserArabic = '';
    console.log(` ${currentWordArabic} `);
    client.say(channel, `${gameStarterArabic}, ููุง ูุจุฏุฃ! ุงููููุฉ ูู: ${displayWordArabic()}`);
    startTimerWordsArabic(channel);
  } else {
    guessWordArabic(channel, sender, message);
  }

  if (currentWordArabic === '') {
    gameStarterArabic = '';
    correctGuesserArabic = '';
  }
});

function guessWordArabic(channel, sender, message) {
  if (currentWordArabic !== '' && sender === gameStarterArabic) {
    const formattedMessage = message.replace(/\s/g, ''); // ุฅุฒุงูุฉ ุงููุณุงูุงุช
    if (formattedMessage.length === 1 && formattedMessage.match(/[ุก-ู]/)) {
      // ุชุฎููู ุญุฑู
      const guessedLetter = formattedMessage.toUpperCase();
      handleGuessWordArabic(channel, sender, guessedLetter);
    } else if (formattedMessage.length === currentWordArabic.replace(/\s/g, '').length && formattedMessage.toUpperCase() === currentWordArabic.replace(/\s/g, '')) {
      // ุชุฎููู ุงููููุฉ ูุงููุฉ
      handleGuessWordArabic(channel, sender, currentWordArabic.replace(/\s/g, ''));
    } else {
      client.say(channel, `${sender}, ุงูุฑุฌุงุก ุฅุฏุฎุงู ุชุฎููู ุตุญูุญ. ุงููููุฉ ุงูุญุงููุฉ: ${displayWordArabic()}`);
    }
  }
}

function handleGuessWordArabic(channel, sender, guess) {
  if (!guessedLettersArabic.includes(guess)) {
    guessedLettersArabic.push(...guess);
    if (currentWordArabic.replace(/\s/g, '').includes(guess)) {
      if (displayWordArabic().indexOf('_') === -1) {
        winnersList.push(sender); // ุฅุถุงูุฉ ุงููุงุฆุฒ ุฅูู ูุงุฆูุฉ ุงููุงุฆุฒูู
        io.emit('updateWinnersList', winnersList); // ุชุญุฏูุซ ุงููููุน
        client.say(channel, `ุชูุงูููุงุ ${sender}! ููุฏ ุญุฒุฑุช ุงููููุฉ : ${currentWordArabic}`);
        currentWordArabic = '';
      } else {
        client.say(channel, `ุชุฎููู ุฌูุฏุ ${sender}! ุงููููุฉ ุงูุญุงููุฉ : ${displayWordArabic()}`);
        correctGuesserArabic = sender;
      }
    } else {
      wrongAttemptsArabic++;
      if (wrongAttemptsArabic < maxAttemptsArabic) {
        client.say(channel, `ุชุฎููู ุฎุงุทุฆุ ${maxAttemptsArabic - wrongAttemptsArabic} ูุญุงููุงุช ูุชุจููุฉ. ุงููููุฉ ุงูุญุงููุฉ : ${displayWordArabic()}`);
      } else {
        client.say(channel, `ุนุฐุฑูุงุ ${gameStarterArabic}! ููุฏ ุฎุณุฑุช. ูุงูุช ุงููููุฉ : ${currentWordArabic}`);
        currentWordArabic = '';
      }
    }
  } else {
    client.say(channel, `${sender}, ููุฏ ููุช ุจุชุฎููู '${guess}'. ุงููููุฉ ุงูุญุงููุฉ : ${displayWordArabic()}`);
  }
}






/* 
const axios = require('axios');


let streamStartTime = Date.now();
let currentDuration = 0;

client.connect();

client.on('message', (channel, tags, message, self) => {
    if (self) return;

    if (message.toLowerCase() === '!uptime') {
        const now = Date.now();
        const uptime = now - streamStartTime;
        const hours = Math.floor(uptime / 3600000);
        const minutes = Math.floor((uptime % 3600000) / 60000);
        client.say(channel, `ุงูููุช ููุฐ ุจุฏุก ุงูุจุซ: ${hours} ุณุงุนุฉ ู ${minutes} ุฏูููุฉ.`);
    }
});

function increaseStreamDuration(minutesToAdd) {
    currentDuration += minutesToAdd;
    // ููุง ููููู ุฅุถุงูุฉ ุงูุฅุฌุฑุงุกุงุช ุงููุงุฒูุฉ ุนูุฏ ุฒูุงุฏุฉ ูุฏุฉ ุงูุจุซ ูุซู ุชุญุฏูุซ ุงูุนุฑุถ ุฃู ุฅุนูุงู ุงูุฒูุงุฏุฉ.
}

// ูุชู ุงุณุชุฏุนุงุก ูุฐู ุงููุธููุฉ ุนูุฏ ุงุณุชูุงู ุชุจุฑุน ุฃู ุฏุนู ูุงูู
function onDonationReceived(amount) {
    const minutesToAdd = amount / 5; // ุนูู ุณุจูู ุงููุซุงู: ุฒูุงุฏุฉ 5 ุฏูุงุฆู ููู ูุญุฏุฉ ูุงููุฉ
    increaseStreamDuration(minutesToAdd);
}

// ูู ุจุชุญุฏูุซ ูุฐุง ุงููุชุบูุฑ ุจุงูููุช ุงููููุถู ุจุดูู ููุงุฆู
let elapsedTime = "00:00";

// ุชุญุฏูุซ ูุต ุงูุนุฏุงุฏ ุงูุฒููู ูู ุซุงููุฉ
setInterval(() => {
    // ูู ุจุชุญุฏูุซ elapsedTime ุจุงูููุช ุงููููุถู ุงูุฌุฏูุฏ ุจุตูุบุฉ ููุงุณุจุฉ (ูุซูุง: "HH:mm:ss")
    // ููููู ุงุณุชุฎุฏุงู Date.now() ุฃู ุฃู ููุทู ูุญุณุงุจ ุงูููุช ุงููููุถู
    // ูุซุงู: elapsedTime = calculateElapsedTime();
    
    // ูู ุจุชุญุฏูุซ ุงููุต ูุนุฑุถ ุงูููุช ุงููููุถู ุงูุฌุฏูุฏ
    document.getElementById('ุงุณู-ูุตุฏุฑ-ุงููุต').innerText = `ุงูููุช ุงููููุถู: ${elapsedTime}`;
}, 1000); // ุชุญุฏูุซ ูู ุซุงููุฉ (1000 ูููู ุซุงููุฉ)
 */






const fs = require('fs');



const timeFilePath = './time.json';

// ูุฑุงุกุฉ ุงูููุช ูู ุงูููู ุฅุฐุง ูุงู ููุฌูุฏูุงุ ูุฅูุง ุชุนููู ุงูููุช ุงูุงูุชุฑุงุถู
let startTime2;
if (fs.existsSync(timeFilePath)) {
  const timeData = JSON.parse(fs.readFileSync(timeFilePath, 'utf8'));
  startTime2 = moment.tz(timeData, 'Asia/Riyadh');
} else {
  startTime2 = moment.tz('2024-04-12 9:13:35', 'Asia/Riyadh'); // ุชุนููู ุงูููุช ุงููุญุฏุฏ ุจุชูููุช ุงูุฑูุงุถ
}

// ุญูุธ ุงูููุช ุฅูู ุงูููู
const saveTimeToFile = () => {
  fs.writeFileSync(timeFilePath, JSON.stringify(startTime2.format()), 'utf8');
};

// ุงูุชูุงุนู ูุน ุงูุฑุณุงุฆู
client.on('message', (channel, userstate, message, self) => {
  const commandArabic = '!ูุฑ';
  const commandEnglish = '!time';
  const commandDayArabic = '!ููู';
  const commandDayEnglish = '!day';
  const increaseCommand = '!ุฒูุฏ';
  const decreaseCommand = '!ููุต';

  const isMod = userstate.mod || userstate['user-type'] === 'mod';

  if (
    message.toLowerCase() === commandArabic ||
    message.toLowerCase() === commandEnglish
  ) {
    const currentTime = moment();
    const duration = moment.duration(currentTime.diff(startTime2));
    const hours = Math.floor(duration.asHours());
    const minutes = Math.floor(duration.asMinutes()) - hours * 60;
    const seconds = Math.floor(duration.asSeconds()) - hours * 3600 - minutes * 60;

    let timePassed = `${hours} ุณุงุนุฉ ู ${minutes} ุฏูููุฉ ู ${seconds} ุซุงููุฉ`;
    let responseMessage = '';

    if (message.toLowerCase() === commandEnglish) {
      timePassed = `${hours} hours, ${minutes} minutes, and ${seconds} seconds`;
      responseMessage = ` ${timePassed} `;
    } else {
      responseMessage = ` ููุฏ ูุฑู ูู ุงูููุช ${timePassed} `;
    }

    client.say(channel, responseMessage);
  } else if (message.toLowerCase() === commandDayArabic) {
    const currentTime = moment();
    const duration = moment.duration(currentTime.diff(startTime2));
    const days = Math.floor(duration.asDays());
    const hours = Math.floor(duration.asHours()) % 24;
    const minutes = Math.floor(duration.asMinutes()) % 60;
    const seconds = Math.floor(duration.asSeconds()) % 60;
    let timePassed2 = `${days} ููู ู ${hours} ุณุงุนุฉ ู ${minutes} ุฏูููุฉ ู ${seconds} ุซุงููุฉ`;
    client.say(channel, ` ููุฏ ูุฑู ${timePassed2}  `);
  } else if (message.toLowerCase() === commandDayEnglish) {
    const currentTime = moment();
    const duration = moment.duration(currentTime.diff(startTime2));
    const days = Math.floor(duration.asDays());
    const hours = Math.floor(duration.asHours()) % 24;
    const minutes = Math.floor(duration.asMinutes()) % 60;
    const seconds = Math.floor(duration.asSeconds()) % 60;
    timePassed3 = `${days} days, ${hours} hours, ${minutes} minutes, and ${seconds} seconds`;
    client.say(channel, ` ${timePassed3}  `);
  } else if (message.startsWith(increaseCommand)) {
    if (!isMod) {
      client.say(channel, ` ูุนู ุงุฎูู ูุด ุฒูุฏ ู ููุต ุงูุฑุฌุงุก ุงูุงุชุตุงู ูู ููุช ูุงุญู  `);
      return;
    }
    const timeToAdd = message.slice(increaseCommand.length).trim().split(' ');
    if (timeToAdd.length < 2) {
      client.say(channel, `ุงูุฑุฌุงุก ุฅุถุงูุฉ ุนุฏุฏ ุงูุณุงุนุงุช ุฃู ุงูุฏูุงุฆู ุฃู ุงูุซูุงูู.`);
      return;
    }
    let time = moment.duration();
    for (let i = 0; i < timeToAdd.length; i += 2) {
      const value = parseInt(timeToAdd[i]);
      const unit = timeToAdd[i + 1];
      if (unit.includes('ุณุงุนุฉ')) {
        time.add(value, 'hours');
      } else if (unit.includes('ุฏูููุฉ')) {
        time.add(value, 'minutes');
      } else if (unit.includes('ุซุงููุฉ')) {
        time.add(value, 'seconds');
      }
    }
    startTime2.subtract(time); // ุชูููู ุงูููุช ุงููุจุฏุฆู ูุฒูุงุฏุฉ ุงูููุช ุงููููุถู
    saveTimeToFile();
    client.say(channel, `ุชูุช ุฒูุงุฏุฉ ุงูููุช ุงููููุถู ุจููุฏุงุฑ ${time.humanize()}`);
  } else if (message.startsWith(decreaseCommand)) {
    if (!isMod) {
      client.say(channel, `ูุนู ุงุฎูู ูุด ุฒูุฏ ู ููุต ุงูุฑุฌุงุก ุงูุงุชุตุงู ูู ููุช ูุงุญู `);
      return;
    }
    const timeToRemove = message.slice(decreaseCommand.length).trim().split(' ');
    if (timeToRemove.length < 2) {
      client.say(channel, `ุงูุฑุฌุงุก ุฅุถุงูุฉ ุนุฏุฏ ุงูุณุงุนุงุช ุฃู ุงูุฏูุงุฆู ุฃู ุงูุซูุงูู.`);
      return;
    }
    let time = moment.duration();
    for (let i = 0; i < timeToRemove.length; i += 2) {
      const value = parseInt(timeToRemove[i]);
      const unit = timeToRemove[i + 1];
      if (unit.includes('ุณุงุนุฉ')) {
        time.add(value, 'hours');
      } else if (unit.includes('ุฏูููุฉ')) {
        time.add(value, 'minutes');
      } else if (unit.includes('ุซุงููุฉ')) {
        time.add(value, 'seconds');
      }
    }
    startTime2.add(time); // ุฒูุงุฏุฉ ุงูููุช ุงููุจุฏุฆู ูุชูููู ุงูููุช ุงููููุถู
    saveTimeToFile();
    client.say(channel, `ุชู ุชูููู ุงูููุช ุงููููุถู ุจููุฏุงุฑ ${time.humanize()}`);
  }
});






// ุงูุชุนุงูู ูุน ุงูุฑุณุงุฆู ุงูุนุงุฏูุฉ
client.on('message', (channel, userstate, message, self) => {
  if (self || !message.startsWith('!ุงุญุณุจ')) {
      return;
  }

  // ูุตู ุงูุฃูุฑ ูุงููููุฉ ูู ุงูุฑุณุงูุฉ
  const parts = message.split(' ');
  const amount = parseInt(parts[1]);
  const currencyType = parts[2] ? parts[2].toLowerCase() : '';
  const timeUnit = parts[3] ? parts[3].toLowerCase() : 'ุซูุงูู'; // ุงูุชุฑุงุถู ุฅูู ุซูุงูู

  // ุงูุชุญูู ูู ูุฌูุฏ ุงููููุฉ
  if (!amount || !currencyType) {
      client.say(channel, 'ูู ุชุญุฏุฏ ุงููููุฉ ุฃู ููุน ุงูุนููุฉ.');
      return;
  }

  // ุญุณุงุจ ุงูุฒูู ูุฅุฑุณุงู ุงูุฑุฏ
  const totalSeconds = calculateTime(amount, currencyType);
  const formattedTime = convertTime(totalSeconds, timeUnit, amount, currencyType);
  client.say(channel, formattedTime);
});


// ุงูุฏุงูุฉ ูุญุณุงุจ ุงูุฒูู ุจูุงุกู ุนูู ุงูููู ุงููุนุทุงุฉ
function calculateTime(amount, currencyType) {
  let timeInSeconds;

  switch (currencyType) {
      case 'ุฏููุงุฑ':
          timeInSeconds = amount * 100;
          break;
      case 'ุจุชุณ':
          timeInSeconds = amount * 1.2;
          break;
      case 'ุชูุฑ1':
          timeInSeconds = amount * 200;
          break;
      case 'ุชูุฑ2':
          timeInSeconds = amount * 250;
          break;
      case 'ุชูุฑ3':
          timeInSeconds = amount * 300;
          break;
      default:
          return 'ูุฑุฌู ุชุญุฏูุฏ ููุน ุงูุนููุฉ (ุฏููุงุฑุ ุจุชุณุ ุชูุฑ1ุ ุชูุฑ2ุ ุชูุฑ3)';
  }

  return timeInSeconds;
}

// ุงูุฏุงูุฉ ูุชุญููู ุงูููุช ุฅูู ุงูุฏูุงุฆู ุฃู ุงูุณุงุนุงุช ุฃู ุงูุซูุงูู ูุน ุงูุฑุฏ ุงููุทููุจ
function convertTime(totalSeconds, timeUnit, amount, currencyType) {
  let timeInDesiredUnit;
  let unitLabel;
/* 
  // ุงูุชุนุงูู ูุน ุงูุชุดุฌูุนุงุช (Cheer)
client.on('cheer', (channel, userstate) => {
  const bits = parseInt(userstate.bits);

  // ุญุณุงุจ ุงูููุช ุจูุงุกู ุนูู ุงูุจุชุณ
  const totalSeconds = calculateTime(bits, 'ุจุชุณ');
  const formattedTime = convertTime(totalSeconds, 'ุซูุงูู', bits, 'ุจุชุณ');

  // ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุฅูู ุงูุดุงุช
  client.say(channel, `  ุงูููุช ุงูููุงุจู ูู ${totalSeconds/60} ุฏูููุฉ `);
}); */


  switch (timeUnit) {
      case 'ุฏูุงุฆู':
          timeInDesiredUnit = totalSeconds / 60;
          unitLabel = 'ุฏูููุฉ';
          break;
      case 'ุซูุงูู':
      default:
          timeInDesiredUnit = totalSeconds;
          unitLabel = 'ุซุงููุฉ';
          break;
  }

  return `ุงูููุช ุงูููุงุจู ูู ${amount} ${currencyType} ูู ${timeInDesiredUnit} ${unitLabel}`;
}


const math = require('mathjs');

client.on('message', (channel, userstate, message, self) => {
  // ุชุฌูุจ ุงูุชูุงุนู ูุน ุฑุณุงุฆู ุงูุจูุช ููุณู
  if (self) return;

  // ุงูุชุญูู ูู ุฃูุฑ ุฑูุงุถู
  if (message.startsWith('!clc')) {
      // ุงุณุชุฎุฑุงุฌ ุงูุนูููุฉ ุงูุฑูุงุถูุฉ ูู ุงูุฑุณุงูุฉ
      const operation = message.substring(5).trim();

      try {
          // ุญุณุงุจ ุงูุนูููุฉ ุงูุฑูุงุถูุฉ ุจุงุณุชุฎุฏุงู mathjs ูุฅุฑุณุงู ุงููุชูุฌุฉ
          const result = math.evaluate(operation);
          client.say(channel, `ุงููุชูุฌุฉ: ${result}`);
      } catch (error) {
          // ูู ุญุงูุฉ ูุฌูุฏ ุฃู ุฎุทุฃ ุฃุซูุงุก ุงูุชูููู
          client.say(channel, `ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุญุณุงุจ ุงูุนูููุฉ.`);
      }
  }
});


const words = [ 
  'ููุฒู', 'ุบุงุจุฉ', 'ุฌุฏูู', 'ุชููุงุฒ', 'ุฌุฏุงุฑ', 'ุฌู', 'ุญุงุณูุจ', 'ูุงุชู', 'ุดุจูุฉ',
  'ูุงูุฐุฉ', 'ุณุงุนุฉ', 'ูุฐูุฑุฉ', 'ููู', 'ูุชุงุจ', 'ูุทุงุฑ', 'ุทุงุฆุฑุฉ', 'ุณูููุฉ',
  'ุญููุจุฉ', 'ููุชุงุญ', 'ุณูู', 'ูุฑุด', 'ูุจูุฉ', 'ูุฌูุฉ', 'ููุฑ', 'ุจุญูุฑุฉ', 'ููุฑ',
  'ุดูุงู', 'ุฏูู', 'ูุฑุดุงุฉ', 'ูุนุฌูู', 'ุดุงูุจู', 'ุตุงุจูู', 'ุญุงูู', 'ุณุชุงุฑุฉ',
  'ูุทุนุฉ', 'ุทุจู', 'ููุฌุงู', 'ุตุญู', 'ูุตุฉ', 'ุญูู', 'ุดุฌุฑุฉ', 'ูุฑุฏุฉ', 'ุชูุงุญุฉ',
  'ุจุฑุชูุงูุฉ', 'ูุฑุงููุฉ', 'ุฌุงูุนุฉ', 'ูุงูุณ', 'ูุจุณุฉ', 'ููุฏู', 'ุฌูุฒููุฏ',
  'ุชููุฒููู', 'ุงูุงุฑุฉ', 'ุดูุณ', 'ุจุญุฑ', 'ุฌุจู', 'ูุงุฏู', 'ุญุฏููุฉ', 'ุฒูุฑุฉ', 'ุฌุฐุน',
  'ุณุญุงุจุฉ', 'ูุทุฑ', 'ุซูุฌ', 'ุฑูุญ', 'ุนุงุตูุฉ', 'ุฑุนุฏ', 'ุจุฑู', 'ูุฏููุฉ', 'ูุฑูุฉ',
  'ุฏุงุฑ', 'ุทุงููุฉ', 'ูุฑุณู', 'ุจุงุจ', 'ุณูุงุฑุฉ', 'ุฏุฑุงุฌุฉ', 'ุณูุงุฑุฉ', 'ุณูููุฉ',
  'ูุทุงุฑ', 'ุญุงููุฉ', 'ูุทุงุฑ', 'ูุญุทุฉ', 'ูุณุชุดูู', 'ูุฏุฑุณุฉ', 'ุฌุงูุนุฉ', 'ููุชุจุฉ',
  'ูุณุฌุฏ', 'ูููุณุฉ', 'ูุนุจุฏ', 'ุณูู', 'ูุญู', 'ูุทุนู', 'ูุงููู', 'ููุฏู', 'ูุณุฑุญ',
  'ูุชุญู', 'ุญููุงูุงุช', 'ููุชุฒู', 'ุญููุฉ', 'ุฒูุงู', 'ุชุฎุฑุฌ', 'ููุฑุฌุงู', 'ุฃูุนุงุจ',
  'ูุชุงุจ', 'ูุฌูุฉ', 'ุตุญููุฉ', 'ุฑูุงูุฉ', 'ูุตุฉ', 'ุดุนุฑ', 'ุชุงุฑูุฎ', 'ุฌุบุฑุงููุง',
  'ุนูู', 'ุฑูุงุถุฉ', 'ูุฑุฉ', 'ุญุฐุงุก', 'ูููุต', 'ุณุฑูุงู', 'ุฌููุฒ', 'ูุจุนุฉ', 'ูุธุงุฑุงุช',
  'ูุงุชู', 'ุดุงุดุฉ', 'ูุงููุฑุง', 'ุณูุงุนุงุช', 'ูุงูุณ', 'ููู', 'ูุญูุธุฉ',
  'ุญููุจุฉ', 'ูุธูุฉ', 'ุจุทุงูุฉ', 'ุทุนุงู', 'ุดุฑุงุจ', 'ูุงููุฉ', 'ุฎุถุงุฑ', 'ูุญู', 'ุญููู',
  'ุดููููุงุชุฉ'
  // ููููู ุฅุถุงูุฉ ุงููุฒูุฏ ูู ุงููููุงุช ุงูุนุฑุจูุฉ ููุง
];

let chosenWord = '';
let correctAnswerGiven = false;
let gameStoppedManually = false;
let timesSent = 0;
let sentHints = [];
let stopSending = false;
let gameStarted = false;
let hintInterval;
let gameTimeout;

function shuffle(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
}

function restartGame() {
    clearInterval(hintInterval);
    clearTimeout(gameTimeout);
    timesSent = 0;
    sentHints = [];
    stopSending = false;
    gameStarted = false;
    correctAnswerGiven = false;
    gameStoppedManually = false;
}

function startGame() {
    if (gameStarted) return;

    restartGame();  // ุชุฃูุฏ ูู ุฅุนุงุฏุฉ ุชุนููู ูู ุดูุก ูุจู ุจุฏุก ุงููุนุจุฉ

    chosenWord = words[Math.floor(Math.random() * words.length)];
    client.say(channel, `ูุนุจุฉ ุชุฎููู ุงููููุฉ ุจุฏุฃุช! ุญุงูู ุชุฎูู ุงููููุฉ ุงููู ุจููุฑ ูููุง ููู 30 ุซุงููุฉ ุจุฑุณู ุชูููุญ.`); 

    const hints = [
        `ุงูุชูููุญ: ุงููููุฉ ุชุชููู ูู ${chosenWord.length} ุญุฑูู.`,
        `ุงูุชูููุญ: ุฃูู ุญุฑู ูู ุงููููุฉ ูู { ${chosenWord.charAt(0)} }.`,
        `ุงูุชูููุญ: ุขุฎุฑ ุญุฑู ูู ุงููููุฉ ูู { ${chosenWord.charAt(chosenWord.length - 1)} }.`
    ];

    const shuffledHints = shuffle(hints);
    sendHint(shuffledHints);

    hintInterval = setInterval(() => {
        if (!stopSending && timesSent < shuffledHints.length) {
            sendHint(shuffledHints);
        }
    }, 30000);

    gameTimeout = setTimeout(() => {
        if (!stopSending && !correctAnswerGiven) { 
            client.say(channel, `ููุฃุณูุ ุงูุชูู ุงูููุช! ุงููููุฉ ูุงูุช { ${chosenWord} }.`);
            restartGame();
            stopGame();
        }
    }, 90000);

    gameStarted = true;
}

function sendHint(hints) {
    const hint = hints[timesSent];
    client.say(channel, hint);
    sentHints.push(hint);
    timesSent++;
}

function stopGame() {
    clearInterval(hintInterval);
    clearTimeout(gameTimeout);
    gameStarted = false;
    correctAnswerGiven = false;
    gameStoppedManually = true;
    stopSending = true;
}

client.on('chat', (channel, user, message, self) => {
    if (self) return;

    if (message.trim() === '!ุชุฎููู') {
        if (!gameStarted) {
            startGame();
        } else {
            client.say(channel, `@${user.username} ุนุฐุฑูุงุ ุงููุนุจุฉ ุดุบุงูุฉ ุจุงููุนู!`);
        }
    }

    if (message.trim() === '!ุชููู') {
        stopGame();
    }

    if (gameStarted && message === chosenWord) {
        correctAnswerGiven = true;
        client.say(channel, `@${user.username} ุตุญูุญ! ุงูุฅุฌุงุจุฉ ูู { ${chosenWord} }.`);
        winnersList.push(user.username);
        io.emit('updateWinnersList', winnersList); // ุชุญุฏูุซ ุงููููุน
        restartGame();
        stopGame();
    }
});



// ุงูุงุณุชูุงุน ุฅูู ุงูุฑุณุงุฆู ูู ุงูุดุงุช
client.on('message', (target, context, msg, self) => {
  if (self) return; // ุชุฌุงูู ุฑุณุงุฆู ุงูุจูุช ุงูุฎุงุตุฉ

  // ุงูุชุญูู ูู ุงูุฃูุฑ ุงููุทููุจ
  if (msg.trim() === '!ูุฑุฏุฉ') {
      // ุฌูุจ ุงูุจูุงูุงุช ูู URL ุงููุญุฏุฏ ุจุฏูู ูุนุฑู ุงููุดุฑู
      fetch(`https://commands.garretcharp.com/twitch/chatter/${target.slice(1)}`)
          .then(response => response.text())
          .then(data => {
              // ุฅุฑุณุงู ุงูุฑุฏ ูู ุงูุดุงุช
              client.say(target, data);
          })
          .catch(err => {
              console.error(err);
              client.say(target, 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฌูุจ ุงูุจูุงูุงุช.');
          });
  }
});




// ุฎุฑูุทุฉ ุงูุงุณุชุจุฏุงู
const charMap = {
    'h': 'ุง',
    'g': 'ู',
    ']': 'ุฏ',
    '[': 'ุฌ',
    'p': 'ุญ',
    'o': 'ุฎ',
    'i': 'ู',
    'u': 'ุน',
    'y': 'ุบ',
    't': 'ู',
    'r': 'ู',
    'e': 'ุซ',
    'w': 'ุต',
    'q': 'ุถ',
    '`': 'ุฐ',
    '\'': 'ุท',
    ';': 'ู',
    'l': 'ู',
    'k': 'ู',
    'j': 'ุช',
    'f': 'ุจ',
    'd': 'ู',
    's': 'ุณ',
    'a': 'ุด',
    '/': 'ุธ',
    '.': 'ุฒ',
    ',': 'ู',
    'm': 'ุฉ',
    'n': 'ู',
    'b': 'ูุง',
    'v': 'ุฑ',
    'c': 'ุค',
    'x': 'ุก',
    'z': 'ุฆ'
};

// ุฏุงูุฉ ูุชุจุฏูู ุงูุฃุญุฑู ูู ุงููุต
function replaceChars(text) {
    return text.split('').map(char => charMap[char] || char).join('');
}

// ุฏุงูุฉ ููุชุญูู ููุง ุฅุฐุง ูุงู ุงููุต ููุชูุจูุง ุจุงูุฃุญุฑู ุงูุนุฑุจูุฉ ุจุงููุงูู
function isArabicText(text) {
  return /^[\u0600-\u06FF\s]+$/.test(text);
}

// ุงูุฑุฏ ุนูู ุงูุฑุณุงุฆู
client.on('message', (channel, tags, message, self) => {
    if(self) return;

    // ุงูุชุญูู ููุง ุฅุฐุง ูุงูุช ุงูุฑุณุงูุฉ ุชุญุชูู ุนูู ุงูุฃูุฑ "ุจุฏู"
    const command = "ุจุฏู";
    if (message.startsWith(command)) {
        // ุงุณุชุฎุฑุงุฌ ุงููุต ุจุนุฏ ุงูุฃูุฑ "ุจุฏู"
        const textToReplace = message.slice(command.length);
        if (isArabicText(textToReplace)) {
          // ุฅุฐุง ูุงู ุงููุต ููุชูุจูุง ุจุงูุฃุญุฑู ุงูุฅูุฌููุฒูุฉ ุจุงููุงูู
          client.say(channel, `@${tags.username},  ููุงูู ูุถุจูุท ูุง ุญุจูุจูุง  `);
      } else {

        // ุชุทุจูู ุงุณุชุจุฏุงู ุงูุฃุญุฑู
        const replacedMessage = replaceChars(textToReplace);

        // ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุงููุนุฏูุฉ ูู ุงูุฏุฑุฏุดุฉ
        client.say(channel, ` ุงููู ูููู ( ${replacedMessage} )`);
      }
    }
});



// ุฎุฑูุทุฉ ุงูุงุณุชุจุฏุงู ุจุงูุนูุณ
const charMapReverse = {
    'ุง': 'h',
    'ู': 'g',
    'ุฏ': ']',
    'ุฌ': '[',
    'ุญ': 'p',
    'ุฎ': 'o',
    'ู': 'i',
    'ุน': 'u',
    'ุบ': 'y',
    'ู': 't',
    'ู': 'r',
    'ุซ': 'e',
    'ุต': 'w',
    'ุถ': 'q',
    'ุฐ': '`',
    'ุท': '\'',
    'ู': ';',
    'ู': 'l',
    'ู': 'k',
    'ุช': 'j',
    'ุจ': 'f',
    'ู': 'd',
    'ุณ': 's',
    'ุด': 'a',
    'ุธ': '/',
    'ุฒ': '.',
    'ู': ',',
    'ุฉ': 'm',
    'ู': 'n',
    'ูุง': 'b',
    'ุฑ': 'v',
    'ุค': 'c',
    'ุก': 'x',
    'ุฆ': 'z'
};

// ุฏุงูุฉ ูุชุจุฏูู ุงูุฃุญุฑู ูู ุงููุต ุจุงูุนูุณ
function replaceCharsReverse(text) {
    return text.split('').map(char => charMapReverse[char] || char).join('');
}

// ุฏุงูุฉ ููุชุญูู ููุง ุฅุฐุง ูุงู ุงููุต ููุชูุจูุง ุจุงูุฃุญุฑู ุงูุฅูุฌููุฒูุฉ ุจุงููุงูู
function isEnglishText(text) {
    return /^[a-zA-Z\s]+$/.test(text);
}

// ุงูุฑุฏ ุนูู ุงูุฑุณุงุฆู
client.on('message', (channel, tags, message, self) => {
    if(self) return;

    // ุงูุชุญูู ููุง ุฅุฐุง ูุงูุช ุงูุฑุณุงูุฉ ุชุญุชูู ุนูู ุงูุฃูุฑ "ุจุฏู"
    const command = "replace";
    if (message.startsWith(command)) {
        // ุงุณุชุฎุฑุงุฌ ุงููุต ุจุนุฏ ุงูุฃูุฑ "ุจุฏู"
        const textToReplace = message.slice(command.length);

        if (isEnglishText(textToReplace)) {
            // ุฅุฐุง ูุงู ุงููุต ููุชูุจูุง ุจุงูุฃุญุฑู ุงูุฅูุฌููุฒูุฉ ุจุงููุงูู
            client.say(channel, `@${tags.username},  ููุงูู ูุถุจูุท ูุง ุญุจูุจูุง  `);
        } else {
            // ุชุทุจูู ุงุณุชุจุฏุงู ุงูุฃุญุฑู ุจุงูุนูุณ
            const replacedMessage = replaceCharsReverse(textToReplace);

            // ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุงููุนุฏูุฉ ูู ุงูุฏุฑุฏุดุฉ
      client.say(channel, `he says ( ${replacedMessage} )`);
        }
    }
});




// ูุงุฆูุฉ ุงูุฃูุงูุฑ
let commands = {};

// ุชุญููู ุงูุฃูุงูุฑ ูู ููู
if (fs.existsSync('commands.json')) {
    commands = JSON.parse(fs.readFileSync('commands.json', 'utf8'));
}

// ุญูุธ ุงูุฃูุงูุฑ ุฅูู ููู
function saveCommands() {
    fs.writeFileSync('commands.json', JSON.stringify(commands, null, 2));
}

// ุนูุฏ ุงูุงุชุตุงู
client.on('connected', (addr, port) => {
    console.log(`* Connected to ${addr}:${port}`);
});

// ุนูุฏ ุงุณุชูุจุงู ุฑุณุงูุฉ
client.on('message', (channel, userstate, message, self) => {
    if (self) return;

    const args = message.split(' ');
    const command = args.shift().toLowerCase();

    // ุงูุชุญูู ูู ุงููุณุชุฎุฏู ูุฅุถุงูุฉ ุฃู ุญุฐู ุงูุฃูุงูุฑ
    const username = userstate['display-name'];

    // ุฅุถุงูุฉ ุฃูุฑ
    if (command === '!add' && username === 'EIADu') {
        const trigger = args.shift();
        const response = args.join(' ');

        if (trigger && response) {
            commands[trigger] = response;
            saveCommands();
            client.say(channel, `ุฃูุฑ ุฌุฏูุฏ ุฃุถูู: ${trigger}`);
        } else {
            client.say(channel, 'ุงุณุชุฎุฏุงู ุบูุฑ ุตุญูุญ. ุงูุตูุบุฉ: !add <trigger> <response>');
        }
    }

    // ุญุฐู ุฃูุฑ
    if (command === '!delete' && username === 'EIADu') {
        const trigger = args.shift();

        if (trigger && commands[trigger]) {
            delete commands[trigger];
            saveCommands();
            client.say(channel, `ุฃูุฑ ูุญุฐูู: ${trigger}`);
        } else {
            client.say(channel, 'ุงุณุชุฎุฏุงู ุบูุฑ ุตุญูุญ ุฃู ุงูุฃูุฑ ุบูุฑ ููุฌูุฏ.');
        }
    }

    // ุชูููุฐ ุงูุฃูุงูุฑ ูู ูุจู ุงูุฌููุน
    if (commands[command]) {
        client.say(channel, commands[command]);
    }
});

// ูุงุฆูุฉ ุงูุฑุณุงุฆู ุงูุนุดูุงุฆูุฉ
const messages = [
  // ุฑุณุงุฆู ุชุฑุญูุจูุฉ
  "ูุง ููุง ูุงููู! ๐",
  "ููุฑ ุงูุจุซ ุจูุฌูุฏูู! ๐",
  "ููู ุงูุญุงู ูุง ุฌูุงุนุฉุ ๐",
  "ุฃูููุง ูุณูููุง ุจุงูุฌููุน! ๐",
  "ูุฑุญุจูุง ูุง ุฃุจุทุงู! ๐ช",
  "ูุง ููุง ููููุ ุงูููู ุงูุฌู ุฑุงุฆุน! โ๏ธ",
  "ููู ุงูุฃููุฑ ูุนุงููุ ๐",
  "ูููุฑูู ุงูุจุซ ูููู! ๐",
  "ุฃููุงู ูุณููุงู ุจูู ุงููุดุงูุฏูู! ๐",
  "ุงููู ูุฏุฎู ูุงุฒู ูููู ูุฑุญุจุง! ๐",
  "ุญูุงูู ุงููู ูููู! ๐",
  "ุดุฎุจุงุฑููุ ููู ุงูููุณูุงุชุ ๐ญ",
  "ูุง ููุง ุจุงููุชุงุจุนูู ุงูุบุงููู! ๐",
  "ุฃูููุง ุจุงูุฌููุน ูู ุงูุจุซ ุงููุจุงุดุฑ! ๐ฅ",
  "ูููุฑูู ุงูุดุงุดุฉ ูุง ุญูููู! ๐",
  "ูุง ูุฑุงุญุจ ุจูู ุงููุชุงุจุนูู! ๐",
  "ุฃูููุง ุจูู ุงูููุฌูุฏูู! ๐โโ๏ธ",
  "ูุฑุญุจูุงุ ุฅู ุดุงุก ุงููู ุชููููุง ุจุฎูุฑ! ๐",
  "ููู ุงูุญุงูุ ุฅู ุดุงุก ุงููู ููููู ุฑุงุฆุน! โ๏ธ",
  "ูุง ูุฑุญุจุง ููุง ูุณููุง ุจุงูุฌููุน! ๐",
  "ูุฑุญุจูุง ุจูู ุฌููุนูุง ูู ุงูุจุซ! ๐",
  "ุฃููุงู ูุณููุงู ุจูู ูู ุฏุฎู! ๐",
  "ููุฑ ุงูุจุซ ุจูุฌูุฏูู ูุง ุญูููู! ๐",
  "ุฃูููุง ุจูู ุงููุดุงูุฏูู! ๐",
  "ูุง ููุง ุจุงููุงุณ ุงูุทูุจุฉ! ๐",
  "ูุฑุญุจูุง ุจุงูุฌููุน! ุฅู ุดุงุก ุงููู ุชููููุง ุจุฎูุฑ! โ๏ธ",
  "ููู ุงูุญุงู ูุง ุดุจุงุจุ ๐",
  "ุฃูููุง ูุณูููุง ุจุงูุฌููุน ูู ุงูุจุซ! ๐",
  "ูุฑุญุจูุง ุจูู ูู ุงูููุงุฉ! ๐",
  "ูููุฑูู ุงูุจุซ ูุง ุบุงูููู! ๐",
  
  // ุฑุณุงุฆู ุดูุฑ
  "ูุนุทููู ุงูุนุงููุฉ ุนูู ุงูุฏุนู! ๐",
  "ุดูุฑูุง ููู ูุงุญุฏ ุฏุนู ุงูููุงุฉ! ๐",
  "ููุฏุฑูู ููู ูู ุงูุฏุนูุ ุดูุฑูุง ูู ุงูููุจ! ๐",
  "ูุนุทููู ุฃูู ุนุงููุฉ ุนูู ูุฌูุฏูู ูุฏุนููู! ๐",
  "ุดูุฑูุง ููู ูุชุงุจุน ููุชุงุจุนุฉุ ุฃูุชู ุงูุฃุฑูุน! ๐ช",
  "ููููู ุดูุฑ ููู ุดุฎุต ููุง! ๐",
  "ูุนุทููู ุงูุนุงููุฉ ุนูู ุงูุชูุงุนู! ๐",
  "ุดูุฑูุง ูู ุงูููุจ ููู ูุงุญุฏ ูุฏุนููุง! ๐",
  "ุงููู ูุนุทููู ุงูุนุงููุฉ ุนูู ุงูุฏุนู ุงููุชูุงุตู! ๐",
  "ุดูุฑุงู ููู ุงููุชุงุจุนููุ ุฃูุชู ุงูุณูุฏ! ๐",
  "ูู ุงูุฏุนู ุงููู ูููุงู ูููู ูุญูุฒ ุจุดูู! ๐",
  "ููููู ุดูุฑ ููู ูุง ุบุงูููู! ๐",
  "ูุนุทููู ุฃูู ุนุงููุฉ ุนูู ูุฌูุฏูู ููุง! ๐",
  "ุดูุฑูุง ููู ูุงุญุฏ ุจูุญุถุฑ ุงูุจุซ! ๐",
  "ูุนุทููู ุงูุนุงููุฉ ุนูู ุงูุชูุงุฌุฏ ูุงูุฏุนู! ๐",
  "ูู ุงูุฏุนู ุงููู ูููุงู ูููู ูุฎูููุง ูููู! ๐",
  "ุดูุฑูุง ููู ูุชุงุจุน ููุชุงุจุนุฉุ ุฃูุชู ุงูุณูุฏ! ๐ช",
  "ุงููู ูุนุทููู ุงูุนุงููุฉ ุนูู ุฏุนููู ุงููุจูุฑ! ๐",
  "ููููู ุดูุฑ ููู ูุง ุบุงูููู! ๐",
  "ุดูุฑูุง ูู ุงูููุจ ููู ุดุฎุต ุจูุญุถุฑ ุงูุจุซ! ๐",
  "ูุนุทููู ุงูุนุงููุฉ ุนูู ุงูุชูุงุฌุฏ ูุงูุฏุนู! ๐",
  "ูู ุงูุฏุนู ุงููู ูููุงู ูููู ูุญูุฒ! ๐",
  "ููููู ุดูุฑ ููู ุงููุชุงุจุนูู ุงูุฃูููุงุก! ๐ช",
  "ุดูุฑุงู ููู ุดุฎุต ูุฏุนููุง ููุง! ๐",
  "ุดูุฑูุง ูููุ ุฃูุชู ุงูุฃุฑูุน ุฏุงุฆููุง! ๐",
  "ูุนุทููู ุงูุนุงููุฉ ุนูู ุงูุชูุงุนู ูุงูุฏุนู! ๐",
  "ุดูุฑูุง ููู ูุชุงุจุน ู ูุชุงุจุนุฉุ ุฃูุชู ุงูุณูุฏ! ๐ช",
  "ููููู ุดูุฑ ููู ุงููุชุงุจุนูู! ๐",
  "ุดูุฑูุง ูู ุงูููุจ ููู ูุงุญุฏ ุจูุญุถุฑ ุงูุจุซ! ๐",
  "ูุนุทููู ุงูุนุงููุฉ ุนูู ูุฌูุฏูู ููุง! ๐",
  
  // ุฑุณุงุฆู ุชุญููุฒูุฉ
  "ุชุฐูุฑูุง ุฏุงูููุงุ ุงููุฌุงุญ ูุง ูุฌู ุจุงูุณุงูู! ๐ช",
  "ูุงูู ุดูุก ูุณุชุญูู ูู ูุถุนุช ุนููู ุนููู! ๐",
  "ุฎููุง ุนูุฏูู ุซูุฉ ุจุงูููุณุ ุชูุฏุฑูุง ุชูุตููุง! ๐",
  "ุชุฐูุฑูุงุ ูู ุดูุก ูุจุฏุฃ ุจุฎุทูุฉ ุตุบูุฑุฉ! ๐ฃ",
  "ูุง ุชุณุชุณูููุงุ ุงููุฌุงุญ ูุฑูุจ ุฌุฏูุง! ๐ฏ",
  "ูู ูุง ุชุฒูุฏ ุงููุญุงููุงุชุ ุชุฒูุฏ ุงููุฑุต ูููุฌุงุญ! ๐",
  "ุฎููุง ูุฏููู ูุฏุงู ุนูููู ูุฑูุฒูุง ุนููู! ๐",
  "ูููุง ูุงู ุงูุทุฑูู ุฃุตุนุจุ ูุงู ุงููุฌุงุญ ุฃุญูู! ๐ช",
  "ูุงูู ุดูุก ูุณุชุญููุ ุชูุฏุฑูุง ุชูุตููุง ูุฃู ุดูุก! ๐",
  "ุชุฐูุฑูุงุ ูู ุฎุทูุฉ ุชูุฑุจูู ูู ุงููุฏู! ๐ฏ",
  "ุงูุฃูู ูู ุงููู ุจูุฎูู ุงููุณุชุญูู ูููู! ๐",
  "ุญุงูุธูุง ุนูู ุฅูุฌุงุจูุชููุ ุงูุทุฑูู ุทููู ููู ุงููุฌุงุญ ูุณุชุงูู! ๐",
  "ูุงูู ุดูุก ูุณุชุญูู ูู ุนูุฏู ุฅุตุฑุงุฑ ูุนุฒููุฉ! ๐ช",
  "ุฎููุง ุนูุฏูู ุซูุฉ ุจุฃููุณููุ ุงููุฌุงุญ ูุฑูุจ! ๐",
  "ุงูุทุฑูู ุทููู ููู ุงูุตุจุฑ ูู ุงูููุชุงุญ! ๐",
  "ุชุฐูุฑูุงุ ุงูุฅูุฌุงุจูุฉ ูู ุงููู ุจุชุญุฑูู ูุญู ุงููุฌุงุญ! ๐",
  "ูุงุชุณุชุณูููุง ุฃุจุฏูุงุ ูู ุฎุทูุฉ ุชูุฑุจูู ูู ูุฏููู! ๐ช",
  "ุงูุฃูู ุฅูู ุชุจุฏุฃุ ุงูุจุงูู ุจูุฌู ูุน ุงูููุช! ๐",
  "ุงูุฅุตุฑุงุฑ ูุงูุนุฒููุฉ ูู ุงูุฃุณุงุณ ูููุฌุงุญ! ๐",
  "ุฎููุง ุนูุฏูู ุซูุฉ ุจููุณููุ ูุชููููุง ุนูู ุงููู! ๐ช",
  "ุงูุทุฑูู ูููุงู ุชุญุฏูุงุชุ ููููู ูุฏูุง! ๐",
  "ูุงูู ุดูุก ูุณุชุญููุ ุจุณ ุงูููู ุชููููุง ูุตุฑูู! ๐",
  "ุชุฐูุฑูุงุ ูู ุฎุทูุฉ ุชูุฑุจูู ูู ุงููุฏู ุงููุจูุฑ! ๐ฏ",
  "ุงูุฃูู ูู ุงููู ุจูุฎูู ุงููุณุชุญูู ูููู! ๐",
  "ุญุงูุธูุง ุนูู ุฅูุฌุงุจูุชููุ ุงููุฌุงุญ ูุฑูุจ! ๐",
  "ูุงูู ุดูุก ูุณุชุญูู ูู ุนูุฏู ุฅุตุฑุงุฑ ูุนุฒููุฉ! ๐ช",
  "ุฎููุง ุนูุฏูู ุซูุฉ ุจููุณููุ ุงููุฌุงุญ ุจูุฏูู! ๐",
  "ุงูุทุฑูู ุทููู ููู ุงูุตุจุฑ ููุชุงุญ ุงููุฌุงุญ! ๐",
  "ุชุฐูุฑูุงุ ุงูุฅูุฌุงุจูุฉ ูู ุงููู ุจุชุญุฑูู ููุฃูุงู! ๐",
  "ูุง ุชุชููููุงุ ูู ุฎุทูุฉ ุชูุฑุจูู ูู ูุฏููู! ๐ช",

  // ูุตุงุฆุญ
  "ูุง ุชูุณูุง ุชุดุฑุจูุง ูุงุกุ ุงูุตุญุฉ ูููุฉ! ๐ง",
  "ุฎุฐูุง ุงุณุชุฑุงุญุฉ ุจูู ุงูุญูู ูุงูุขุฎุฑ! ๐",
  "ูุงุฑุณูุง ุฑูุงุถุฉ ุฎูููุฉ ูุชุฌุฏูุฏ ุงููุดุงุท! ๐โโ๏ธ",
  "ุชุฐูุฑูุง: ุตุญุฉ ุงูุนูู ุชุจุฏุฃ ูู ุตุญุฉ ุงูุฌุณู! ๐ช",
  "ูุง ุชุชุฑุฏุฏูุง ูู ุทูุจ ุงููุณุงุนุฏุฉ ุฅุฐุง ุงุญุชุฌุชููุง! ๐",
  "ุงูููู ุงูุฌูุฏ ูู ููุชุงุญ ุงููุฌุงุญ ูู ุงูููู ุงูุชุงูู! ๐ด",
  "ุญุงูุธูุง ุนูู ุชูุงุฒู ุจูู ุงูุนูู ูุงูุชุฑููู! โ๏ธ",
  "ุงุญุฑุตูุง ุนูู ุชูุงูู ูุฌุจุงุช ุตุญูุฉ! ๐",
  "ุงูุงุณุชุฑุฎุงุก ููู ูุงุณุชุนุงุฏุฉ ุงููุดุงุท! ๐",
  "ูุธููุง ููุชูู ุจุดูู ุฌูุฏ ูุชูุงุฏู ุงูุถุบูุท! โฐ",
  "ุฎุฐูุง ููุณ ุนููู ู ุงุณุชูุชุนูุง ุจุงููุญุธุฉ! ๐",
  "ุงูููู ุงููุงูู ูุถูู ูู ููู ูููุก ุจุงูุทุงูุฉ! ๐ด",
  "ูุง ุชูุณูุง ุชูุถูุง ููุช ูุน ุงูุนุงุฆูุฉ ูุงูุฃุตุฏูุงุก! ๐จโ๐ฉโ๐งโ๐ฆ",
  "ูุงุฑุณูุง ููุงูุฉ ุชุญุจููุง ูุชุฌุฏูุฏ ุงููุดุงุท! ๐จ",
  "ุงุนุชููุง ุจููุณููุ ุงูุตุญุฉ ุฃูููุง! ๐ช",
  "ุฎุฐูุง ุงุณุชุฑุงุญุฉ ูุตูุฑุฉ ูู ุณุงุนุฉ! ๐",
  "ุงูููู ุงูุฌูุฏ ููุชุงุญ ูููู ูุงุฌุญ! ๐",
  "ุชุฐูุฑูุงุ ุงูุตุญุฉ ุงูููุณูุฉ ูุง ุชูู ุฃูููุฉ ุนู ุงูุฌุณุฏูุฉ! ๐",
  "ุงุญุฑุตูุง ุนูู ุดุฑุจ ูููุงุช ูุงููุฉ ูู ุงููุงุก! ๐ง",
  "ูุง ุชูุณูุง ุฃุฎุฐ ูุณุท ูู ุงูุฑุงุญุฉ! ๐",
  "ุงููุดุงุท ุงูุจุฏูู ูุนุฒุฒ ูู ุตุญุชูู ุงูููุณูุฉ! ๐ช",
  "ุงุญุฑุตูุง ุนูู ุชูุงูู ูุฌุจุงุช ูุชูุงุฒูุฉ! ๐",
  "ุงูุงุณุชุฑุฎุงุก ูุงูุชุฃูู ููู ูุงุณุชุนุงุฏุฉ ุงูุทุงูุฉ! ๐",
  "ูุธููุง ููุชูู ูุชุญููู ุงูุชูุงุฒู ุจูู ุงูุนูู ูุงูุญูุงุฉ! โณ",
  "ุฎุฐูุง ููุณ ุนูููุ ูุฑูุฒูุง ุนูู ุงููุญุธุฉ ุงูุญุงููุฉ! ๐",
  "ุงูููู ุงููุงูู ูู ุณุฑ ุงููุดุงุท! ๐ด",
  "ุงุนุชููุง ุจููุณููุ ุงูุตุญุฉ ูู ุงูุซุฑูุฉ ุงูุญููููุฉ! ๐ช",
  "ูุงุฑุณูุง ุงูููุงูุงุช ุงููู ุชุญุจููุง ูุฅุนุงุฏุฉ ุดุญู ุงูุทุงูุฉ! ๐จ",
  "ูุง ุชูุณูุง ูุถุงุก ููุช ูุน ุงูุฃุญุจุงุจุ ุงูุญูุงุฉ ูุตูุฑุฉ! ๐"
];

// ูุชุบูุฑ ููุชุญูู ูู ุญุงูุฉ ุฅุฑุณุงู ุงูุฑุณุงุฆู
let sendMessages = false;
let intervalTime = 60000; // ุงูุฒูู ุงูุงูุชุฑุงุถู (1 ุฏูููุฉ)
let intervalId;

// ุชุดุบูู ุงูุฑุณุงุฆู ุงูุนุดูุงุฆูุฉ
function sendRandomMessage() {
  if (sendMessages) {
    const randomMessage = messages[Math.floor(Math.random() * messages.length)];
    client.say(channel, randomMessage);
  }
}

// ุงุณุชูุจุงู ุงูุฑุณุงุฆู ูู ุงูุดุงุช
client.on('message', (channel, tags, message, self) => {
  if (self) return;

  const lowerMessage = message.toLowerCase();
  
  // ุชูุนูู ุฅุฑุณุงู ุงูุฑุณุงุฆู ูุน ุชุญุฏูุฏ ุงูููุช ุนูุฏ ููู "ูููู"
  if (tags.username.toLowerCase() === 'eiadu' && lowerMessage.startsWith('!!')) {
    const parts = lowerMessage.split(' ');
    const timeInMinutes = parseInt(parts[1]);

    if (!isNaN(timeInMinutes) && timeInMinutes > 0) {
      intervalTime = timeInMinutes * 60000; // ุชุญููู ุงูุฏูุงุฆู ุฅูู ูููู ุซุงููุฉ
    } else {
      intervalTime = 60000; // ุฅุฐุง ูู ูุชู ุชุญุฏูุฏ ุฑููุ ุงุณุชุฎุฏู ุฏูููุฉ ูุงุญุฏุฉ
    }

    sendMessages = true;
    clearInterval(intervalId); // ุฅููุงู ุงููุคูุช ุงููุฏูู ุฅู ูุฌุฏ
    intervalId = setInterval(sendRandomMessage, intervalTime);
    client.say(channel, `${intervalTime / 60000}  ๐`);
  }

  // ุฅููุงู ุฅุฑุณุงู ุงูุฑุณุงุฆู ุนูุฏูุง ูููู EIADu "ุจูุจู"
  if (tags.username.toLowerCase() === 'eiadu' && lowerMessage === '--') {
    sendMessages = false;
    clearInterval(intervalId); // ุฅููุงู ุงููุคูุช
    client.say(channel, " ๐");
  }
});





// ูุงุฆูุฉ ุงููููุงุช ุงููุนุฏุฉ ูุณุจูุงู
const worList = [
    'apple', 'banana', 'chair', 'table', 'window', 'door', 'car', 'house', 'tree', 'river',
    'mountain', 'cloud', 'sky', 'star', 'moon', 'sun', 'water', 'fire', 'earth', 'wind',
    'bird', 'fish', 'cat', 'dog', 'horse', 'cow', 'chicken', 'mouse', 'elephant', 'lion',
    'tiger', 'bear', 'wolf', 'fox', 'rabbit', 'deer', 'monkey', 'kangaroo', 'giraffe',
    'zebra', 'penguin', 'shark', 'whale', 'dolphin', 'octopus', 'crab', 'lobster', 'snail', 'frog',
    'snake', 'lizard', 'spider', 'bee', 'butterfly', 'ant', 'fly', 'worm', 'leaf', 'flower', 'grass',
    'bush', 'forest', 'desert', 'beach', 'ocean', 'lake', 'pond', 'hill', 'valley', 'island', 'cave',
    'rock', 'stone', 'sand', 'mud', 'clay', 'soil', 'dust', 'smoke', 'ash', 'steam', 'cloud',
    'rain', 'snow', 'hail', 'sleet', 'thunder', 'lightning', 'storm', 'hurricane', 'tornado', 'flood',
    'earthquake', 'volcano', 'eruption', 'lava', 'magma', 'glacier', 'ice', 'snowflake', 'icicle', 'frost',
    'cold', 'hot', 'warm', 'cool', 'breeze', 'wind', 'gale', 'hurricane', 'typhoon', 'cyclone',
    'planet', 'comet', 'asteroid', 'meteor', 'satellite', 'space', 'galaxy', 'universe', 'blackhole',
    'time', 'light', 'shadow', 'mirror', 'reflection', 'glass', 'crystal', 'diamond', 'gold', 'silver',
    'bronze', 'copper', 'iron', 'steel', 'aluminum', 'metal', 'plastic', 'rubber', 'wood', 'paper',
    'cloth', 'cotton', 'silk', 'wool', 'leather', 'fur', 'skin', 'hair', 'nail', 'tooth',
    'bone', 'blood', 'muscle', 'heart', 'brain', 'lung', 'liver', 'stomach', 'kidney', 'skin',
    'eye', 'ear', 'nose', 'mouth', 'tongue', 'lip', 'tooth', 'chin', 'cheek', 'forehead',
    'hand', 'finger', 'thumb', 'nail', 'arm', 'elbow', 'shoulder', 'chest', 'back', 'spine',
    'leg', 'knee', 'foot', 'toe', 'ankle', 'heel', 'hip', 'thigh', 'calf', 'wrist', 'palm',
    'head', 'neck', 'face', 'eye', 'ear', 'nose', 'lip', 'tongue', 'chin', 'hair',
    'bottle', 'cup', 'plate', 'fork', 'knife', 'spoon', 'bowl', 'pot', 'pan', 'glass', 'jar'
];



// ุฅุถุงูุฉ ุฃูุฑ !randomwords
client.on('message', (channel, tags, message, self) => {
    if (self) return;

    if (message.toLowerCase() === 'ola' && username === 'EIADu') {
        // ุฎูุท ุงููุงุฆูุฉ ุนุดูุงุฆููุง ูุงุฎุชูุงุฑ 99 ูููุฉ
        let randomWords = worList.sort(() => 0.5 - Math.random()).slice(0, 99);

        // ุฅุฑุณุงู ุงููููุงุช ูุงุญุฏุฉ ุชูู ุงูุฃุฎุฑู ุจูุงุตู ุฒููู
        randomWords.forEach((word, index) => {
            setTimeout(() => {
                client.say(channel, word);
            }, index * 50); // ูุงุตู ุฒููู ูุฏุฑู 1000 ูููู ุซุงููุฉ (1 ุซุงููุฉ) ุจูู ูู ุฑุณุงูุฉ
        });
    }
});


const { OpenAI } = require('openai');

// ุฅุนุฏุงุฏ OpenAI API
const openai = new OpenAI({
    apiKey: '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', // ุงุณุชุจุฏู ุจููุชุงุญ API ุงูุฎุงุต ุจู
});

// ูููู ูุชุฎุฒูู ุณูุงู ุงููุญุงุฏุซุฉ
const conversationContext = {};

// ุฏุงูุฉ ูุชูุณูู ุงูุฑุณุงุฆู ุงูุทูููุฉ
function splitMessage(message, maxLength) {
    const parts = [];
    for (let i = 0; i < message.length; i += maxLength) {
        parts.push(message.substring(i, i + maxLength));
    }
    return parts;
}

// ุงูุงุณุชูุงุน ููุฑุณุงุฆู
client.on('message', async (channel, tags, message, self) => {
    if (self) return; // ุชุฌูุจ ุงูุฑุฏ ุนูู ุฑุณุงุฆู ุงูุจูุช ููุณู

    const username = tags.username.toLowerCase();

    // ุชุญูู ูู ุฃู ุงููุณุชุฎุฏู ูู "EIADu" ูุฃู ุงูุฑุณุงูุฉ ุชุญุชูู ุนูู "ุนูุจ"
    if (username === 'eiadu' && message.includes('#')) {
      if (!conversationContext[username]) {
          conversationContext[username] = [];
      }
      
        // ุฃุถู ุงูุฑุณุงูุฉ ุงูุญุงููุฉ ุฅูู ุงูุณูุงู
        conversationContext[username].push(message);
        
        try {
            // ุชูููุฏ ุฑุฏ ุจุงุณุชุฎุฏุงู OpenAI
            const response = await openai.chat.completions.create({
              model: 'gpt-3.5-turbo',
              messages: [
                  { role: 'system', content: 'You are a helpful assistant.' },
                  ...conversationContext[username].map(msg => ({ role: 'user', content: msg }))
              ],
              max_tokens: 300 // ูููู ุชุนุฏูู ูุฐุง ุงูุฑูู ุญุณุจ ุงูุญุงุฌุฉ
          });
          

            const reply = response.choices[0].message.content.trim();
            
            // ุชูุณูู ุงูุฑุฏ ุฅุฐุง ูุงู ุทูููุงู
            const replyParts = splitMessage(reply, 270);

            // ุฅุฑุณุงู ูู ุฌุฒุก ูู ุงูุฑุฏ ูู ุฑุณุงูุฉ ูููุตูุฉ
            for (const part of replyParts) {
                client.say(channel, `@${username}, ${part}`);
            }

            // ุชุญุฏูุซ ุงูุณูุงู ุจูุงุกู ุนูู ุงูุฑุฏ ุงูุฌุฏูุฏ
            conversationContext[username].push(reply);
        } catch (error) {
            if (error.response && error.response.status === 429) {
                console.error('Exceeded quota or rate limits.');
                client.say(channel, `@${username}, ูุนููุดุ ูุจุฏู ุฃููู ุชุฌุงูุฒุช ุงูุญุฏ ุงููุณููุญ ุจู ุงูุขู.`);
            } else {
                console.error(error);
                client.say(channel, `@${username}, ูุนููุด ุญุตู ุฎุทุฃ ูุฃูุง ุจุญุงูู ุฃุฌุงูุจ.`);
            }
        }
    }
});






const express = require('express');
const path = require('path');
const http = require('http');
const { Server } = require('socket.io');

const app = express();
const server = http.createServer(app);
const io = new Server(server);

app.use(express.static(path.join(__dirname, 'public')));

app.use(express.json()); // ุชุฃูุฏ ูู ูุถุน ูุฐุง ูุจู ุชุญุฏูุฏ ุงููุณุงุฑุงุช

app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// ุฏุงูุฉ ููุฑุงุกุฉ ุงูููุช ุงููููุถู ูู ููู time.json
function readElapsedTime() {
    try {
        const data = fs.readFileSync('time.json', 'utf-8');
        const { elapsedTime } = JSON.parse(data);
        return elapsedTime;
    } catch (error) {
        console.error('Error reading time.json:', error);
        return 'ุบูุฑ ูุชููุฑ'; // ูู ุญุงู ุญุฏูุซ ุฎุทุฃ ุฃุซูุงุก ูุฑุงุกุฉ ุงูููู
    }
}

// Endpoint to get attendance data
app.get('/attendance', (req, res) => {
  const attendanceFilePath = path.join(__dirname, 'attendance.json');
  if (fs.existsSync(attendanceFilePath)) {
      const data = fs.readFileSync(attendanceFilePath);
      res.json(JSON.parse(data));
  } else {
      res.json({});
  }
});

// ุฅุฑุณุงู ุงูููุช ุงููููุถู ุนูุฏ ุงุชุตุงู ุงููุณุชุฎุฏู
io.on('connection', (socket) => {
    console.log('client connected');

    // ุฅุฑุณุงู ุงูููุช ุงููููุถู ุนูุฏ ุงูุงุชุตุงู
    const elapsedTime = readElapsedTime();
    socket.emit('elapsedTime', elapsedTime);

    // ุฅุฑุณุงู ุญุงูุฉ ุงูุฃูุฑ ุงูุญุงููุฉ ุนูุฏ ุงูุงุชุตุงู
    socket.emit('messageCommandStatus', sendMessages);

    // ุฅุฑุณุงู ูุงุฆูุฉ ุงููุงุฆุฒูู ุงูุญุงููุฉ ุนูุฏ ุงูุงุชุตุงู
    socket.emit('updateWinnersList', winnersList);

    socket.emit('updateUsersList', usersList);

    socket.on('sendCommand', (command) => {
        client.say('herodevil777', command)
            .then(() => {
                socket.emit('botResponse', `ุชู ุฅุฑุณุงู ุงูุฑุณุงูุฉ: ${command}`);
            })
            .catch((error) => {
                socket.emit('botResponse', `ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุฑุณุงูุฉ: ${error.message}`);
            });
    });

socket.on('sendclosed', () => {
  // ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุฅูู ุงูุดุงุช ูู ุชููุชุด
  client.say(channel, 'soon');
});


    socket.on('toggleMessageCommand', () => {
        sendMessages = !sendMessages;

        if (sendMessages) {
            clearInterval(intervalId);
            intervalId = setInterval(sendRandomMessage, intervalTime);
        } else {
            clearInterval(intervalId);
        }

        io.emit('messageCommandStatus', sendMessages);

    });
});

app.use(express.json());
app.use(express.static('public'));

if (fs.existsSync(timeFilePath)) {
  const timeData = JSON.parse(fs.readFileSync(timeFilePath, 'utf8'));
  startTime2 = moment.tz(timeData, 'Asia/Riyadh');
} else {
  startTime2 = moment.tz('2024-04-12 9:13:35', 'Asia/Riyadh');
}

// Endpoint ููุญุตูู ุนูู ุงูููุช ุงููููุถู
app.get('/elapsed-time', (req, res) => {
  const currentTime = moment();
  const duration = moment.duration(currentTime.diff(startTime2));

  const days = Math.floor(duration.asDays());
  const hours = Math.floor(duration.asHours()) % 24;
  const minutes = Math.floor(duration.asMinutes()) % 60;
  const seconds = Math.floor(duration.asSeconds()) % 60;

  const timePassed = `${days} ููู ู ${hours} ุณุงุนุฉ ู ${minutes} ุฏูููุฉ ู ${seconds} ุซุงููุฉ`;
  res.json({ timePassed });
});

// Endpoint ูุชุนุฏูู ุงูููุช
app.post('/set-time', (req, res) => {
  const { days, hours, minutes, seconds } = req.body;

  // ุชุนููู ุงูููุช ุฅูู ุงูููู ุงูุฌุฏูุฏุฉ ุงููุฏุฎูุฉ
  const newTime = moment.tz('Asia/Riyadh').subtract({
    days: parseInt(days) || 0,
    hours: parseInt(hours) || 0,
    minutes: parseInt(minutes) || 0,
    seconds: parseInt(seconds) || 0,
  });

  startTime2 = newTime;
  saveTimeToFile();
  res.json({ message: 'ุชู ุชุญุฏูุซ ุงูููุช ุจูุฌุงุญ!' });
});

server.listen(3000, () => {
    console.log('Server running on http://localhost:3000');
});




let attendanceActive = false;
let attendanceList = [];
let attendanceCount = {};

// Load attendance data from file
const loadAttendanceData = () => {
    if (fs.existsSync('attendance.json')) {
        const data = fs.readFileSync('attendance.json');
        attendanceCount = JSON.parse(data);
    }
};

// Save attendance data to file
const saveAttendanceData = () => {
    fs.writeFileSync('attendance.json', JSON.stringify(attendanceCount, null, 2));
};

// Initialize attendance data on bot startup
loadAttendanceData();

// Command to start attendance tracking
client.on('message', (channel, userstate, message, self) => {
    if (self) return;

    const username = userstate['display-name'];
    const isModerator = userstate['user-type'] === 'mod';

    // Moderator starts attendance tracking with "!ุชุญุถูุฑ"
    if (message.trim() === 'ุชุญุถูุฑ' && (username === 'EIADu' || username === 'herodevil777')) {
      attendanceActive = true;
      attendanceList = [];
      client.say(channel, 'ุงูุชุญุถูุฑ ุจุฏุฃ! ูุฏูู 5 ุฏูุงุฆู ููุชุงุจุฉ "ุญุงุถุฑ" ุฃู "ููุฌูุฏ" ููุชุณุฌูู.');
  
      // End tracking after 5 minutes
      setTimeout(() => {
          attendanceActive = false;
          client.say(channel, 'ุงูุชูู ููุช ุงูุชุญุถูุฑ.');
      }, 5 * 60 * 1000);
  }
  

    // User responds with "ุญุงุถุฑ" or "ููุฌูุฏ"
    if (attendanceActive && (message.trim() === 'ุญุงุถุฑ' || message.trim() === 'ููุฌูุฏ')) {
        if (!attendanceList.includes(username)) {
            attendanceList.push(username);
            attendanceCount[username] = (attendanceCount[username] || 0) + 1;
            saveAttendanceData();  // Save data whenever someone responds
            client.say(channel, `${username} ุชู ุชุณุฌูู ุญุถูุฑู.`);
        } else {
            client.say(channel, `${username} ููุฏ ุชู ุชุณุฌูู ุญุถูุฑู ูุณุจููุง.`);
        }
    }

    // User checks their attendance count with "ุญุถูุฑูุ"
    if (message.trim() === 'ุญุถูุฑูุ') {
        const count = attendanceCount[username] || 0;
        client.say(channel, `${username} ูุฏูู ${count} ูุฑุงุช ุญุถูุฑ.`);
    }
});


